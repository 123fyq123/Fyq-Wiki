{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"welcome"},{"location":"404/","text":"404 not found","title":"\u8499\u7248"},{"location":"404/#404-not-found","text":"","title":"404 not found"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/BSGS/","text":"BSGS\u548c\u6269\u5c55BSGS \u6982\u8ff0 \u4e3b\u8981\u7528\u4e8e\u89e3\u51b3 \\(an=b(mod \\ p)\\) \u95ee\u9898\uff0c\u6c42\u89e3\u6700\u5c0f\u975e\u8d1f\u6574\u6570n\uff0c\u4f7f\u5176\u6ee1\u8db3\u5de6\u5f0f\uff0c\u666e\u901aBSGS\u6c42\u89e3a\u4e0ep\u4e92\u8d28\u7684\u60c5\u51b5\uff0c\u6269\u5c55BSGS\u53ef\u6c42\u89e3\u4e0d\u4e92\u8d28\u60c5\u51b5 \u666e\u901aBSGS \u89e3\u9898\u6b65\u9aa4 1.\u53d6m=ceil(sqrt(p))\uff08\u5411\u4e0a\u53d6\u6574\uff09\uff0c\u82e5\u89e3\u5b58\u5728\uff0c\u53ef\u4ee4n=i*m-j\uff0c\u5373\u6570\u5bf9(i,j)\u5b58\u5728 2. \\(an = b ( mod \\ p ) -> ai*m-j = b( mod \\ p ) -> ai*m = b*aj ( mod \\ p )\\) 3.\u518d0-m\u8303\u56f4\u5185\u679a\u4e3eb*aj\u7684\u503c\uff0c\u5e76\u7528hash\u8868\u5b58\u50a8j 4.\u57281-m\u8303\u56f4\u5185\u679a\u4e3eai m\u7684\u503c\uff0c\u5728hash\u8868\u4e2d\u67e5\u627e\uff0c\u82e5\u627e\u5230\uff0c\u5219\u8f93\u51fai m-j\uff0c\u53cd\u4e4b\u65e0\u7b54\u6848 \u4ee3\u7801\u6a21\u677f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 #include <bits/stdc++.h> #define int long long using namespace std ; int a , p , b ; unordered_map < int , int > mp ; int qpow ( int a , int n , int mod ) { int ans = 1 ; while ( n ) { if ( n & 1 ) ans = ans * a % mod ; a = a * a % mod ; n >>= 1 ; } return ans ; } int bsgs ( int a , int b , int p ) { a %= p ; b %= p ; if ( 1 == b % p ) return 0 ; //\u7279\u5224\u7ed3\u679c\u4e3a0\u7684\u60c5\u51b5 int m = ceil ( sqrt ( p )); int baj = 1 ; for ( int i = 0 ; i <= m ; i ++ ) { if ( i == 0 ) { baj = b % p ; mp [ baj ] = i ; continue ; } baj *= a ; baj %= p ; mp [ baj ] = i ; } int am = qpow ( a , m , p ); int tmp = 1 ; for ( int i = 1 ; i <= m ; i ++ ) //\u7531\u4e8e\u5047\u8bben\u4e3ai*m-j\uff0c\u82e5i\u4ece0\u5f00\u59cb\u679a\u4e3e\u5219\u6709\u53ef\u80fd\u8f93\u6570 { tmp *= am ; tmp %= p ; if ( mp . count ( tmp )) return i * m - mp [ tmp ]; } return -1 ; } signed main () { cin . tie ( 0 ); cout . tie ( 0 ); ios :: sync_with_stdio ( 0 ); while ( cin >> a >> p >> b ) { mp . clear (); if ( a == 0 && p == 0 && b == 0 ) break ; int ans = bsgs ( a , b , p ); if ( ans == -1 ) cout << \"No Solution\" << endl ; else cout << ans << endl ; } return 0 ; } \u6269\u5c55BSGS \u89e3\u9898\u6b65\u9aa4 1.\u5f53a\u4e0ep\u4e92\u8d28\u65f6\uff0c\u5957\u7528\u666e\u901aBSGS\u5373\u53ef 2.\u5f53a\u4e0ep\u4e0d\u4e92\u8d28\u65f6\uff0c\u8bbegcd\u4e3aa\u4e0ep\u7684\u6700\u5927\u516c\u7ea6\u6570\uff0c\u5bf9\u4e8e\u65b9\u7a0ban=b ( mod p ) \uff0c\u4e00\u5b9a\u6709 a/gcd * an-1 = b/gcd ( mod p/gcd )\u5b58\u5728\uff0c\u56e0\u6b64\u82e5b\u4e0d\u4e3agcd\u7684\u500d\u6570\uff0c\u5219\u65b9\u7a0b\u65e0\u89e3 3.\u5bf9\u4e8e\u65b0\u65b9\u7a0b \u4ee4 b/ gcd /( a / gcd) = b\u2019 , p/gcd = p\u2019 , \u7528\u9006\u5143\u5904\u7406b\u2019 , \u9012\u5f52\u6c42\u89e3\u5373\u53ef \u4ee3\u7801\u6a21\u677f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 #include <bits/stdc++.h> using namespace std ; #define int long long const int inf = 1e8 ; int a , p , b , x , y ; int qpow ( int a , int n , int mod ) { int ans = 1 ; while ( n ) { if ( n & 1 ) ans = ans * a % mod ; a = a * a % mod ; n >>= 1 ; } return ans ; } int exgcd ( int a , int b , int & x , int & y ) { if ( ! b ) { x = 1 ; y = 0 ; return a ; } int ans = exgcd ( b , a % b , x , y ); int tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return ans ; } unordered_map < int , int > mp ; int bsgs ( int a , int b , int p ) { mp . clear (); a = a % p ; //b=(b%p+p)%p; if ( 1 % p == b % p ) return 0 ; //\u7279\u5224\u7ed3\u679c\u4e3a0\u7684\u60c5\u51b5 int m = ceil ( sqrt ( p )); int baj = 1 ; for ( int i = 0 ; i <= m ; i ++ ) { if ( i == 0 ) { baj = b % p ; mp [ baj ] = i ; continue ; } baj *= a ; baj %= p ; mp [ baj ] = i ; } int am = qpow ( a , m , p ); int tmp = 1 ; for ( int i = 1 ; i <= m ; i ++ ) { tmp *= am ; tmp %= p ; if ( mp . count ( tmp )) return i * m - mp [ tmp ]; } return -1 ; } int exbsgs ( int a , int b , int p ) { b = ( b % p + p ) % p ; //\u4ee4b\u4e3a\u6b63 if ( 1 % p == b % p ) return 0 ; int gcd = exgcd ( a , p , x , y ); if ( gcd > 1 ) { if ( b % gcd ) return - inf ; exgcd ( a / gcd , p / gcd , x , y ); int a2 = a ; int b2 = b / gcd * x % ( p / gcd ); int p2 = p / gcd ; return exbsgs ( a2 , b2 , p2 ) + 1 ; } return bsgs ( a , b , p ); } signed main () { ios :: sync_with_stdio ( 0 ); while ( cin >> a >> p >> b ) { if ( ! a &&! b &&! p ) break ; int ans = exbsgs ( a , b , p ); if ( ans < 0 ) cout << \"No Solution\" << endl ; else cout << ans << endl ; } return 0 ; } \u7ecf\u5178\u4f8b\u9898 \u6d1b\u8c37P4861 \u6309\u94ae \u9898\u76ee\u5165\u53e3 \u9898\u76ee\u63cf\u8ff0 Ada\u88ab\u5173\u5728\u4e86\u4e00\u4e2a\u623f\u95f4\u91cc\u3002\u623f\u95f4\u7684\u94c1\u95e8\u4e0a\u6709\u4e00\u4e2a\u6309\u94ae\uff0c\u8fd8\u6709\u4e00\u4e2a\u663e\u793a\u5c4f\u663e\u793a\u7740\u201c1\u201d\u3002 \u65c1\u8fb9\u8fd8\u6709\u4e00\u884c\u5c0f\u5b57\uff1a\u201c\u8fd9\u662f\u4e00\u4e2a\u9ad8\u7cbe\u5ea6M\u8fdb\u5236\u8ba1\u7b97\u5668\uff0c\u6bcf\u6309\u4e00\u6b21\u6309\u94ae\uff0c\u5c4f\u5e55\u4e0a\u7684\u6570\u4fbf\u4f1a\u4e58\u4ee5K\u3002\u5f53\u4e2a\u4f4d\u6570\u518d\u6b21\u53d8\u4e3a1\u65f6\uff0c\u95e8\u5c31\u5f00\u4e86\u3002\u201d \u7531\u4e8eAda\u6025\u4e8e\u51fa\u53bb\uff0c\u6240\u4ee5\u4f60\u8981\u57281s\u4e4b\u5185\u6c42\u51fa\u5979\u7684\u6700\u5c0f\u6309\u952e\u6b21\u6570\u3002 \u8f93\u5165\u683c\u5f0f \u4e00\u884c\uff0c\u4e24\u4e2a\u6574\u6570m\u548ck \u8f93\u51fa\u683c\u5f0f \u4e00\u884c\u4e00\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u6700\u5c0f\u6309\u952e\u6b21\u6570\u3002 \u5982\u679c\u65e0\u8bbaAda\u6309\u591a\u5c11\u6b21\u90fd\u65e0\u6cd5\u8ba9\u95e8\u6253\u5f00\uff0c\u8f93\u51fa\"Let's go Blue Jays!\"\uff08\u4e0d\u542b\u5f15\u53f7\uff09\u3002 \u8f93\u5165\u6837\u4f8b1 1 11 2 \u8f93\u51fa\u6837\u4f8b1 1 10 \u8f93\u5165\u6837\u4f8b2 1 6 26 \u8f93\u51fa\u6837\u4f8b2 1 Let's go Blue Jays! \u601d\u8def \u82e5\u6700\u540e\u7b54\u6848\u5b58\u5728\uff0c\u5219\u6709\u4e24\u79cd\u8868\u8fbe\u65b9\u5f0f\uff0ckn\u548cm*x+1\uff0c\u4e8e\u662f\u53ef\u4ee5\u5217\u51fa\u65b9\u7a0b\uff0ckn = 1 ( mod m ) ,\u5957\u7528\u7531\u4e8e\u7b54\u6848\u4e0d\u80fd\u4e3a0\uff0c\u4e8e\u662f\u7279\u5224\u4e00\u4e0b\u539f\u6a21\u677f\u4e2d\u8f93\u51fa0\u7684\u60c5\u51b5\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 #include <bits/stdc++.h> using namespace std ; #define int long long int m , k ; unordered_map < int , int > mp ; int exgcd ( int a , int b , int & x , int & y ) { if ( b == 0 ) { x = 1 ; y = 0 ; return a ; } int ans = exgcd ( b , a % b , x , y ); int tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return ans ; } int qpow ( int a , int n , int mod ) { int ans = 1 ; while ( n ) { if ( n & 1 ) ans = ans % mod * a % mod ; a = a % mod * a % mod ; n >>= 1 ; } return ans ; } int bsgs ( int a , int b , int p ) { a %= p ; b %= p ; int m = ceil ( sqrt ( p )); int tmp ; for ( int i = 0 ; i <= m ; i ++ ) { if ( i == 0 ) { tmp = b % p ; mp [ tmp ] = i ; continue ; } tmp *= a ; tmp %= p ; mp [ tmp ] = i ; } int am = qpow ( a , m , p ); int now = 1 ; for ( int i = 1 ; i <= m ; i ++ ) { now *= am ; now %= p ; //cout<<\"now=\"<<now<<endl; if ( mp . count ( now ) && i * m - mp [ now ] == 0 ) continue ; //\u7279\u5224\u7ed3\u679c\u4e3a0\u7684 else if ( mp . count ( now )) return i * m - mp [ now ]; } return -1 ; } int x , y ; signed main () { cin >> m >> k ; int gcd = exgcd ( m , k , x , y ); if ( gcd != 1 ) { cout << \"Let's go Blue Jays!\" << endl ; return 0 ; } int ans = bsgs ( k , 1 , m ); if ( ans == -1 ) cout << \"Let's go Blue Jays!\" << endl ; else cout << ans << endl ; return 0 ; }","title":"BSGS\u548c\u6269\u5c55BSGS"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/BSGS/#bsgsbsgs","text":"","title":"BSGS\u548c\u6269\u5c55BSGS"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/BSGS/#_1","text":"\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3 \\(an=b(mod \\ p)\\) \u95ee\u9898\uff0c\u6c42\u89e3\u6700\u5c0f\u975e\u8d1f\u6574\u6570n\uff0c\u4f7f\u5176\u6ee1\u8db3\u5de6\u5f0f\uff0c\u666e\u901aBSGS\u6c42\u89e3a\u4e0ep\u4e92\u8d28\u7684\u60c5\u51b5\uff0c\u6269\u5c55BSGS\u53ef\u6c42\u89e3\u4e0d\u4e92\u8d28\u60c5\u51b5","title":"\u6982\u8ff0"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/BSGS/#bsgs","text":"","title":"\u666e\u901aBSGS"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/BSGS/#_2","text":"1.\u53d6m=ceil(sqrt(p))\uff08\u5411\u4e0a\u53d6\u6574\uff09\uff0c\u82e5\u89e3\u5b58\u5728\uff0c\u53ef\u4ee4n=i*m-j\uff0c\u5373\u6570\u5bf9(i,j)\u5b58\u5728 2. \\(an = b ( mod \\ p ) -> ai*m-j = b( mod \\ p ) -> ai*m = b*aj ( mod \\ p )\\) 3.\u518d0-m\u8303\u56f4\u5185\u679a\u4e3eb*aj\u7684\u503c\uff0c\u5e76\u7528hash\u8868\u5b58\u50a8j 4.\u57281-m\u8303\u56f4\u5185\u679a\u4e3eai m\u7684\u503c\uff0c\u5728hash\u8868\u4e2d\u67e5\u627e\uff0c\u82e5\u627e\u5230\uff0c\u5219\u8f93\u51fai m-j\uff0c\u53cd\u4e4b\u65e0\u7b54\u6848","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/BSGS/#_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 #include <bits/stdc++.h> #define int long long using namespace std ; int a , p , b ; unordered_map < int , int > mp ; int qpow ( int a , int n , int mod ) { int ans = 1 ; while ( n ) { if ( n & 1 ) ans = ans * a % mod ; a = a * a % mod ; n >>= 1 ; } return ans ; } int bsgs ( int a , int b , int p ) { a %= p ; b %= p ; if ( 1 == b % p ) return 0 ; //\u7279\u5224\u7ed3\u679c\u4e3a0\u7684\u60c5\u51b5 int m = ceil ( sqrt ( p )); int baj = 1 ; for ( int i = 0 ; i <= m ; i ++ ) { if ( i == 0 ) { baj = b % p ; mp [ baj ] = i ; continue ; } baj *= a ; baj %= p ; mp [ baj ] = i ; } int am = qpow ( a , m , p ); int tmp = 1 ; for ( int i = 1 ; i <= m ; i ++ ) //\u7531\u4e8e\u5047\u8bben\u4e3ai*m-j\uff0c\u82e5i\u4ece0\u5f00\u59cb\u679a\u4e3e\u5219\u6709\u53ef\u80fd\u8f93\u6570 { tmp *= am ; tmp %= p ; if ( mp . count ( tmp )) return i * m - mp [ tmp ]; } return -1 ; } signed main () { cin . tie ( 0 ); cout . tie ( 0 ); ios :: sync_with_stdio ( 0 ); while ( cin >> a >> p >> b ) { mp . clear (); if ( a == 0 && p == 0 && b == 0 ) break ; int ans = bsgs ( a , b , p ); if ( ans == -1 ) cout << \"No Solution\" << endl ; else cout << ans << endl ; } return 0 ; }","title":"\u4ee3\u7801\u6a21\u677f"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/BSGS/#bsgs_1","text":"","title":"\u6269\u5c55BSGS"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/BSGS/#_4","text":"1.\u5f53a\u4e0ep\u4e92\u8d28\u65f6\uff0c\u5957\u7528\u666e\u901aBSGS\u5373\u53ef 2.\u5f53a\u4e0ep\u4e0d\u4e92\u8d28\u65f6\uff0c\u8bbegcd\u4e3aa\u4e0ep\u7684\u6700\u5927\u516c\u7ea6\u6570\uff0c\u5bf9\u4e8e\u65b9\u7a0ban=b ( mod p ) \uff0c\u4e00\u5b9a\u6709 a/gcd * an-1 = b/gcd ( mod p/gcd )\u5b58\u5728\uff0c\u56e0\u6b64\u82e5b\u4e0d\u4e3agcd\u7684\u500d\u6570\uff0c\u5219\u65b9\u7a0b\u65e0\u89e3 3.\u5bf9\u4e8e\u65b0\u65b9\u7a0b \u4ee4 b/ gcd /( a / gcd) = b\u2019 , p/gcd = p\u2019 , \u7528\u9006\u5143\u5904\u7406b\u2019 , \u9012\u5f52\u6c42\u89e3\u5373\u53ef","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/BSGS/#_5","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 #include <bits/stdc++.h> using namespace std ; #define int long long const int inf = 1e8 ; int a , p , b , x , y ; int qpow ( int a , int n , int mod ) { int ans = 1 ; while ( n ) { if ( n & 1 ) ans = ans * a % mod ; a = a * a % mod ; n >>= 1 ; } return ans ; } int exgcd ( int a , int b , int & x , int & y ) { if ( ! b ) { x = 1 ; y = 0 ; return a ; } int ans = exgcd ( b , a % b , x , y ); int tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return ans ; } unordered_map < int , int > mp ; int bsgs ( int a , int b , int p ) { mp . clear (); a = a % p ; //b=(b%p+p)%p; if ( 1 % p == b % p ) return 0 ; //\u7279\u5224\u7ed3\u679c\u4e3a0\u7684\u60c5\u51b5 int m = ceil ( sqrt ( p )); int baj = 1 ; for ( int i = 0 ; i <= m ; i ++ ) { if ( i == 0 ) { baj = b % p ; mp [ baj ] = i ; continue ; } baj *= a ; baj %= p ; mp [ baj ] = i ; } int am = qpow ( a , m , p ); int tmp = 1 ; for ( int i = 1 ; i <= m ; i ++ ) { tmp *= am ; tmp %= p ; if ( mp . count ( tmp )) return i * m - mp [ tmp ]; } return -1 ; } int exbsgs ( int a , int b , int p ) { b = ( b % p + p ) % p ; //\u4ee4b\u4e3a\u6b63 if ( 1 % p == b % p ) return 0 ; int gcd = exgcd ( a , p , x , y ); if ( gcd > 1 ) { if ( b % gcd ) return - inf ; exgcd ( a / gcd , p / gcd , x , y ); int a2 = a ; int b2 = b / gcd * x % ( p / gcd ); int p2 = p / gcd ; return exbsgs ( a2 , b2 , p2 ) + 1 ; } return bsgs ( a , b , p ); } signed main () { ios :: sync_with_stdio ( 0 ); while ( cin >> a >> p >> b ) { if ( ! a &&! b &&! p ) break ; int ans = exbsgs ( a , b , p ); if ( ans < 0 ) cout << \"No Solution\" << endl ; else cout << ans << endl ; } return 0 ; }","title":"\u4ee3\u7801\u6a21\u677f"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/BSGS/#_6","text":"","title":"\u7ecf\u5178\u4f8b\u9898"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/BSGS/#p4861","text":"\u9898\u76ee\u5165\u53e3 \u9898\u76ee\u63cf\u8ff0 Ada\u88ab\u5173\u5728\u4e86\u4e00\u4e2a\u623f\u95f4\u91cc\u3002\u623f\u95f4\u7684\u94c1\u95e8\u4e0a\u6709\u4e00\u4e2a\u6309\u94ae\uff0c\u8fd8\u6709\u4e00\u4e2a\u663e\u793a\u5c4f\u663e\u793a\u7740\u201c1\u201d\u3002 \u65c1\u8fb9\u8fd8\u6709\u4e00\u884c\u5c0f\u5b57\uff1a\u201c\u8fd9\u662f\u4e00\u4e2a\u9ad8\u7cbe\u5ea6M\u8fdb\u5236\u8ba1\u7b97\u5668\uff0c\u6bcf\u6309\u4e00\u6b21\u6309\u94ae\uff0c\u5c4f\u5e55\u4e0a\u7684\u6570\u4fbf\u4f1a\u4e58\u4ee5K\u3002\u5f53\u4e2a\u4f4d\u6570\u518d\u6b21\u53d8\u4e3a1\u65f6\uff0c\u95e8\u5c31\u5f00\u4e86\u3002\u201d \u7531\u4e8eAda\u6025\u4e8e\u51fa\u53bb\uff0c\u6240\u4ee5\u4f60\u8981\u57281s\u4e4b\u5185\u6c42\u51fa\u5979\u7684\u6700\u5c0f\u6309\u952e\u6b21\u6570\u3002 \u8f93\u5165\u683c\u5f0f \u4e00\u884c\uff0c\u4e24\u4e2a\u6574\u6570m\u548ck \u8f93\u51fa\u683c\u5f0f \u4e00\u884c\u4e00\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u6700\u5c0f\u6309\u952e\u6b21\u6570\u3002 \u5982\u679c\u65e0\u8bbaAda\u6309\u591a\u5c11\u6b21\u90fd\u65e0\u6cd5\u8ba9\u95e8\u6253\u5f00\uff0c\u8f93\u51fa\"Let's go Blue Jays!\"\uff08\u4e0d\u542b\u5f15\u53f7\uff09\u3002 \u8f93\u5165\u6837\u4f8b1 1 11 2 \u8f93\u51fa\u6837\u4f8b1 1 10 \u8f93\u5165\u6837\u4f8b2 1 6 26 \u8f93\u51fa\u6837\u4f8b2 1 Let's go Blue Jays! \u601d\u8def \u82e5\u6700\u540e\u7b54\u6848\u5b58\u5728\uff0c\u5219\u6709\u4e24\u79cd\u8868\u8fbe\u65b9\u5f0f\uff0ckn\u548cm*x+1\uff0c\u4e8e\u662f\u53ef\u4ee5\u5217\u51fa\u65b9\u7a0b\uff0ckn = 1 ( mod m ) ,\u5957\u7528\u7531\u4e8e\u7b54\u6848\u4e0d\u80fd\u4e3a0\uff0c\u4e8e\u662f\u7279\u5224\u4e00\u4e0b\u539f\u6a21\u677f\u4e2d\u8f93\u51fa0\u7684\u60c5\u51b5\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 #include <bits/stdc++.h> using namespace std ; #define int long long int m , k ; unordered_map < int , int > mp ; int exgcd ( int a , int b , int & x , int & y ) { if ( b == 0 ) { x = 1 ; y = 0 ; return a ; } int ans = exgcd ( b , a % b , x , y ); int tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return ans ; } int qpow ( int a , int n , int mod ) { int ans = 1 ; while ( n ) { if ( n & 1 ) ans = ans % mod * a % mod ; a = a % mod * a % mod ; n >>= 1 ; } return ans ; } int bsgs ( int a , int b , int p ) { a %= p ; b %= p ; int m = ceil ( sqrt ( p )); int tmp ; for ( int i = 0 ; i <= m ; i ++ ) { if ( i == 0 ) { tmp = b % p ; mp [ tmp ] = i ; continue ; } tmp *= a ; tmp %= p ; mp [ tmp ] = i ; } int am = qpow ( a , m , p ); int now = 1 ; for ( int i = 1 ; i <= m ; i ++ ) { now *= am ; now %= p ; //cout<<\"now=\"<<now<<endl; if ( mp . count ( now ) && i * m - mp [ now ] == 0 ) continue ; //\u7279\u5224\u7ed3\u679c\u4e3a0\u7684 else if ( mp . count ( now )) return i * m - mp [ now ]; } return -1 ; } int x , y ; signed main () { cin >> m >> k ; int gcd = exgcd ( m , k , x , y ); if ( gcd != 1 ) { cout << \"Let's go Blue Jays!\" << endl ; return 0 ; } int ans = bsgs ( k , 1 , m ); if ( ans == -1 ) cout << \"Let's go Blue Jays!\" << endl ; else cout << ans << endl ; return 0 ; }","title":"\u6d1b\u8c37P4861 \u6309\u94ae"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/crt/","text":"\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406 \u6982\u8ff0 \u7528\u4e8e\u6c42\u89e3\u6a21\u6570\u4e92\u8d28\u7684\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u7ec4 \u89e3\u9898\u65b9\u6cd5 \u4ee3\u7801\u6a21\u677f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 int exgcd ( int a , int b , int & x , int & y ) { if ( b == 0 ) { x = 1 ; y = 0 ; return a ; } int ans = exgcd ( b , a % b , x , y ); int tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return ans ; } int crt ( int n ) { int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { int x , y ; exgcd ( MOD / mod [ i ], mod [ i ], x , y ); ans = ( ans + MOD / mod [ i ] * x * yu [ i ]) % MOD ; } return ( ans % MOD + MOD ) % MOD ; } \u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406 \u6982\u8ff0 \u7528\u4e8e\u6c42\u89e3\u6a21\u6570\u4e0d\u4e92\u8d28\u7684\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u7ec4 \u89e3\u9898\u65b9\u6cd5 \u4ee3\u7801\u6a21\u677f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 #include <bits/stdc++.h> #define int long long using namespace std ; const int N = 1e5 + 5 ; int x , y ; int n ; int mod [ N ], yu [ N ]; int qmul ( int a , int n , int mod ) { int res = 0 ; while ( n ) { if ( n & 1 ) res = ( res + a ) % mod ; a = ( a + a ) % mod ; n >>= 1 ; } return res ; } int exgcd ( int a , int b , int & x , int & y ) { if ( b == 0 ) { x = 1 ; y = 0 ; return a ; } int ans = exgcd ( b , a % b , x , y ); int tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return ans ; } int ex_crt ( int * mod , int * yu ) { int ans = yu [ 1 ]; int m = mod [ 1 ]; for ( int i = 2 ; i <= n ; i ++ ) { int tmp = ( yu [ i ] % mod [ i ] - ans % mod [ i ] + mod [ i ]) % mod [ i ]; //yu[i]-x=t*m(mod mod[i]) \u6c42t int gcd = exgcd ( m , mod [ i ], x , y ); if ( tmp % gcd ) return -1 ; int times = tmp / gcd ; int bg = mod [ i ] / gcd ; x = qmul ( x , times , bg ); //\u8fd9\u91cc\u4e58\u6cd5\u53ef\u80fd\u4f1a\u6ea2\u51fa\uff0c\u6240\u4ee5\u5199\u4e2a\u5feb\u901f\u52a0\u6cd5 ans = ans + m * x ; m = m / gcd * mod [ i ]; ans = ( ans % m + m ) % m ; } return ( ans % m + m ) % m ; } signed main () { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> mod [ i ] >> yu [ i ]; cout << ex_crt ( mod , yu ) << endl ; return 0 ; } \u7ecf\u5178\u4f8b\u9898 \u4f8b1.\u6d1b\u8c37P1495 \u4e2d\u56fd\u5269\u4f59\u5b9a\u7406 \u9898\u76ee\u63cf\u8ff0 \u81ea\u4ece\u66f9\u51b2\u641e\u5b9a\u4e86\u5927\u8c61\u4ee5\u540e\uff0c\u66f9\u64cd\u5c31\u5f00\u59cb\u6349\u6478\u8ba9\u513f\u5b50\u5e72\u4e9b\u4e8b\u4e1a\uff0c\u4e8e\u662f\u6d3e\u4ed6\u5230\u4e2d\u539f\u517b\u732a\u573a\u517b\u732a\uff0c\u53ef\u662f\u66f9\u51b2\u6ee1\u4e0d\u9ad8\u5174\uff0c\u4e8e\u662f\u5728\u5de5\u4f5c\u4e2d\u9a6c\u9a6c\u864e\u864e\uff0c\u6709\u4e00\u6b21\u66f9\u64cd\u60f3\u77e5\u9053\u6bcd\u732a\u7684\u6570\u91cf\uff0c\u4e8e\u662f\u66f9\u51b2\u60f3\u72e0\u72e0\u800d\u66f9\u64cd\u4e00\u628a\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u5982\u6709 1616 \u5934\u6bcd\u732a\uff0c\u5982\u679c\u5efa\u4e86 33 \u4e2a\u732a\u5708\uff0c\u5269\u4e0b 11 \u5934\u732a\u5c31\u6ca1\u6709\u5730\u65b9\u5b89\u5bb6\u4e86\u3002\u5982\u679c\u5efa\u9020\u4e86 55 \u4e2a\u732a\u5708\uff0c\u4f46\u662f\u4ecd\u7136\u6709 11 \u5934\u732a\u6ca1\u6709\u5730\u65b9\u53bb\uff0c\u7136\u540e\u5982\u679c\u5efa\u9020\u4e86 77 \u4e2a\u732a\u5708\uff0c\u8fd8\u6709 22 \u5934\u6ca1\u6709\u5730\u65b9\u53bb\u3002\u4f60\u4f5c\u4e3a\u66f9\u603b\u7684\u79c1\u4eba\u79d8\u4e66\u7406\u6240\u5f53\u7136\u8981\u5c06\u51c6\u786e\u7684\u732a\u6570\u62a5\u7ed9\u66f9\u603b\uff0c\u4f60\u8be5\u600e\u4e48\u529e\uff1f \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570n\u4e3a\u5efa\u7acb\u732a\u5708\u7684\u6b21\u6570\uff0c\u63a5\u4e0b\u6765n\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570ai\uff0cbi\u8868\u793a\u5efa\u7acb\u4e86ai\u4e2a\u732a\u5708\uff0c\u6709bi\u5934\u732a\u6ca1\u6709\u53bb\u5904\uff0c\u89c4\u5b9aai\uff0caj\u4e92\u8d28 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u5305\u542b\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5373\u4e3a\u66f9\u51b2\u81f3\u5c11\u517b\u6bcd\u732a\u7684\u6570\u76ee\u3002 \u8f93\u5165\u6837\u4f8b 1 2 3 4 3 3 1 5 1 7 2 \u8f93\u51fa\u6837\u4f8b 1 16 \u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 #include <bits/stdc++.h> using namespace std ; typedef long long ll ; ll mod [ 15 ]; ll yu [ 15 ]; ll MOD = 1 ; ll exgcd ( ll a , ll b , ll & x , ll & y ) { if ( b == 0 ) { x = 1 ; y = 0 ; return a ; } ll ans = exgcd ( b , a % b , x , y ); ll tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return ans ; } ll crt ( int n ) { ll ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { ll x , y ; exgcd ( MOD / mod [ i ], mod [ i ], x , y ); ans = ( ans + MOD / mod [ i ] * x * yu [ i ]) % MOD ; } return ans ; } int main () { int n ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> mod [ i ] >> yu [ i ]; } for ( int i = 1 ; i <= n ; i ++ ) MOD *= mod [ i ]; cout << ( crt ( n ) + MOD ) % MOD ; return 0 ; } \u4f8b2.HDU3579 Hello Kiki \u9898\u76ee\u80cc\u666f One day I was shopping in the supermarket. There was a cashier counting coins seriously when a little kid running and singing \"\u95e8\u524d\u5927\u6865\u4e0b\u6e38\u8fc7\u4e00\u7fa4\u9e2d\uff0c\u5feb\u6765\u5feb\u6765 \u6570\u4e00\u6570\uff0c\u4e8c\u56db\u516d\u4e03\u516b\". And then the cashier put the counted coins back morosely and count again... Hello Kiki is such a lovely girl that she loves doing counting in a different way. For example, when she is counting X coins, she count them N times. Each time she divide the coins into several same sized groups and write down the group size Mi and the number of the remaining coins Ai on her note. One day Kiki's father found her note and he wanted to know how much coins Kiki was counting. \u8f93\u5165\u683c\u5f0f The first line is T indicating the number of test cases. Each case contains N on the first line, Mi(1 <= i <= N) on the second line, and corresponding Ai(1 <= i <= N) on the third line. All numbers in the input and output are integers. 1 <= T <= 100, 1 <= N <= 6, 1 <= Mi <= 50, 0 <= Ai < Mi \u8f93\u51fa\u683c\u5f0f For each case output the least positive integer X which Kiki was counting in the sample output format. If there is no solution then output -1. \u8f93\u5165\u6837\u4f8b 1 2 3 4 5 6 7 2 2 14 57 5 56 5 19 54 40 24 80 11 2 36 20 76 \u8f93\u51fa\u6837\u4f8b 1 2 Case 1: 341 Case 2: 5996 \u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 #include <bits/stdc++.h> typedef long long ll ; using namespace std ; ll M [ 10 ]; ll A [ 10 ]; ll ex_gcd ( ll a , ll b , ll & x , ll & y ) { if ( b == 0 ) { x = 1 ; y = 0 ; return a ; } ll ans = ex_gcd ( b , a % b , x , y ); ll tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return ans ; } ll ex_crt ( ll * yu , ll * mod , ll n ) { ll ans = yu [ 1 ]; ll m = mod [ 1 ]; ll x , y ; ll now ; for ( ll i = 2 ; i <= n ; i ++ ) { now = ( yu [ i ] % mod [ i ] - ans % mod [ i ] + mod [ i ]) % mod [ i ]; //t*m=ak-x(mod m) //now=ak-x \u6ee1\u8db3 now<m ll gcd = ex_gcd ( m , mod [ i ], x , y ); //\u6269\u6b27\u6c42\u65b9\u7a0b\u7684\u89e3 if ( now % gcd ) return -1 ; //\u5224\u65adt\u662f\u5426\u5b58\u5728 ll k = now / gcd ; x *= k ; //\u6c42\u7684t'\u4e3at'*m=gcd (mod m)\u7684\u89e3\uff0c\u9700\u8981\u4e58\u4ee5\u500d\u6570 int s = mod [ i ] / gcd ; x = ( x % s + mod [ i ] / gcd ) % ( mod [ i ] / gcd ); //x=x+t*m\u66f4\u65b0x ans = ans + x * m ; // m = m * mod [ i ] / gcd ; } return ( ans + m ) % m ? ( ans + m ) % m : m ; } int main () { ll t ; cin >> t ; for ( ll i = 1 ; i <= t ; i ++ ) { memset ( A , 0 , sizeof ( A )); memset ( M , 0 , sizeof ( M )); ll n ; cin >> n ; for ( ll j = 1 ; j <= n ; j ++ ) cin >> M [ j ]; for ( ll j = 1 ; j <= n ; j ++ ) cin >> A [ j ]; cout << \"Case \" << i << \": \" << ex_crt ( A , M , n ) << endl ; } return 0 ; }","title":"\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/crt/#_1","text":"","title":"\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/crt/#_2","text":"\u7528\u4e8e\u6c42\u89e3\u6a21\u6570\u4e92\u8d28\u7684\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u7ec4","title":"\u6982\u8ff0"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/crt/#_3","text":"","title":"\u89e3\u9898\u65b9\u6cd5"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/crt/#_4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 int exgcd ( int a , int b , int & x , int & y ) { if ( b == 0 ) { x = 1 ; y = 0 ; return a ; } int ans = exgcd ( b , a % b , x , y ); int tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return ans ; } int crt ( int n ) { int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { int x , y ; exgcd ( MOD / mod [ i ], mod [ i ], x , y ); ans = ( ans + MOD / mod [ i ] * x * yu [ i ]) % MOD ; } return ( ans % MOD + MOD ) % MOD ; }","title":"\u4ee3\u7801\u6a21\u677f"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/crt/#_5","text":"","title":"\u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/crt/#_6","text":"\u7528\u4e8e\u6c42\u89e3\u6a21\u6570\u4e0d\u4e92\u8d28\u7684\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u7ec4","title":"\u6982\u8ff0"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/crt/#_7","text":"","title":"\u89e3\u9898\u65b9\u6cd5"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/crt/#_8","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 #include <bits/stdc++.h> #define int long long using namespace std ; const int N = 1e5 + 5 ; int x , y ; int n ; int mod [ N ], yu [ N ]; int qmul ( int a , int n , int mod ) { int res = 0 ; while ( n ) { if ( n & 1 ) res = ( res + a ) % mod ; a = ( a + a ) % mod ; n >>= 1 ; } return res ; } int exgcd ( int a , int b , int & x , int & y ) { if ( b == 0 ) { x = 1 ; y = 0 ; return a ; } int ans = exgcd ( b , a % b , x , y ); int tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return ans ; } int ex_crt ( int * mod , int * yu ) { int ans = yu [ 1 ]; int m = mod [ 1 ]; for ( int i = 2 ; i <= n ; i ++ ) { int tmp = ( yu [ i ] % mod [ i ] - ans % mod [ i ] + mod [ i ]) % mod [ i ]; //yu[i]-x=t*m(mod mod[i]) \u6c42t int gcd = exgcd ( m , mod [ i ], x , y ); if ( tmp % gcd ) return -1 ; int times = tmp / gcd ; int bg = mod [ i ] / gcd ; x = qmul ( x , times , bg ); //\u8fd9\u91cc\u4e58\u6cd5\u53ef\u80fd\u4f1a\u6ea2\u51fa\uff0c\u6240\u4ee5\u5199\u4e2a\u5feb\u901f\u52a0\u6cd5 ans = ans + m * x ; m = m / gcd * mod [ i ]; ans = ( ans % m + m ) % m ; } return ( ans % m + m ) % m ; } signed main () { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> mod [ i ] >> yu [ i ]; cout << ex_crt ( mod , yu ) << endl ; return 0 ; }","title":"\u4ee3\u7801\u6a21\u677f"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/crt/#_9","text":"","title":"\u7ecf\u5178\u4f8b\u9898"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/crt/#1p1495","text":"\u9898\u76ee\u63cf\u8ff0 \u81ea\u4ece\u66f9\u51b2\u641e\u5b9a\u4e86\u5927\u8c61\u4ee5\u540e\uff0c\u66f9\u64cd\u5c31\u5f00\u59cb\u6349\u6478\u8ba9\u513f\u5b50\u5e72\u4e9b\u4e8b\u4e1a\uff0c\u4e8e\u662f\u6d3e\u4ed6\u5230\u4e2d\u539f\u517b\u732a\u573a\u517b\u732a\uff0c\u53ef\u662f\u66f9\u51b2\u6ee1\u4e0d\u9ad8\u5174\uff0c\u4e8e\u662f\u5728\u5de5\u4f5c\u4e2d\u9a6c\u9a6c\u864e\u864e\uff0c\u6709\u4e00\u6b21\u66f9\u64cd\u60f3\u77e5\u9053\u6bcd\u732a\u7684\u6570\u91cf\uff0c\u4e8e\u662f\u66f9\u51b2\u60f3\u72e0\u72e0\u800d\u66f9\u64cd\u4e00\u628a\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u5982\u6709 1616 \u5934\u6bcd\u732a\uff0c\u5982\u679c\u5efa\u4e86 33 \u4e2a\u732a\u5708\uff0c\u5269\u4e0b 11 \u5934\u732a\u5c31\u6ca1\u6709\u5730\u65b9\u5b89\u5bb6\u4e86\u3002\u5982\u679c\u5efa\u9020\u4e86 55 \u4e2a\u732a\u5708\uff0c\u4f46\u662f\u4ecd\u7136\u6709 11 \u5934\u732a\u6ca1\u6709\u5730\u65b9\u53bb\uff0c\u7136\u540e\u5982\u679c\u5efa\u9020\u4e86 77 \u4e2a\u732a\u5708\uff0c\u8fd8\u6709 22 \u5934\u6ca1\u6709\u5730\u65b9\u53bb\u3002\u4f60\u4f5c\u4e3a\u66f9\u603b\u7684\u79c1\u4eba\u79d8\u4e66\u7406\u6240\u5f53\u7136\u8981\u5c06\u51c6\u786e\u7684\u732a\u6570\u62a5\u7ed9\u66f9\u603b\uff0c\u4f60\u8be5\u600e\u4e48\u529e\uff1f \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570n\u4e3a\u5efa\u7acb\u732a\u5708\u7684\u6b21\u6570\uff0c\u63a5\u4e0b\u6765n\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570ai\uff0cbi\u8868\u793a\u5efa\u7acb\u4e86ai\u4e2a\u732a\u5708\uff0c\u6709bi\u5934\u732a\u6ca1\u6709\u53bb\u5904\uff0c\u89c4\u5b9aai\uff0caj\u4e92\u8d28 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u5305\u542b\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5373\u4e3a\u66f9\u51b2\u81f3\u5c11\u517b\u6bcd\u732a\u7684\u6570\u76ee\u3002 \u8f93\u5165\u6837\u4f8b 1 2 3 4 3 3 1 5 1 7 2 \u8f93\u51fa\u6837\u4f8b 1 16 \u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 #include <bits/stdc++.h> using namespace std ; typedef long long ll ; ll mod [ 15 ]; ll yu [ 15 ]; ll MOD = 1 ; ll exgcd ( ll a , ll b , ll & x , ll & y ) { if ( b == 0 ) { x = 1 ; y = 0 ; return a ; } ll ans = exgcd ( b , a % b , x , y ); ll tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return ans ; } ll crt ( int n ) { ll ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { ll x , y ; exgcd ( MOD / mod [ i ], mod [ i ], x , y ); ans = ( ans + MOD / mod [ i ] * x * yu [ i ]) % MOD ; } return ans ; } int main () { int n ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> mod [ i ] >> yu [ i ]; } for ( int i = 1 ; i <= n ; i ++ ) MOD *= mod [ i ]; cout << ( crt ( n ) + MOD ) % MOD ; return 0 ; }","title":"\u4f8b1.\u6d1b\u8c37P1495 \u4e2d\u56fd\u5269\u4f59\u5b9a\u7406"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/crt/#2hdu3579-hello-kiki","text":"\u9898\u76ee\u80cc\u666f One day I was shopping in the supermarket. There was a cashier counting coins seriously when a little kid running and singing \"\u95e8\u524d\u5927\u6865\u4e0b\u6e38\u8fc7\u4e00\u7fa4\u9e2d\uff0c\u5feb\u6765\u5feb\u6765 \u6570\u4e00\u6570\uff0c\u4e8c\u56db\u516d\u4e03\u516b\". And then the cashier put the counted coins back morosely and count again... Hello Kiki is such a lovely girl that she loves doing counting in a different way. For example, when she is counting X coins, she count them N times. Each time she divide the coins into several same sized groups and write down the group size Mi and the number of the remaining coins Ai on her note. One day Kiki's father found her note and he wanted to know how much coins Kiki was counting. \u8f93\u5165\u683c\u5f0f The first line is T indicating the number of test cases. Each case contains N on the first line, Mi(1 <= i <= N) on the second line, and corresponding Ai(1 <= i <= N) on the third line. All numbers in the input and output are integers. 1 <= T <= 100, 1 <= N <= 6, 1 <= Mi <= 50, 0 <= Ai < Mi \u8f93\u51fa\u683c\u5f0f For each case output the least positive integer X which Kiki was counting in the sample output format. If there is no solution then output -1. \u8f93\u5165\u6837\u4f8b 1 2 3 4 5 6 7 2 2 14 57 5 56 5 19 54 40 24 80 11 2 36 20 76 \u8f93\u51fa\u6837\u4f8b 1 2 Case 1: 341 Case 2: 5996 \u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 #include <bits/stdc++.h> typedef long long ll ; using namespace std ; ll M [ 10 ]; ll A [ 10 ]; ll ex_gcd ( ll a , ll b , ll & x , ll & y ) { if ( b == 0 ) { x = 1 ; y = 0 ; return a ; } ll ans = ex_gcd ( b , a % b , x , y ); ll tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return ans ; } ll ex_crt ( ll * yu , ll * mod , ll n ) { ll ans = yu [ 1 ]; ll m = mod [ 1 ]; ll x , y ; ll now ; for ( ll i = 2 ; i <= n ; i ++ ) { now = ( yu [ i ] % mod [ i ] - ans % mod [ i ] + mod [ i ]) % mod [ i ]; //t*m=ak-x(mod m) //now=ak-x \u6ee1\u8db3 now<m ll gcd = ex_gcd ( m , mod [ i ], x , y ); //\u6269\u6b27\u6c42\u65b9\u7a0b\u7684\u89e3 if ( now % gcd ) return -1 ; //\u5224\u65adt\u662f\u5426\u5b58\u5728 ll k = now / gcd ; x *= k ; //\u6c42\u7684t'\u4e3at'*m=gcd (mod m)\u7684\u89e3\uff0c\u9700\u8981\u4e58\u4ee5\u500d\u6570 int s = mod [ i ] / gcd ; x = ( x % s + mod [ i ] / gcd ) % ( mod [ i ] / gcd ); //x=x+t*m\u66f4\u65b0x ans = ans + x * m ; // m = m * mod [ i ] / gcd ; } return ( ans + m ) % m ? ( ans + m ) % m : m ; } int main () { ll t ; cin >> t ; for ( ll i = 1 ; i <= t ; i ++ ) { memset ( A , 0 , sizeof ( A )); memset ( M , 0 , sizeof ( M )); ll n ; cin >> n ; for ( ll j = 1 ; j <= n ; j ++ ) cin >> M [ j ]; for ( ll j = 1 ; j <= n ; j ++ ) cin >> A [ j ]; cout << \"Case \" << i << \": \" << ex_crt ( A , M , n ) << endl ; } return 0 ; }","title":"\u4f8b2.HDU3579 Hello Kiki"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E4%BE%8B%E9%A2%98/","text":"P2155 [SDOI2008] \u6c99\u62c9\u516c\u4e3b\u7684\u56f0\u60d1\uff08\u7ebf\u6027\u7b5b+\u9006\u5143\uff09 \u9898\u76ee\u5165\u53e3 \u601d\u8def \u6211\u4eec\u77e5\u9053 \\(gcd(m!+k,m!)=gcd(k,m!)\\) \u82e5 \\(k>m!\\) \u4e0d\u59a8\u4ee4 \\(k=m!+c\\) \u4e8e\u662f \\(gcd(k,m!)=gcd(c,m!)\\) \u6211\u4eec\u76ee\u6807\u6c42 \\(1-n!\\) \u4e2d \\(gcd(i,m!)==1\\) \u7684\u4e2a\u6570 \u53ef\u4ee5\u5c06 \\(n!\\) \u5206\u6210 \\(n!/m!\\) \u4efd \u6bcf\u4e00\u4efd\u4e3a \\(m!\\) \u5176\u4e2d\u4e0e \\(m!\\) \u4e92\u8d28\u7684\u6570\u7684\u4e2a\u6570\u4e3aphi(m!) \u5f53m\u4e3a\u8d28\u6570\u65f6 \\(phi(m!)=phi((m-1)!)*(m-1)\\) \u5f53m\u4e0d\u4e3a\u8d28\u6570\u65f6 \\(phi(m!)=phi((m-1)!)*m\\) \u6240\u4ee5\u7b54\u6848\u4e3a \\(\\frac{n!}{m!phi(m!)}\\) \u6ce8\u610f\u672c\u9898\u53c8\u6a21\u6570\u4e0e\u9664\u6570\u975e\u4e92\u8d28\u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f \\(r|m!\\) ,\u6b64\u65f6\u91cd\u65b0\u5904\u7406\u9636\u4e58\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 #include <bits/stdc++.h> #define int long long using namespace std ; const int N = 1e7 + 5 ; int prime [ N ], phi [ N ], cnt ; bool vis [ N ]; int fac [ N ]; int x , y ; int exgcd ( int a , int b , int & x , int & y ) { if ( ! b ) { x = 1 ; y = 0 ; return a ; } int res = exgcd ( b , a % b , x , y ); int tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return res ; } void init ( int n , int mod ) { phi [ 1 ] = 1 ; fac [ 0 ] = fac [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { fac [ i ] = fac [ i -1 ] * i % mod ; if ( ! vis [ i ]) prime [ ++ cnt ] = i , phi [ i ] = phi [ i -1 ] * ( i -1 ) % mod ; else phi [ i ] = phi [ i -1 ] * i % mod ; for ( int j = 1 ; prime [ j ] * i <= n ; j ++ ) { vis [ i * prime [ j ]] = true ; if ( i % prime [ j ] == 0 ) break ; } } } int qpow ( int a , int n , int mod ) { int res = 1 ; while ( n ) { if ( n & 1 ) res = res * a % mod ; a = a * a % mod ; n >>= 1 ; } return res ; } signed main () { int t , mod ; cin >> t >> mod ; init ( N -4 , mod ); while ( t -- ) { int n , m ; cin >> n >> m ; if ( m % mod ) cout << fac [ n ] * phi [ m ] % mod * qpow ( fac [ m ], mod -2 , mod ) % mod << endl ; else { int tmp = 1 ; for ( int i = m + 1 ; i <= n ; i ++ ) ( tmp *= i ) %= mod ; cout << tmp * phi [ m ] % mod << endl ; } } return 0 ; } D1. Domino (easy version)(\u5206\u89e3\u8d28\u56e0\u6570+\u6b27\u62c9\u7b5b) \u9898\u76ee\u5165\u53e3 \u601d\u8def \u8bbea=p1 ^ a1 * p2 ^ a2 * p3 ^ a3.....pn ^ an (p1,p2...\u4e3aa\u7684\u8d28\u56e0\u6570\uff09\uff0cb=k1 ^ b1 * k2 ^ b2 * k3 ^ b3.....kn ^ bn (k1,k2...\u4e3ab\u7684\u8d28\u56e0\u6570\uff09\uff0c\u5219a\u53ef\u4ee5\u5728cnt1=a1+a2+a3...an\u7684\u6b21\u6570\u5185\u53d8\u62101\uff0cb\u80fd\u591f\u5728 cnt2=b1+b2+b3...+bn\u7684\u6b21\u6570\u5185\u53d8\u62101\uff0c\u4e8e\u662f\u53ef\u4ee5\u53d1\u73b0\uff0c\u82e5k>cnt1+cnt2\uff0c\u4e24\u4e2a\u6570\u5728cnt1+cnt2\u64cd\u4f5c\u540e\u65e0\u6cd5\u64cd\u4f5c\uff0c\u8f93\u51faNO\uff0c\u5728k<cnt1+cnt2\u65f6\uff0c\u7279\u5224k=1\u7684\u60c5\u51b5\u5373\u53ef\u3002\u672c\u9898\u5206\u89e3\u8d28\u56e0\u6570\u53ef\u7528\u6b27\u62c9\u7b5b\u9884\u5904\u7406\u3002 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 #include <bits/stdc++.h> #define int long long using namespace std ; const int N = 1e7 + 5 ; int prime [ N ]; bool vis [ N ]; void euler () { vis [ 1 ] = true ; int cnt = 0 ; for ( int i = 2 ; i <= N -5 ; i ++ ) { if ( ! vis [ i ]) prime [ ++ cnt ] = i ; for ( int j = 1 ; i * prime [ j ] <= N -5 ; j ++ ) { vis [ i * prime [ j ]] = true ; if ( i % prime [ j ] == 0 ) break ; } } } signed main () { int t ; cin >> t ; euler (); while ( t -- ) { int a , b , k ; scanf ( \"%lld %lld %lld\" , & a , & b , & k ); int tmpa = a , tmpb = b ; int cnt1 = 0 , cnt2 = 0 ; if ( a > N -5 || vis [ a ]) for ( register int j = 1 ; prime [ j ] * prime [ j ] <= a ; j ++ ) { if ( a % prime [ j ] == 0 ) { while ( a % prime [ j ] == 0 ) { a /= prime [ j ]; cnt1 ++ ; } } } if ( a > 1 ) cnt1 ++ ; if ( b > N -5 || vis [ b ]) for ( register int j = 1 ; prime [ j ] * prime [ j ] <= b ; j ++ ) { if ( b % prime [ j ] == 0 ) { while ( b % prime [ j ] == 0 ) { b /= prime [ j ]; cnt2 ++ ; } } } if ( b > 1 ) cnt2 ++ ; if ( cnt1 + cnt2 < k ) printf ( \"No \\n \" ); else if ( k == 1 ) { if (( tmpa % tmpb == 0 || tmpb % tmpa == 0 ) && tmpa != tmpb ) printf ( \"Yes \\n \" ); else if ( tmpa == tmpb ) printf ( \"No \\n \" ); else printf ( \"No \\n \" ); } else printf ( \"Yes \\n \" ); } return 0 ; } C. Strange Function\uff08lcm+\u5bb9\u65a5\uff09 \u9898\u76ee\u5165\u53e3 \u601d\u8def f[x]\u8868\u793a\u4e0d\u88abx\u6574\u9664\u7684\u6700\u5c0f\u7684\u6570\uff0c\u8bbe\u5176\u4e3aa\uff0c\u5219\u5bf9x\u5fc5\u5b58\u5728\u56e0\u5b501,2....a-1,\u4e5f\u5c31\u662f\u8bf4x\u5b58\u5728\u7ea6\u6570a1=lcm(1,2,3,...a-1)\uff0c\u7531\u4e8ea\u4e0d\u88ab\u6574\u9664\uff0c\u6240\u4ee5x\u4e0d\u5b58\u5728\u7ea6\u6570a2=lcm(1,2,...a)\uff0c\u57281-n\u4e2da1\u7684\u500d\u6570\u6709n/a1\u4e2a\uff0ca2\u7684\u500d\u6570\u6709n/a2\u4e2a\uff0c\u7531\u4e8ea1|a2\uff0c\u6240\u4ee5\u662fa1\u500d\u6570\u4f46\u4e0d\u662fa2\u500d\u6570\u7684\u6709n/a1-n/a2\u4e2a\uff0c\u4e14\u8fd9\u4e9b\u6570\u7684\u5927\u5c0f\u4e3aa\uff0c\u5faa\u73af\u5230lcm\u5927\u4e8en\u7684\u65f6\u5019\u505c\u6b62\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 #include <bits/stdc++.h> #define int long long const int mod = 1e9 + 7 ; using namespace std ; int gcd ( int a , int b ) { return b == 0 ? a : gcd ( b , a % b ); } int lcm ( int a , int b ) { return a / gcd ( a , b ) * b ; } void solve () { int t , n ; cin >> t ; while ( t -- ) { cin >> n ; int lcmm = 1 ; int tmp = 2 ; int res = 0 ; while ( lcmm <= n ) { int k1 = n / lcmm ; lcmm = lcm ( lcmm , tmp ); tmp ++ ; int k2 = n / lcmm ; res += ( k1 - k2 ) * ( tmp -1 ); res %= mod ; } cout << res << endl ; } } signed main () { solve (); return 0 ; } \u501f\u9274\u535a\u5ba2https://blog.csdn.net/jziwjxjd/article/details/118558335?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163184074316780271543979%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=163184074316780271543979&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-3-118558335.pc_search_ecpm_flag&utm_term=C.+Strange+Function&spm=1018.2226.3001.4187 P2424 \u7ea6\u6570\u548c(\u6570\u8bba\u5206\u5757) \u9898\u76ee\u5165\u53e3 \u9898\u76ee\u63cf\u8ff0 \u5bf9\u4e8e\u4e00\u4e2a\u6570 XX\uff0c\u51fd\u6570 f(X)f(X) \u8868\u793a XX \u6240\u6709\u7ea6\u6570\u7684\u548c\u3002\u4f8b\u5982\uff1af(6)=1+2+3+6=12f(6)=1+2+3+6=12\u3002\u5bf9\u4e8e\u4e00\u4e2a XX\uff0cSmart \u53ef\u4ee5\u5f88\u5feb\u7684\u7b97\u51fa f(X)f(X)\u3002\u73b0\u5728\u7684\u95ee\u9898\u662f\uff0c\u7ed9\u5b9a\u4e24\u4e2a\u6b63\u6574\u6570 X,Y(X<Y)X,Y(X<Y)\uff0cSmart \u5e0c\u671b\u5c3d\u5feb\u5730\u7b97\u51fa f(X)+f(X+1)+\u2026\u2026+f(Y)f(X)+f(X+1)+\u2026\u2026+f(Y)\u7684\u503c\uff0c\u4f60\u80fd\u5e2e\u52a9 Smart \u7b97\u51fa\u8fd9\u4e2a\u503c\u5417\uff1f \u8f93\u5165\u683c\u5f0f \u8f93\u5165\u6587\u4ef6\u4ec5\u4e00\u884c\uff0c\u4e24\u4e2a\u6b63\u6574\u6570 XX \u548c Y(X<Y)Y(X<Y)\uff0c\u8868\u793a\u9700\u8981\u8ba1\u7b97 f(X)+f(X+1)+\\dots +f(Y)f(X)+f(X+1)+\u22ef+f(Y)\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u53ea\u6709\u4e00\u884c\uff0c\u4e3a f(X)+f(X+1)+\\dots+f(Y)f(X)+f(X+1)+\u22ef+f(Y) \u7684\u503c\u3002 \u8f93\u5165#1 1 2 4 \u8f93\u51fa#1 1 14 \u8f93\u5165#2 1 123 321 \u8f93\u51fa#2 1 72543 \u601d\u8def \u6211\u4eec\u77e5\u9053\uff0c\u57281-n\u4e2d\uff0c\u82e5a<n\uff0c\u5219a\u7684\u500d\u6570\u6709n/a\u4e2a\uff0c\u56e0\u6b64\u4e00\u79cd\u66b4\u529b\u7684\u505a\u6cd5\u4fbf\u662f\u679a\u4e3e\u7ea6\u65701-y\u5728x-y\u7684\u500d\u6570\uff0c\u590d\u6742\u5ea6O\uff08y\uff09\uff0c\u8d85\u65f6\uff0c\u4e8e\u662f\u6211\u4eec\u5f97\u60f3\u65b0\u65b9\u6cd5\u3002\u6211\u4eec\u6ce8\u610f\u5230\u6211\u4eec\u9700\u8981\u77e5\u9053\u7684\u53ea\u662f\u4ee51-y\u4e3a\u7ea6\u6570\u7684\u6570\u6709\u591a\u5c11\u4e2a\uff0c\u800c\u5927\u90e8\u5206\u6570\u7684\u4e2a\u6570\u76f8\u540c\uff0c\u59821-100\u5185\u4ee551\uff0c52\uff0c53\u2026\u2026100\u4e3a\u7ea6\u6570\u7684\u4e2a\u6570\u90fd\u53ea\u6709\u4e00\u4e2a\uff0c\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u6574\u9664\u5206\u5757\u3002\u6613\u5f97\u7b54\u6848\u4e3a\u2211( y / i - x-1 / i ) * i ( 1 <=i<=y )\u3002 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <bits/stdc++.h> #define int long long using namespace std ; int x , y ; signed main () { cin >> x >> y ; int res = 0 ; for ( int l = 1 , r ; l <= y ; l = r + 1 ) { if ( y / l ) r = y / ( y / l ); else break ; res += ( y / l ) * ( r - l + 1 ) * ( l + r ) / 2 ; } for ( int l = 1 , r ; l <= y ; l = r + 1 ) { if (( x -1 ) / l ) r = ( x -1 ) / (( x -1 ) / l ); else break ; res -= ( x -1 ) / l * ( r - l + 1 ) * ( l + r ) / 2 ; } cout << res << endl ; return 0 ; }","title":"\u4f8b\u9898"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E4%BE%8B%E9%A2%98/#p2155-sdoi2008","text":"\u9898\u76ee\u5165\u53e3 \u601d\u8def \u6211\u4eec\u77e5\u9053 \\(gcd(m!+k,m!)=gcd(k,m!)\\) \u82e5 \\(k>m!\\) \u4e0d\u59a8\u4ee4 \\(k=m!+c\\) \u4e8e\u662f \\(gcd(k,m!)=gcd(c,m!)\\) \u6211\u4eec\u76ee\u6807\u6c42 \\(1-n!\\) \u4e2d \\(gcd(i,m!)==1\\) \u7684\u4e2a\u6570 \u53ef\u4ee5\u5c06 \\(n!\\) \u5206\u6210 \\(n!/m!\\) \u4efd \u6bcf\u4e00\u4efd\u4e3a \\(m!\\) \u5176\u4e2d\u4e0e \\(m!\\) \u4e92\u8d28\u7684\u6570\u7684\u4e2a\u6570\u4e3aphi(m!) \u5f53m\u4e3a\u8d28\u6570\u65f6 \\(phi(m!)=phi((m-1)!)*(m-1)\\) \u5f53m\u4e0d\u4e3a\u8d28\u6570\u65f6 \\(phi(m!)=phi((m-1)!)*m\\) \u6240\u4ee5\u7b54\u6848\u4e3a \\(\\frac{n!}{m!phi(m!)}\\) \u6ce8\u610f\u672c\u9898\u53c8\u6a21\u6570\u4e0e\u9664\u6570\u975e\u4e92\u8d28\u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f \\(r|m!\\) ,\u6b64\u65f6\u91cd\u65b0\u5904\u7406\u9636\u4e58\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 #include <bits/stdc++.h> #define int long long using namespace std ; const int N = 1e7 + 5 ; int prime [ N ], phi [ N ], cnt ; bool vis [ N ]; int fac [ N ]; int x , y ; int exgcd ( int a , int b , int & x , int & y ) { if ( ! b ) { x = 1 ; y = 0 ; return a ; } int res = exgcd ( b , a % b , x , y ); int tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return res ; } void init ( int n , int mod ) { phi [ 1 ] = 1 ; fac [ 0 ] = fac [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { fac [ i ] = fac [ i -1 ] * i % mod ; if ( ! vis [ i ]) prime [ ++ cnt ] = i , phi [ i ] = phi [ i -1 ] * ( i -1 ) % mod ; else phi [ i ] = phi [ i -1 ] * i % mod ; for ( int j = 1 ; prime [ j ] * i <= n ; j ++ ) { vis [ i * prime [ j ]] = true ; if ( i % prime [ j ] == 0 ) break ; } } } int qpow ( int a , int n , int mod ) { int res = 1 ; while ( n ) { if ( n & 1 ) res = res * a % mod ; a = a * a % mod ; n >>= 1 ; } return res ; } signed main () { int t , mod ; cin >> t >> mod ; init ( N -4 , mod ); while ( t -- ) { int n , m ; cin >> n >> m ; if ( m % mod ) cout << fac [ n ] * phi [ m ] % mod * qpow ( fac [ m ], mod -2 , mod ) % mod << endl ; else { int tmp = 1 ; for ( int i = m + 1 ; i <= n ; i ++ ) ( tmp *= i ) %= mod ; cout << tmp * phi [ m ] % mod << endl ; } } return 0 ; }","title":"P2155 [SDOI2008] \u6c99\u62c9\u516c\u4e3b\u7684\u56f0\u60d1\uff08\u7ebf\u6027\u7b5b+\u9006\u5143\uff09"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E4%BE%8B%E9%A2%98/#d1-domino-easy-version","text":"\u9898\u76ee\u5165\u53e3 \u601d\u8def \u8bbea=p1 ^ a1 * p2 ^ a2 * p3 ^ a3.....pn ^ an (p1,p2...\u4e3aa\u7684\u8d28\u56e0\u6570\uff09\uff0cb=k1 ^ b1 * k2 ^ b2 * k3 ^ b3.....kn ^ bn (k1,k2...\u4e3ab\u7684\u8d28\u56e0\u6570\uff09\uff0c\u5219a\u53ef\u4ee5\u5728cnt1=a1+a2+a3...an\u7684\u6b21\u6570\u5185\u53d8\u62101\uff0cb\u80fd\u591f\u5728 cnt2=b1+b2+b3...+bn\u7684\u6b21\u6570\u5185\u53d8\u62101\uff0c\u4e8e\u662f\u53ef\u4ee5\u53d1\u73b0\uff0c\u82e5k>cnt1+cnt2\uff0c\u4e24\u4e2a\u6570\u5728cnt1+cnt2\u64cd\u4f5c\u540e\u65e0\u6cd5\u64cd\u4f5c\uff0c\u8f93\u51faNO\uff0c\u5728k<cnt1+cnt2\u65f6\uff0c\u7279\u5224k=1\u7684\u60c5\u51b5\u5373\u53ef\u3002\u672c\u9898\u5206\u89e3\u8d28\u56e0\u6570\u53ef\u7528\u6b27\u62c9\u7b5b\u9884\u5904\u7406\u3002 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 #include <bits/stdc++.h> #define int long long using namespace std ; const int N = 1e7 + 5 ; int prime [ N ]; bool vis [ N ]; void euler () { vis [ 1 ] = true ; int cnt = 0 ; for ( int i = 2 ; i <= N -5 ; i ++ ) { if ( ! vis [ i ]) prime [ ++ cnt ] = i ; for ( int j = 1 ; i * prime [ j ] <= N -5 ; j ++ ) { vis [ i * prime [ j ]] = true ; if ( i % prime [ j ] == 0 ) break ; } } } signed main () { int t ; cin >> t ; euler (); while ( t -- ) { int a , b , k ; scanf ( \"%lld %lld %lld\" , & a , & b , & k ); int tmpa = a , tmpb = b ; int cnt1 = 0 , cnt2 = 0 ; if ( a > N -5 || vis [ a ]) for ( register int j = 1 ; prime [ j ] * prime [ j ] <= a ; j ++ ) { if ( a % prime [ j ] == 0 ) { while ( a % prime [ j ] == 0 ) { a /= prime [ j ]; cnt1 ++ ; } } } if ( a > 1 ) cnt1 ++ ; if ( b > N -5 || vis [ b ]) for ( register int j = 1 ; prime [ j ] * prime [ j ] <= b ; j ++ ) { if ( b % prime [ j ] == 0 ) { while ( b % prime [ j ] == 0 ) { b /= prime [ j ]; cnt2 ++ ; } } } if ( b > 1 ) cnt2 ++ ; if ( cnt1 + cnt2 < k ) printf ( \"No \\n \" ); else if ( k == 1 ) { if (( tmpa % tmpb == 0 || tmpb % tmpa == 0 ) && tmpa != tmpb ) printf ( \"Yes \\n \" ); else if ( tmpa == tmpb ) printf ( \"No \\n \" ); else printf ( \"No \\n \" ); } else printf ( \"Yes \\n \" ); } return 0 ; }","title":"D1. Domino (easy version)(\u5206\u89e3\u8d28\u56e0\u6570+\u6b27\u62c9\u7b5b)"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E4%BE%8B%E9%A2%98/#c-strange-functionlcm","text":"\u9898\u76ee\u5165\u53e3 \u601d\u8def f[x]\u8868\u793a\u4e0d\u88abx\u6574\u9664\u7684\u6700\u5c0f\u7684\u6570\uff0c\u8bbe\u5176\u4e3aa\uff0c\u5219\u5bf9x\u5fc5\u5b58\u5728\u56e0\u5b501,2....a-1,\u4e5f\u5c31\u662f\u8bf4x\u5b58\u5728\u7ea6\u6570a1=lcm(1,2,3,...a-1)\uff0c\u7531\u4e8ea\u4e0d\u88ab\u6574\u9664\uff0c\u6240\u4ee5x\u4e0d\u5b58\u5728\u7ea6\u6570a2=lcm(1,2,...a)\uff0c\u57281-n\u4e2da1\u7684\u500d\u6570\u6709n/a1\u4e2a\uff0ca2\u7684\u500d\u6570\u6709n/a2\u4e2a\uff0c\u7531\u4e8ea1|a2\uff0c\u6240\u4ee5\u662fa1\u500d\u6570\u4f46\u4e0d\u662fa2\u500d\u6570\u7684\u6709n/a1-n/a2\u4e2a\uff0c\u4e14\u8fd9\u4e9b\u6570\u7684\u5927\u5c0f\u4e3aa\uff0c\u5faa\u73af\u5230lcm\u5927\u4e8en\u7684\u65f6\u5019\u505c\u6b62\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 #include <bits/stdc++.h> #define int long long const int mod = 1e9 + 7 ; using namespace std ; int gcd ( int a , int b ) { return b == 0 ? a : gcd ( b , a % b ); } int lcm ( int a , int b ) { return a / gcd ( a , b ) * b ; } void solve () { int t , n ; cin >> t ; while ( t -- ) { cin >> n ; int lcmm = 1 ; int tmp = 2 ; int res = 0 ; while ( lcmm <= n ) { int k1 = n / lcmm ; lcmm = lcm ( lcmm , tmp ); tmp ++ ; int k2 = n / lcmm ; res += ( k1 - k2 ) * ( tmp -1 ); res %= mod ; } cout << res << endl ; } } signed main () { solve (); return 0 ; } \u501f\u9274\u535a\u5ba2https://blog.csdn.net/jziwjxjd/article/details/118558335?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163184074316780271543979%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=163184074316780271543979&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-3-118558335.pc_search_ecpm_flag&utm_term=C.+Strange+Function&spm=1018.2226.3001.4187","title":"C. Strange Function\uff08lcm+\u5bb9\u65a5\uff09"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E4%BE%8B%E9%A2%98/#p2424","text":"\u9898\u76ee\u5165\u53e3 \u9898\u76ee\u63cf\u8ff0 \u5bf9\u4e8e\u4e00\u4e2a\u6570 XX\uff0c\u51fd\u6570 f(X)f(X) \u8868\u793a XX \u6240\u6709\u7ea6\u6570\u7684\u548c\u3002\u4f8b\u5982\uff1af(6)=1+2+3+6=12f(6)=1+2+3+6=12\u3002\u5bf9\u4e8e\u4e00\u4e2a XX\uff0cSmart \u53ef\u4ee5\u5f88\u5feb\u7684\u7b97\u51fa f(X)f(X)\u3002\u73b0\u5728\u7684\u95ee\u9898\u662f\uff0c\u7ed9\u5b9a\u4e24\u4e2a\u6b63\u6574\u6570 X,Y(X<Y)X,Y(X<Y)\uff0cSmart \u5e0c\u671b\u5c3d\u5feb\u5730\u7b97\u51fa f(X)+f(X+1)+\u2026\u2026+f(Y)f(X)+f(X+1)+\u2026\u2026+f(Y)\u7684\u503c\uff0c\u4f60\u80fd\u5e2e\u52a9 Smart \u7b97\u51fa\u8fd9\u4e2a\u503c\u5417\uff1f \u8f93\u5165\u683c\u5f0f \u8f93\u5165\u6587\u4ef6\u4ec5\u4e00\u884c\uff0c\u4e24\u4e2a\u6b63\u6574\u6570 XX \u548c Y(X<Y)Y(X<Y)\uff0c\u8868\u793a\u9700\u8981\u8ba1\u7b97 f(X)+f(X+1)+\\dots +f(Y)f(X)+f(X+1)+\u22ef+f(Y)\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u53ea\u6709\u4e00\u884c\uff0c\u4e3a f(X)+f(X+1)+\\dots+f(Y)f(X)+f(X+1)+\u22ef+f(Y) \u7684\u503c\u3002 \u8f93\u5165#1 1 2 4 \u8f93\u51fa#1 1 14 \u8f93\u5165#2 1 123 321 \u8f93\u51fa#2 1 72543 \u601d\u8def \u6211\u4eec\u77e5\u9053\uff0c\u57281-n\u4e2d\uff0c\u82e5a<n\uff0c\u5219a\u7684\u500d\u6570\u6709n/a\u4e2a\uff0c\u56e0\u6b64\u4e00\u79cd\u66b4\u529b\u7684\u505a\u6cd5\u4fbf\u662f\u679a\u4e3e\u7ea6\u65701-y\u5728x-y\u7684\u500d\u6570\uff0c\u590d\u6742\u5ea6O\uff08y\uff09\uff0c\u8d85\u65f6\uff0c\u4e8e\u662f\u6211\u4eec\u5f97\u60f3\u65b0\u65b9\u6cd5\u3002\u6211\u4eec\u6ce8\u610f\u5230\u6211\u4eec\u9700\u8981\u77e5\u9053\u7684\u53ea\u662f\u4ee51-y\u4e3a\u7ea6\u6570\u7684\u6570\u6709\u591a\u5c11\u4e2a\uff0c\u800c\u5927\u90e8\u5206\u6570\u7684\u4e2a\u6570\u76f8\u540c\uff0c\u59821-100\u5185\u4ee551\uff0c52\uff0c53\u2026\u2026100\u4e3a\u7ea6\u6570\u7684\u4e2a\u6570\u90fd\u53ea\u6709\u4e00\u4e2a\uff0c\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u6574\u9664\u5206\u5757\u3002\u6613\u5f97\u7b54\u6848\u4e3a\u2211( y / i - x-1 / i ) * i ( 1 <=i<=y )\u3002 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <bits/stdc++.h> #define int long long using namespace std ; int x , y ; signed main () { cin >> x >> y ; int res = 0 ; for ( int l = 1 , r ; l <= y ; l = r + 1 ) { if ( y / l ) r = y / ( y / l ); else break ; res += ( y / l ) * ( r - l + 1 ) * ( l + r ) / 2 ; } for ( int l = 1 , r ; l <= y ; l = r + 1 ) { if (( x -1 ) / l ) r = ( x -1 ) / (( x -1 ) / l ); else break ; res -= ( x -1 ) / l * ( r - l + 1 ) * ( l + r ) / 2 ; } cout << res << endl ; return 0 ; }","title":"P2424 \u7ea6\u6570\u548c(\u6570\u8bba\u5206\u5757)"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E6%89%A9%E6%AC%A7/","text":"\u6982\u8ff0 \u6269\u5c55\u6b27\u51e0\u91cc\u5fb7\u5219\u662f\u7528\u6765\u6c42\u89e3\u6709\u5173\u65b9\u7a0b \\(ax+by=m\\) \u7684\u95ee\u9898 \u6269\u6b27\u6a21\u677f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 int exgcd ( int a , int b , int & x , int & y ) { if ( b == 0 ) { x = 1 ; y = 0 ; return a ; } int ans = exgcd ( b , a % b , x , y ); int tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return ans ; } \u5224\u65ad\u65b9\u7a0b \\(ax+by=m\\) \u6216 \\(ax\u2261m(mod\\ b)\\) \u662f\u5426\u6709\u89e3 \u601d\u8def :\u5f53 \\(gcd(a,b)|m\\) \u65f6 \u65b9\u7a0b\u6709\u89e3\uff0c\u53cd\u4e4b\u5219\u65e0\u89e3 \u6c42\u89e3\u65b9\u7a0b \\(ax+by=m( ax\u2261m(mod\\ b) )\\) \u7684\u6700\u5c0f\u6b63\u6574\u6570\u89e3 \u601d\u8def 1.\u9996\u5148\u5224\u65ad\u65b9\u7a0b\u662f\u5426\u6709\u89e3\uff0c\u65e0\u89e3\u5219\u76f4\u63a5\u9000\u51fa 2.\u6269\u6b27\u6c42x\uff0c\u4ee4 \\(bg=m/gcd(a,b),\u5219x=(x\\%bg+bg)\\%bg\\) \u7ecf\u5178\u4f8b\u9898 \u4f8b1. \u6d1b\u8c37 P1082 \u540c\u4f59\u65b9\u7a0b \u9898\u76ee\u63cf\u8ff0 \u6c42\u5173\u4e8ex\u7684\u540c\u4f59\u65b9\u7a0bax\u22611(mod b)\u7684\u6700\u5c0f\u6b63\u6574\u6570\u89e3\u3002 \u8f93\u5165\u683c\u5f0f \u4e00\u884c\uff0c\u5305\u542b\u4e24\u4e2a\u6b63\u6574\u6570a,b,\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002 \u8f93\u51fa\u683c\u5f0f \u4e00\u4e2a\u6b63\u6574\u6570x0\uff0c\u5373\u6700\u5c0f\u6b63\u6574\u6570\u89e3\u3002\u8f93\u5165\u6570\u636e\u4fdd\u8bc1\u4e00\u5b9a\u6709\u89e3\u3002 \u8f93\u5165\u6837\u4f8b 1 3 10 \u8f93\u51fa\u6837\u4f8b 1 7 \u601d\u8def: \u6a21\u677f\u9898\uff0c\u7531\u4e8e\u9898\u76ee\u89c4\u5b9a\u4e00\u5b9a\u6709\u89e3\uff0c\u56e0\u6b64 \\(a\u22a5b\uff08a\u4e0eb\u4e92\u8d28\uff09\\) \uff0c\u6b64\u65f6\u65e2\u53ef\u4ee5\u7528\u6269\u6b27\u6c42\u89e3\uff0c\u4e5f\u53ef\u7528\u6b27\u62c9\u5b9a\u7406\u6c42\u89e3 \u5728\u8fd9\u79d1\u666e\u4e00\u4e0b\u6b27\u62c9\u5b9a\u7406\uff1a \\(a^\u03c6(n) \u22611(mod\\ n)(\u5176\u4e2d\uff0ca\u4e0en\u5747\u4e3a\u6b63\u6574\u6570\uff0c\u4e14\u4e24\u8005\u4e92\u8d28\u3002)\\) \u8d39\u9a6c\u5c0f\u5b9a\u7406\u4e3a\u6b27\u62c9\u5b9a\u7406\u7684\u7279\u6b8a\u5f62\u5f0f \u4ee3\u7801\uff1a \u6269\u6b27\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <bits/stdc++.h> using namespace std ; #define int long long int exgcd ( int a , int b , int & x , int & y ) { if ( b == 0 ) { x = 1 ; y = 0 ; return a ; } int ans = exgcd ( b , a % b , x , y ); int tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return ans ; } signed main () { int a , b ; int x , y ; cin >> a >> b ; exgcd ( a , b , x , y ); x = ( x % b + b ) % b ; cout << x << endl ; return 0 ; } \u6b27\u62c9\u5b9a\u7406\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #include <bits/stdc++.h> using namespace std ; #define int long long int qpow ( int a , int n , int b ) { int ans = 1 ; while ( n ) { if ( n & 1 ) ans = ans % b * a % b ; a = a % b * a % b ; n >>= 1 ; } return ans ; } int euler ( int n ) { int ans = n ; for ( int i = 2 ; i * i <= n ; i ++ ) { if ( n % i == 0 ) ans -= ans / i ; while ( n % i == 0 ) n /= i ; } if ( n > 1 ) ans -= ans / n ; return ans ; } signed main () { int a , b ; cin >> a >> b ; cout << qpow ( a , euler ( b ) -1 , b ) << endl ; return 0 ; } \u4f8b2.\u6d1b\u8c37P5656 \u4e8c\u5143\u4e00\u6b21\u65b9\u7a0b \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e0d\u5b9a\u65b9\u7a0bax+by=c \u82e5\u8be5\u65b9\u7a0b\u65e0\u6574\u6570\u89e3\uff0c\u8f93\u51fa-1\u3002 \u82e5\u8be5\u65b9\u7a0b\u6709\u6574\u6570\u89e3\uff0c\u4e14\u6709\u6b63\u6574\u6570\u89e3\uff0c\u5219\u8f93\u51fa\u5176\u6b63\u6574\u6570\u89e3\u7684\u6570\u91cf\uff0c\u6240\u6709\u6b63\u6574\u6570\u89e3\u4e2dx\u7684\u6700\u5c0f\u503c\uff0c\u6240\u6709\u6b63\u6574\u6570\u89e3\u4e2dy\u7684\u6700\u5c0f\u503c\uff0c\u6240\u6709\u6b63\u6574\u6570\u89e3\u4e2dx\u7684\u6700\u5927\u503c\uff0c\u4ee5\u53ca\u6240\u6709\u6b63\u6574\u6570\u89e3\u4e2dy \u7684\u6700\u5927\u503c\u3002 \u82e5\u65b9\u7a0b\u6709\u6574\u6570\u89e3\uff0c\u4f46\u6ca1\u6709\u6b63\u6574\u6570\u89e3\uff0c\u4f60\u9700\u8981\u8f93\u51fa\u6240\u6709\u6574\u6570\u89e3\u4e2dx\u7684\u6700\u5c0f\u6b63\u6574\u6570\u503c\uff0cy\u7684\u6700\u5c0f\u6b63\u6574\u6570\u503c\u3002 \u6b63\u6574\u6570\u89e3\u5373\u4e3a x, y \u5747\u4e3a\u6b63\u6574\u6570\u7684\u89e3\uff0c 0 \u4e0d\u662f\u6b63\u6574\u6570\u3002 \u6574\u6570\u89e3\u5373\u4e3a x,y \u5747\u4e3a\u6574\u6570\u7684\u89e3\u3002 x\u7684\u6700\u5c0f\u6b63\u6574\u6570\u503c\u5373\u6240\u6709x\u4e3a\u6b63\u6574\u6570\u7684\u6574\u6570\u89e3\u4e2dx\u7684\u6700\u5c0f\u503c\uff0cy\u540c\u7406\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570 T\uff0c\u4ee3\u8868\u6570\u636e\u7ec4\u6570\u3002 \u63a5\u4e0b\u6765 T \u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u7531\u7a7a\u683c\u9694\u5f00\u7684\u6b63\u6574\u6570a,b,c\u3002 \u8f93\u51fa\u683c\u5f0f T \u884c\u3002 \u82e5\u8be5\u884c\u5bf9\u5e94\u7684\u8be2\u95ee\u65e0\u6574\u6570\u89e3\uff0c\u4e00\u4e2a\u6570\u5b57 -1\u3002 \u82e5\u8be5\u884c\u5bf9\u5e94\u7684\u8be2\u95ee\u6709\u6574\u6570\u89e3\u4f46\u65e0\u6b63\u6574\u6570\u89e3\uff0c\u5305\u542b 2\u4e2a\u7531\u7a7a\u683c\u9694\u5f00\u7684\u6570\u5b57\uff0c\u4f9d\u6b21\u4ee3\u8868\u6574\u6570\u89e3\u4e2d\uff0cx\u7684\u6700\u5c0f\u6b63\u6574\u6570\u503c\uff0cy \u7684\u6700\u5c0f\u6b63\u6574\u6570\u503c\u3002 \u5426\u5219\u5305\u542b5\u4e2a\u7531\u7a7a\u683c\u9694\u5f00\u7684\u6570\u5b57\uff0c\u4f9d\u6b21\u4ee3\u8868\u6b63\u6574\u6570\u89e3\u7684\u6570\u91cf\uff0c\u6b63\u6574\u6570\u89e3\u4e2d\uff0cx\u7684\u6700\u5c0f\u503c\uff0cy\u7684\u6700\u5c0f\u503c\uff0cx\u7684\u6700\u5927\u503c\uff0cy\u7684\u6700\u5927\u503c\u3002 \u8f93\u5165\u6837\u4f8b 1 2 3 4 5 6 7 8 7 2 11 100 3 18 6 192 608 17 19 2 60817 11 45 14 19 19 810 98 76 5432 \u8f93\u51fa\u6837\u4f8b 1 2 3 4 5 6 7 4 6 2 39 8 2 1 -1 1600 1 18 3199 30399 34 3 -1 2 12 7 50 56 \u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 #include <bits/stdc++.h> using namespace std ; #define int long long int exgcd ( int a , int b , int & x , int & y ) { if ( b == 0 ) { x = 1 ; y = 0 ; return a ; } int ans = exgcd ( b , a % b , x , y ); int tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return ans ; } signed main () { int t , a , b , c ; int x , y ; int minx , miny ; int maxx , maxy ; int cnt = 1 ; scanf ( \"%lld\" , & t ); bool flag = false ; while ( t -- ) { flag = false ; cnt = 0 ; scanf ( \"%lld %lld %lld\" , & a , & b , & c ); int gcd = exgcd ( a , b , x , y ); if ( c % gcd ) { cout << \"-1\" << endl ; continue ; } int bg = b / gcd ; int cg = c / gcd ; int ag = a / gcd ; int tmp ; x *= cg ; y *= cg ; //cout<<\"x= \"<<x<<\"y=\"<<y<<endl; tmp = x ; x = ( x % bg + bg -1 ) % bg + 1 ; //\u6700\u5c0f\u6b63\u6574\u6570\u89e3 \u82e5\u662f\u6700\u5c0f\u6574\u6570\u89e3\u5219\u4e0d\u7528-1 int ansy = ( y % ag + ag -1 ) % ag + 1 ; int t = ( x - tmp ) / bg ; y -= t * ag ; if ( x > 0 && y > 0 ) { minx = x ; maxy = y ; flag = true ; cnt = 1 ; int k = y / ag ; if ( y % ag == 0 ) { cnt += k -1 ; miny = ag ; maxx = x + ( k -1 ) * bg ; } else { cnt += k ; miny = y - k * ag ; maxx = x + k * bg ; } } if ( flag ) printf ( \"%lld %lld %lld %lld %lld \\n \" , cnt , minx , miny , maxx , maxy ); else printf ( \"%lld %lld \\n \" , x , ansy ); } return 0 ; }","title":"\u6269\u5c55\u6b27\u51e0\u91cc\u5fb7\u548c\u8d1d\u7956\u5b9a\u7406"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E6%89%A9%E6%AC%A7/#_1","text":"\u6269\u5c55\u6b27\u51e0\u91cc\u5fb7\u5219\u662f\u7528\u6765\u6c42\u89e3\u6709\u5173\u65b9\u7a0b \\(ax+by=m\\) \u7684\u95ee\u9898","title":"\u6982\u8ff0"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E6%89%A9%E6%AC%A7/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 int exgcd ( int a , int b , int & x , int & y ) { if ( b == 0 ) { x = 1 ; y = 0 ; return a ; } int ans = exgcd ( b , a % b , x , y ); int tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return ans ; } \u5224\u65ad\u65b9\u7a0b \\(ax+by=m\\) \u6216 \\(ax\u2261m(mod\\ b)\\) \u662f\u5426\u6709\u89e3 \u601d\u8def :\u5f53 \\(gcd(a,b)|m\\) \u65f6 \u65b9\u7a0b\u6709\u89e3\uff0c\u53cd\u4e4b\u5219\u65e0\u89e3 \u6c42\u89e3\u65b9\u7a0b \\(ax+by=m( ax\u2261m(mod\\ b) )\\) \u7684\u6700\u5c0f\u6b63\u6574\u6570\u89e3 \u601d\u8def 1.\u9996\u5148\u5224\u65ad\u65b9\u7a0b\u662f\u5426\u6709\u89e3\uff0c\u65e0\u89e3\u5219\u76f4\u63a5\u9000\u51fa 2.\u6269\u6b27\u6c42x\uff0c\u4ee4 \\(bg=m/gcd(a,b),\u5219x=(x\\%bg+bg)\\%bg\\)","title":"\u6269\u6b27\u6a21\u677f"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E6%89%A9%E6%AC%A7/#_3","text":"","title":"\u7ecf\u5178\u4f8b\u9898"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E6%89%A9%E6%AC%A7/#1-p1082","text":"\u9898\u76ee\u63cf\u8ff0 \u6c42\u5173\u4e8ex\u7684\u540c\u4f59\u65b9\u7a0bax\u22611(mod b)\u7684\u6700\u5c0f\u6b63\u6574\u6570\u89e3\u3002 \u8f93\u5165\u683c\u5f0f \u4e00\u884c\uff0c\u5305\u542b\u4e24\u4e2a\u6b63\u6574\u6570a,b,\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002 \u8f93\u51fa\u683c\u5f0f \u4e00\u4e2a\u6b63\u6574\u6570x0\uff0c\u5373\u6700\u5c0f\u6b63\u6574\u6570\u89e3\u3002\u8f93\u5165\u6570\u636e\u4fdd\u8bc1\u4e00\u5b9a\u6709\u89e3\u3002 \u8f93\u5165\u6837\u4f8b 1 3 10 \u8f93\u51fa\u6837\u4f8b 1 7 \u601d\u8def: \u6a21\u677f\u9898\uff0c\u7531\u4e8e\u9898\u76ee\u89c4\u5b9a\u4e00\u5b9a\u6709\u89e3\uff0c\u56e0\u6b64 \\(a\u22a5b\uff08a\u4e0eb\u4e92\u8d28\uff09\\) \uff0c\u6b64\u65f6\u65e2\u53ef\u4ee5\u7528\u6269\u6b27\u6c42\u89e3\uff0c\u4e5f\u53ef\u7528\u6b27\u62c9\u5b9a\u7406\u6c42\u89e3 \u5728\u8fd9\u79d1\u666e\u4e00\u4e0b\u6b27\u62c9\u5b9a\u7406\uff1a \\(a^\u03c6(n) \u22611(mod\\ n)(\u5176\u4e2d\uff0ca\u4e0en\u5747\u4e3a\u6b63\u6574\u6570\uff0c\u4e14\u4e24\u8005\u4e92\u8d28\u3002)\\) \u8d39\u9a6c\u5c0f\u5b9a\u7406\u4e3a\u6b27\u62c9\u5b9a\u7406\u7684\u7279\u6b8a\u5f62\u5f0f \u4ee3\u7801\uff1a \u6269\u6b27\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <bits/stdc++.h> using namespace std ; #define int long long int exgcd ( int a , int b , int & x , int & y ) { if ( b == 0 ) { x = 1 ; y = 0 ; return a ; } int ans = exgcd ( b , a % b , x , y ); int tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return ans ; } signed main () { int a , b ; int x , y ; cin >> a >> b ; exgcd ( a , b , x , y ); x = ( x % b + b ) % b ; cout << x << endl ; return 0 ; } \u6b27\u62c9\u5b9a\u7406\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #include <bits/stdc++.h> using namespace std ; #define int long long int qpow ( int a , int n , int b ) { int ans = 1 ; while ( n ) { if ( n & 1 ) ans = ans % b * a % b ; a = a % b * a % b ; n >>= 1 ; } return ans ; } int euler ( int n ) { int ans = n ; for ( int i = 2 ; i * i <= n ; i ++ ) { if ( n % i == 0 ) ans -= ans / i ; while ( n % i == 0 ) n /= i ; } if ( n > 1 ) ans -= ans / n ; return ans ; } signed main () { int a , b ; cin >> a >> b ; cout << qpow ( a , euler ( b ) -1 , b ) << endl ; return 0 ; }","title":"\u4f8b1. \u6d1b\u8c37 P1082 \u540c\u4f59\u65b9\u7a0b"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E6%89%A9%E6%AC%A7/#2p5656","text":"\u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e0d\u5b9a\u65b9\u7a0bax+by=c \u82e5\u8be5\u65b9\u7a0b\u65e0\u6574\u6570\u89e3\uff0c\u8f93\u51fa-1\u3002 \u82e5\u8be5\u65b9\u7a0b\u6709\u6574\u6570\u89e3\uff0c\u4e14\u6709\u6b63\u6574\u6570\u89e3\uff0c\u5219\u8f93\u51fa\u5176\u6b63\u6574\u6570\u89e3\u7684\u6570\u91cf\uff0c\u6240\u6709\u6b63\u6574\u6570\u89e3\u4e2dx\u7684\u6700\u5c0f\u503c\uff0c\u6240\u6709\u6b63\u6574\u6570\u89e3\u4e2dy\u7684\u6700\u5c0f\u503c\uff0c\u6240\u6709\u6b63\u6574\u6570\u89e3\u4e2dx\u7684\u6700\u5927\u503c\uff0c\u4ee5\u53ca\u6240\u6709\u6b63\u6574\u6570\u89e3\u4e2dy \u7684\u6700\u5927\u503c\u3002 \u82e5\u65b9\u7a0b\u6709\u6574\u6570\u89e3\uff0c\u4f46\u6ca1\u6709\u6b63\u6574\u6570\u89e3\uff0c\u4f60\u9700\u8981\u8f93\u51fa\u6240\u6709\u6574\u6570\u89e3\u4e2dx\u7684\u6700\u5c0f\u6b63\u6574\u6570\u503c\uff0cy\u7684\u6700\u5c0f\u6b63\u6574\u6570\u503c\u3002 \u6b63\u6574\u6570\u89e3\u5373\u4e3a x, y \u5747\u4e3a\u6b63\u6574\u6570\u7684\u89e3\uff0c 0 \u4e0d\u662f\u6b63\u6574\u6570\u3002 \u6574\u6570\u89e3\u5373\u4e3a x,y \u5747\u4e3a\u6574\u6570\u7684\u89e3\u3002 x\u7684\u6700\u5c0f\u6b63\u6574\u6570\u503c\u5373\u6240\u6709x\u4e3a\u6b63\u6574\u6570\u7684\u6574\u6570\u89e3\u4e2dx\u7684\u6700\u5c0f\u503c\uff0cy\u540c\u7406\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570 T\uff0c\u4ee3\u8868\u6570\u636e\u7ec4\u6570\u3002 \u63a5\u4e0b\u6765 T \u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u7531\u7a7a\u683c\u9694\u5f00\u7684\u6b63\u6574\u6570a,b,c\u3002 \u8f93\u51fa\u683c\u5f0f T \u884c\u3002 \u82e5\u8be5\u884c\u5bf9\u5e94\u7684\u8be2\u95ee\u65e0\u6574\u6570\u89e3\uff0c\u4e00\u4e2a\u6570\u5b57 -1\u3002 \u82e5\u8be5\u884c\u5bf9\u5e94\u7684\u8be2\u95ee\u6709\u6574\u6570\u89e3\u4f46\u65e0\u6b63\u6574\u6570\u89e3\uff0c\u5305\u542b 2\u4e2a\u7531\u7a7a\u683c\u9694\u5f00\u7684\u6570\u5b57\uff0c\u4f9d\u6b21\u4ee3\u8868\u6574\u6570\u89e3\u4e2d\uff0cx\u7684\u6700\u5c0f\u6b63\u6574\u6570\u503c\uff0cy \u7684\u6700\u5c0f\u6b63\u6574\u6570\u503c\u3002 \u5426\u5219\u5305\u542b5\u4e2a\u7531\u7a7a\u683c\u9694\u5f00\u7684\u6570\u5b57\uff0c\u4f9d\u6b21\u4ee3\u8868\u6b63\u6574\u6570\u89e3\u7684\u6570\u91cf\uff0c\u6b63\u6574\u6570\u89e3\u4e2d\uff0cx\u7684\u6700\u5c0f\u503c\uff0cy\u7684\u6700\u5c0f\u503c\uff0cx\u7684\u6700\u5927\u503c\uff0cy\u7684\u6700\u5927\u503c\u3002 \u8f93\u5165\u6837\u4f8b 1 2 3 4 5 6 7 8 7 2 11 100 3 18 6 192 608 17 19 2 60817 11 45 14 19 19 810 98 76 5432 \u8f93\u51fa\u6837\u4f8b 1 2 3 4 5 6 7 4 6 2 39 8 2 1 -1 1600 1 18 3199 30399 34 3 -1 2 12 7 50 56 \u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 #include <bits/stdc++.h> using namespace std ; #define int long long int exgcd ( int a , int b , int & x , int & y ) { if ( b == 0 ) { x = 1 ; y = 0 ; return a ; } int ans = exgcd ( b , a % b , x , y ); int tmp = x ; x = y ; y = tmp - ( a / b ) * y ; return ans ; } signed main () { int t , a , b , c ; int x , y ; int minx , miny ; int maxx , maxy ; int cnt = 1 ; scanf ( \"%lld\" , & t ); bool flag = false ; while ( t -- ) { flag = false ; cnt = 0 ; scanf ( \"%lld %lld %lld\" , & a , & b , & c ); int gcd = exgcd ( a , b , x , y ); if ( c % gcd ) { cout << \"-1\" << endl ; continue ; } int bg = b / gcd ; int cg = c / gcd ; int ag = a / gcd ; int tmp ; x *= cg ; y *= cg ; //cout<<\"x= \"<<x<<\"y=\"<<y<<endl; tmp = x ; x = ( x % bg + bg -1 ) % bg + 1 ; //\u6700\u5c0f\u6b63\u6574\u6570\u89e3 \u82e5\u662f\u6700\u5c0f\u6574\u6570\u89e3\u5219\u4e0d\u7528-1 int ansy = ( y % ag + ag -1 ) % ag + 1 ; int t = ( x - tmp ) / bg ; y -= t * ag ; if ( x > 0 && y > 0 ) { minx = x ; maxy = y ; flag = true ; cnt = 1 ; int k = y / ag ; if ( y % ag == 0 ) { cnt += k -1 ; miny = ag ; maxx = x + ( k -1 ) * bg ; } else { cnt += k ; miny = y - k * ag ; maxx = x + k * bg ; } } if ( flag ) printf ( \"%lld %lld %lld %lld %lld \\n \" , cnt , minx , miny , maxx , maxy ); else printf ( \"%lld %lld \\n \" , x , ansy ); } return 0 ; }","title":"\u4f8b2.\u6d1b\u8c37P5656 \u4e8c\u5143\u4e00\u6b21\u65b9\u7a0b"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/","text":"\u6b27\u62c9\u51fd\u6570 \u6982\u8ff0 \u6b27\u62c9\u51fd\u6570\u5c31\u662f\u5bf9\u4e8e\u4e00\u4e2a\u6b63\u6574\u6570n\uff0c\u5c0f\u4e8en\u4e14\u548cn\u4e92\u8d28\u7684\u6b63\u6574\u6570\uff08\u5305\u62ec1\uff09\u7684\u4e2a\u6570\uff0c\u8bb0\u4f5c\u03c6(n) \u3002 \u6b27\u62c9\u51fd\u6570\u7684\u901a\u5f0f\uff1a \\(\u03c6(n)=n*(1-1/p1)(1-1/p2)(1-1/p3)*(1-1/p4)\u2026\u2026(1-1/pn)\\) \u5176\u4e2dp1, p2\u2026\u2026pn\u4e3an\u7684\u6240\u6709\u8d28\u56e0\u6570\uff0cn\u662f\u4e0d\u4e3a0\u7684\u6574\u6570\u3002\u03c6(1)=1\uff08\u552f\u4e00\u548c1\u4e92\u8d28\u7684\u6570\u5c31\u662f1\u672c\u8eab\uff09\u3002 \u6027\u8d28 \u5f53m,n\u4e92\u8d28\u65f6\uff0c\u6709 \\(phi\uff08m*n\uff09= phi\uff08m\uff09* phi\uff08n\uff09\\) \uff1b \u82e5i%p==0\uff0c\u6709 \\(phi\uff08i*p\uff09 = p * phi(i)\\) \uff1b \u5bf9\u4e8e\u4e92\u8d28x\u4e0ep\uff0c\u6709 \\(x^{phi(p)}\u22611\uff08mod \\ p)\\) ,\u56e0\u6b64x\u7684\u9006\u5143\u4e3a \\(x^{phi(p)-1}\\) \uff0c\u5373\u6b27\u62c9\u5b9a\u7406\u3002 \uff08\u7279\u522b\u5730\uff0c\u5f53p\u4e3a\u8d28\u6570\u65f6\uff0c \\(phi\uff08p\uff09=p-1\\) ,\u6b64\u65f6\u9006\u5143\u4e3a \\(x^{p-2}\\) \uff0c\u5373\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff09 \u5f53n\u4e3a\u5947\u6570\u65f6\uff0c \\(phi(2n)=phi(n)\\) \u82e5x\u4e0ep\u4e92\u8d28\uff0c\u5219p-x\u4e5f\u4e0ep\u4e92\u8d28\uff0c\u56e0\u6b64\u5c0f\u4e8ep\u4e14\u4e0ep\u4e92\u8d28\u7684\u6570\u4e4b\u548c\u4e3a \\(phi(x)*x/2\\) ; N>1\uff0c\u4e0d\u5927\u4e8eN\u4e14\u548cN\u4e92\u7d20\u7684\u6240\u6709\u6b63\u6574\u6570\u7684\u548c\u662f \\(1/2 *N *eular(N)\\) \u3002 \u6b27\u62c9\u7b5b\u6a21\u677f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 void eular_ () //\u6b27\u62c9\u7b5b\u6a21\u677f { memset ( vis , true , sizeof ( vis )); int cnt = 1 ; vis [ 1 ] = false ; for ( int i = 2 ; i <= N -5 ; i ++ ) { if ( vis [ i ]) prime [ cnt ++ ] = I ; for ( int j = 1 ; j < cnt && prime [ j ] * i <= N -5 ; j ++ ) { vis [ prime [ j ] * i ] = false ; if ( i % prime [ j ] == 0 ) { break ; } //\u82e5i\u4e3ap[j]\u7684\u500d\u6570\uff0c\u5219i=k*p[j]\uff0c //\u5728\u548cp[j+1]\u76f8\u4e58\u540e\u5f97\u51fa\u7684x=i*p[j+1]=p[j]*k*p[j+1] //\u5219\u5728i=k*p[j+1]\u65f6\uff0c\u7531\u4e8ej\u4ece\u5c0f\u5230\u5927\uff0c\u5fc5\u5b9a\u7ecf\u8fc7\u4e4b\u524d\u7684p[j]\uff0c\u4f1a\u91cd\u590d\u8ba1\u7b97 } } } \u6b27\u62c9\u51fd\u6570\u6a21\u677f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 int euler ( int x ) { int ans = x ; for ( int i = 2 ; i * i <= x ; i ++ ) //\u6a21\u62df\uff081-p1\uff09*\uff081-p2\uff09\u2026\u2026\u8fc7\u7a0b\uff0cpi\u4e3ax\u7684\u8d28\u56e0\u6570 { if ( x % i == 0 ) { ans = ans - ans / i ; } while ( x % i == 0 ) { x /= i ; } } if ( x > 1 ) ans = ans - ans / x ; //\u82e5x\u4e0d\u4e3a1\uff0c\u8bf4\u660e\u4ecd\u6709\u4e00\u4e2a\u8d28\u56e0\u6570\u6ca1\u6709\u4e58 return ans ; } \u7ebf\u6027\u6c42\u6b27\u62c9\u51fd\u6570 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 void euler_ () { memset ( vis , true , sizeof ( vis )); memset ( phi , 0 , sizeof ( phi )); int cnt = 1 ; vis [ 1 ] = false ; phi [ 1 ] = 1 ; //\u7279\u52241,gcd(1,1)=1 for ( int i = 2 ; i <= N -5 ; i ++ ) { if ( vis [ i ]) { prime [ cnt ++ ] = i ; phi [ i ] = i -1 ; } for ( int j = 1 ; j < cnt && prime [ j ] * i <= N -5 ; j ++ ) { vis [ prime [ j ] * i ] = false ; if ( i % prime [ j ] == 0 ) { phi [ prime [ j ] * i ] = phi [ i ] * prime [ j ]; break ; } phi [ prime [ j ] * i ] = phi [ i ] * phi [ prime [ j ]]; //\u82e5i\u4e3ap[j]\u7684\u500d\u6570\uff0c\u5219i=k*p[j]\uff0c //\u5728\u548cp[j+1]\u76f8\u4e58\u540e\u5f97\u51fa\u7684x=i*p[j+1]=p[j]*k*p[j+1] //\u5219\u5728i=k*p[j+1]\u65f6\uff0c\u7531\u4e8ej\u4ece\u5c0f\u5230\u5927\uff0c\u5fc5\u5b9a\u7ecf\u8fc7\u4e4b\u524d\u7684p[j]\uff0c\u4f1a\u91cd\u590d\u8ba1\u7b97 } } } \u4f8b\u9898 \u4f8b\u98981 HDU2824 The Euler function \u9898\u76ee\u63cf\u8ff0 The Euler function phi is an important kind of function in number theory, (n) represents the amount of the numbers which are smaller than n and coprime to n, and this function has a lot of beautiful characteristics. Here comes a very easy question: suppose you are given a, b, try to calculate (a)+ (a+1)+....+ (b) \u8f93\u5165\u683c\u5f0f There are several test cases. Each line has two integers a, b (2<a<b<3000000). \u8f93\u51fa\u683c\u5f0f Output the result of (a)+ (a+1)+....+ (b) \u8f93\u5165\u6837\u4f8b 1 3 100 \u8f93\u51fa\u6837\u4f8b 1 3042 \u601d\u8def: \u7ebf\u6027\u6c42\u6b27\u62c9\u51fd\u6570\u6a21\u677f\u9898 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 #include <bits/stdc++.h> using namespace std ; typedef long long ll ; const int N = 3e6 + 10 ; int phi [ N ]; bool vis [ N ]; int prime [ N ]; int sum [ N ]; void eular_ () //\u6b27\u62c9\u7b5b\u6a21\u677f { memset ( vis , true , sizeof ( vis )); memset ( phi , 0 , sizeof ( phi )); int cnt = 1 ; vis [ 1 ] = false ; phi [ 1 ] = 1 ; //\u7279\u52241,gcd(1,1)=1 for ( int i = 2 ; i <= N -5 ; i ++ ) { if ( vis [ i ]) { prime [ cnt ++ ] = i ; phi [ i ] = i -1 ; } for ( int j = 1 ; j < cnt && prime [ j ] * i <= N -5 ; j ++ ) { vis [ prime [ j ] * i ] = false ; if ( i % prime [ j ] == 0 ) { phi [ prime [ j ] * i ] = phi [ i ] * prime [ j ]; break ; } phi [ prime [ j ] * i ] = phi [ i ] * phi [ prime [ j ]]; //\u82e5i\u4e3ap[j]\u7684\u500d\u6570\uff0c\u5219i=k*p[j]\uff0c\u5728\u548cp[j+1]\u76f8\u4e58\u540e\u5f97\u51fa\u7684*p[j+1]=p[j]*k*p[j+1] //\u5219\u5728i=k*p[j+1]\u65f6\uff0c\u7531\u4e8ej\u4ece\u5c0f\u5230\u5927\uff0c\u5fc5\u5b9a\u7ecf\u8fc7\u4e4b\u524d\u7684p[j]\uff0c\u4f1a\u91cd\u590d\u8ba1 } } } int main () { int a , b ; eular_ (); while ( cin >> a >> b ) { ll ans = 0 ; for ( int i = a ; i <= b ; i ++ ) ans += phi [ i ]; cout << ans << endl ; } return 0 ; } HDU 2588 GCD \u9898\u76ee\u63cf\u8ff0 The greatest common divisor GCD(a,b) of two positive integers a and b,sometimes written (a,b),is the largest divisor common to a and b,For example,(1,2)=1,(12,18)=6. (a,b) can be easily found by the Euclidean algorithm. Now Carp is considering a little more difficult problem: Given integers N and M, how many integer X satisfies 1<=X<=N and (X,N)>=M. \u8f93\u5165\u683c\u5f0f The first line of input is an integer T(T<=100) representing the number of test cases. The following T lines each contains two numbers N and M (2<=N<=1000000000, 1<=M<=N), representing a test case. \u8f93\u51fa\u683c\u5f0f For each test case,output the answer on a single line. \u8f93\u5165\u6837\u4f8b 1 2 3 4 3 1 1 10 2 10000 72 \u8f93\u51fa\u6837\u4f8b 1 2 3 1 6 260 \u601d\u8def: \u5f53M\u4e3a1 \u65f6\uff0c\u6613\u77e5\u7b54\u6848\u4e3aN\uff0c\u5f53M>1\u65f6\uff0c\u53ef\u4ee5\u786e\u5b9a\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u4e00\u5b9a\u65f6N\u5927\u4e8eM\u7684\u7ea6\u6570\uff0c\u5982\u679cx\u4e0d\u80fd\u6574\u9664N\uff0c\u5219gcd\uff08x,N\uff09=1<M\uff0c\u6211\u4eec\u77e5\u9053N\u7684\u7ea6\u6570\uff08\u8bbe\u4e3ax\uff09\u548cN\u7684\u6700\u5927\u516c\u7ea6\u6570\u4e3ax\uff0c\u90a3\u662f\u5426\u672c\u9898\u53ea\u6709N\u7684\u7ea6\u6570\u6ee1\u8db3\u6761\u4ef6\u5462\uff1f\u663e\u7136\u4e0d\u662f\uff0c\u6570x k\uff08k\u4e3a\u6ee1\u8db3\u6761\u4ef6\u7684\u67d0\u4e9b\u6570\uff09\u4e0eN\u7684\u7ea6\u6570\u540c\u6837\u4e3ax\uff0c\u5012\u9000\u4e00\u4e0b\uff0c\u5f53gcd\uff08N\uff0cx k\uff09=x\u65f6\uff0c\u6709gcd\uff08N/x\uff0ck\uff09=1\uff0c\u5373k\u6ee1\u8db3\u4e0eN/x\u4e92\u8d28\u65f6\u6ee1\u8db3N\u4e0ex*k\u7684\u6700\u5927\u516c\u7ea6\u6570\u4e3ax\uff0c\u4e8e\u662f\u672c\u9898\u5c31\u53d8\u6210\u4e86\u5c311-N/x\u5185\uff0c\u4e0eN/x\u4e92\u8d28\u7684\u6570\u7684\u4e2a\u6570\uff0c\u7528\u6b27\u62c9\u51fd\u6570\u6c42\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 #include <bits/stdc++.h> using namespace std ; typedef long long ll ; const int N = 1e5 ; ll eular ( ll x ) { ll ans = x ; for ( int i = 2 ; i * i <= x ; i ++ ) { if ( x % i == 0 ) { ans = ans - ans / i ; } while ( x % i == 0 ) { x /= i ; } } if ( x > 1 ) ans = ans - ans / x ; return ans ; } int main () { int t ; cin >> t ; while ( t -- ) { ll ans = 0 ; ll n , m ; cin >> n >> m ; int i ; for ( i = 1 ; i * i < n ; i ++ ) { if ( n % i == 0 ) { if ( i >= m ) { ans += eular ( n / i ); } if ( n / i >= m ) { ans += eular ( i ); } } } if ( i * i == n && i >= m ) ans += eular ( i ); cout << ans << endl ; } return 0 ; } \u4f8b\u98983 HDU phi \u9898\u76ee\u63cf\u8ff0 \u7ed9\u51fa\u82e5\u5e72\u4e2a\u6b63\u6574\u6570n\uff0c\u8bf7\u4f60\u6c42\u51fa\u6700\u5c0f\u7684m\uff0c\u4f7f\u5f97\u03c6(m)\u2265n\u3002 \u8f93\u5165\u683c\u5f0f \u672c\u9898\u6709\u591a\u7ec4\u8f93\u5165\u3002 \u7b2c\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570T\u8868\u793a\u6570\u636e\u7ec4\u6570 \u63a5\u4e0b\u6765T\u884c\u6bcf\u884c\u4e00\u4e2a\u6b63\u6574\u6570n \u6570\u636e\u4fdd\u8bc1 \\(1\u2264T\u2264104,1\u2264n\u2264106\\) \u3002 \u8f93\u51fa\u683c\u5f0f \u5171T\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6570\u4ee3\u8868\u5bf9\u5e94\u7684\u7b54\u6848 \u8f93\u5165\u6837\u4f8b 1 2 3 4 5 6 5 1 2 3 4 5 \u8f93\u51fa\u6837\u4f8b 1 2 3 4 5 1 3 5 5 7 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 #include <bits/stdc++.h> using namespace std ; typedef long long ll ; const ll N = 5e6 + 10 ; int phi [ N -5 ]; bool vis [ N -5 ]; int prime [ N -5 ]; struct node { int pos ; int val ; friend bool operator < ( const node x , const node y ) //\u5bf9\u8f93\u5165\u8fdb\u884c\u5904\u4f18\u5148\u5904\u7406n\u5c0f\u7684\u8f93\u5165\u5e76\u8bb0\u5f55 { return x . val < y . val ; } } node [ 10005 ]; int ans [ 10005 ]; int t ; void euler () { int now = 1 ; memset ( vis , false , sizeof ( vis )); memset ( phi , 0 , sizeof ( phi )); vis [ 1 ] = true ; phi [ 1 ] = 1 ; int cnt = 0 ; for ( int i = 1 ; i <= N -10 ; i ++ ) { if ( ! vis [ i ]) { prime [ ++ cnt ] = i ; phi [ i ] = i -1 ; } for ( int j = 1 ; j <= cnt && prime [ j ] * i <= N -10 ; j ++ ) { vis [ prime [ j ] * i ] = true ; if ( i % prime [ j ] == 0 ) { phi [ i * prime [ j ]] = phi [ i ] * prime [ j ]; break ; } phi [ i * prime [ j ]] = phi [ i ] * phi [ prime [ j ] -1 ]; } while ( phi [ i ] >= node [ now ]. val & now <= t ) { ans [ node [ now ]. pos ] = i ; now ++ ; } if ( now > t ) return ; } } int main () { euler (); cin >> t ; for ( int i = 1 ; i <= t ; i ++ ) { cin >> node [ i ]. val ; node [ i ]. pos = i ; } sort ( node + 1 , node + t + 1 ); euler (); for ( int i = 1 ; i <= t ; i ++ ) cout << ans [ i ] << endl ; return 0 ; }","title":"\u6b27\u62c9\u51fd\u6570"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_1","text":"","title":"\u6b27\u62c9\u51fd\u6570"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_2","text":"\u6b27\u62c9\u51fd\u6570\u5c31\u662f\u5bf9\u4e8e\u4e00\u4e2a\u6b63\u6574\u6570n\uff0c\u5c0f\u4e8en\u4e14\u548cn\u4e92\u8d28\u7684\u6b63\u6574\u6570\uff08\u5305\u62ec1\uff09\u7684\u4e2a\u6570\uff0c\u8bb0\u4f5c\u03c6(n) \u3002 \u6b27\u62c9\u51fd\u6570\u7684\u901a\u5f0f\uff1a \\(\u03c6(n)=n*(1-1/p1)(1-1/p2)(1-1/p3)*(1-1/p4)\u2026\u2026(1-1/pn)\\) \u5176\u4e2dp1, p2\u2026\u2026pn\u4e3an\u7684\u6240\u6709\u8d28\u56e0\u6570\uff0cn\u662f\u4e0d\u4e3a0\u7684\u6574\u6570\u3002\u03c6(1)=1\uff08\u552f\u4e00\u548c1\u4e92\u8d28\u7684\u6570\u5c31\u662f1\u672c\u8eab\uff09\u3002","title":"\u6982\u8ff0"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_3","text":"\u5f53m,n\u4e92\u8d28\u65f6\uff0c\u6709 \\(phi\uff08m*n\uff09= phi\uff08m\uff09* phi\uff08n\uff09\\) \uff1b \u82e5i%p==0\uff0c\u6709 \\(phi\uff08i*p\uff09 = p * phi(i)\\) \uff1b \u5bf9\u4e8e\u4e92\u8d28x\u4e0ep\uff0c\u6709 \\(x^{phi(p)}\u22611\uff08mod \\ p)\\) ,\u56e0\u6b64x\u7684\u9006\u5143\u4e3a \\(x^{phi(p)-1}\\) \uff0c\u5373\u6b27\u62c9\u5b9a\u7406\u3002 \uff08\u7279\u522b\u5730\uff0c\u5f53p\u4e3a\u8d28\u6570\u65f6\uff0c \\(phi\uff08p\uff09=p-1\\) ,\u6b64\u65f6\u9006\u5143\u4e3a \\(x^{p-2}\\) \uff0c\u5373\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff09 \u5f53n\u4e3a\u5947\u6570\u65f6\uff0c \\(phi(2n)=phi(n)\\) \u82e5x\u4e0ep\u4e92\u8d28\uff0c\u5219p-x\u4e5f\u4e0ep\u4e92\u8d28\uff0c\u56e0\u6b64\u5c0f\u4e8ep\u4e14\u4e0ep\u4e92\u8d28\u7684\u6570\u4e4b\u548c\u4e3a \\(phi(x)*x/2\\) ; N>1\uff0c\u4e0d\u5927\u4e8eN\u4e14\u548cN\u4e92\u7d20\u7684\u6240\u6709\u6b63\u6574\u6570\u7684\u548c\u662f \\(1/2 *N *eular(N)\\) \u3002","title":"\u6027\u8d28"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 void eular_ () //\u6b27\u62c9\u7b5b\u6a21\u677f { memset ( vis , true , sizeof ( vis )); int cnt = 1 ; vis [ 1 ] = false ; for ( int i = 2 ; i <= N -5 ; i ++ ) { if ( vis [ i ]) prime [ cnt ++ ] = I ; for ( int j = 1 ; j < cnt && prime [ j ] * i <= N -5 ; j ++ ) { vis [ prime [ j ] * i ] = false ; if ( i % prime [ j ] == 0 ) { break ; } //\u82e5i\u4e3ap[j]\u7684\u500d\u6570\uff0c\u5219i=k*p[j]\uff0c //\u5728\u548cp[j+1]\u76f8\u4e58\u540e\u5f97\u51fa\u7684x=i*p[j+1]=p[j]*k*p[j+1] //\u5219\u5728i=k*p[j+1]\u65f6\uff0c\u7531\u4e8ej\u4ece\u5c0f\u5230\u5927\uff0c\u5fc5\u5b9a\u7ecf\u8fc7\u4e4b\u524d\u7684p[j]\uff0c\u4f1a\u91cd\u590d\u8ba1\u7b97 } } }","title":"\u6b27\u62c9\u7b5b\u6a21\u677f"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_5","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 int euler ( int x ) { int ans = x ; for ( int i = 2 ; i * i <= x ; i ++ ) //\u6a21\u62df\uff081-p1\uff09*\uff081-p2\uff09\u2026\u2026\u8fc7\u7a0b\uff0cpi\u4e3ax\u7684\u8d28\u56e0\u6570 { if ( x % i == 0 ) { ans = ans - ans / i ; } while ( x % i == 0 ) { x /= i ; } } if ( x > 1 ) ans = ans - ans / x ; //\u82e5x\u4e0d\u4e3a1\uff0c\u8bf4\u660e\u4ecd\u6709\u4e00\u4e2a\u8d28\u56e0\u6570\u6ca1\u6709\u4e58 return ans ; }","title":"\u6b27\u62c9\u51fd\u6570\u6a21\u677f"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_6","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 void euler_ () { memset ( vis , true , sizeof ( vis )); memset ( phi , 0 , sizeof ( phi )); int cnt = 1 ; vis [ 1 ] = false ; phi [ 1 ] = 1 ; //\u7279\u52241,gcd(1,1)=1 for ( int i = 2 ; i <= N -5 ; i ++ ) { if ( vis [ i ]) { prime [ cnt ++ ] = i ; phi [ i ] = i -1 ; } for ( int j = 1 ; j < cnt && prime [ j ] * i <= N -5 ; j ++ ) { vis [ prime [ j ] * i ] = false ; if ( i % prime [ j ] == 0 ) { phi [ prime [ j ] * i ] = phi [ i ] * prime [ j ]; break ; } phi [ prime [ j ] * i ] = phi [ i ] * phi [ prime [ j ]]; //\u82e5i\u4e3ap[j]\u7684\u500d\u6570\uff0c\u5219i=k*p[j]\uff0c //\u5728\u548cp[j+1]\u76f8\u4e58\u540e\u5f97\u51fa\u7684x=i*p[j+1]=p[j]*k*p[j+1] //\u5219\u5728i=k*p[j+1]\u65f6\uff0c\u7531\u4e8ej\u4ece\u5c0f\u5230\u5927\uff0c\u5fc5\u5b9a\u7ecf\u8fc7\u4e4b\u524d\u7684p[j]\uff0c\u4f1a\u91cd\u590d\u8ba1\u7b97 } } }","title":"\u7ebf\u6027\u6c42\u6b27\u62c9\u51fd\u6570"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_7","text":"","title":"\u4f8b\u9898"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#1-hdu2824-the-euler-function","text":"\u9898\u76ee\u63cf\u8ff0 The Euler function phi is an important kind of function in number theory, (n) represents the amount of the numbers which are smaller than n and coprime to n, and this function has a lot of beautiful characteristics. Here comes a very easy question: suppose you are given a, b, try to calculate (a)+ (a+1)+....+ (b) \u8f93\u5165\u683c\u5f0f There are several test cases. Each line has two integers a, b (2<a<b<3000000). \u8f93\u51fa\u683c\u5f0f Output the result of (a)+ (a+1)+....+ (b) \u8f93\u5165\u6837\u4f8b 1 3 100 \u8f93\u51fa\u6837\u4f8b 1 3042 \u601d\u8def: \u7ebf\u6027\u6c42\u6b27\u62c9\u51fd\u6570\u6a21\u677f\u9898 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 #include <bits/stdc++.h> using namespace std ; typedef long long ll ; const int N = 3e6 + 10 ; int phi [ N ]; bool vis [ N ]; int prime [ N ]; int sum [ N ]; void eular_ () //\u6b27\u62c9\u7b5b\u6a21\u677f { memset ( vis , true , sizeof ( vis )); memset ( phi , 0 , sizeof ( phi )); int cnt = 1 ; vis [ 1 ] = false ; phi [ 1 ] = 1 ; //\u7279\u52241,gcd(1,1)=1 for ( int i = 2 ; i <= N -5 ; i ++ ) { if ( vis [ i ]) { prime [ cnt ++ ] = i ; phi [ i ] = i -1 ; } for ( int j = 1 ; j < cnt && prime [ j ] * i <= N -5 ; j ++ ) { vis [ prime [ j ] * i ] = false ; if ( i % prime [ j ] == 0 ) { phi [ prime [ j ] * i ] = phi [ i ] * prime [ j ]; break ; } phi [ prime [ j ] * i ] = phi [ i ] * phi [ prime [ j ]]; //\u82e5i\u4e3ap[j]\u7684\u500d\u6570\uff0c\u5219i=k*p[j]\uff0c\u5728\u548cp[j+1]\u76f8\u4e58\u540e\u5f97\u51fa\u7684*p[j+1]=p[j]*k*p[j+1] //\u5219\u5728i=k*p[j+1]\u65f6\uff0c\u7531\u4e8ej\u4ece\u5c0f\u5230\u5927\uff0c\u5fc5\u5b9a\u7ecf\u8fc7\u4e4b\u524d\u7684p[j]\uff0c\u4f1a\u91cd\u590d\u8ba1 } } } int main () { int a , b ; eular_ (); while ( cin >> a >> b ) { ll ans = 0 ; for ( int i = a ; i <= b ; i ++ ) ans += phi [ i ]; cout << ans << endl ; } return 0 ; }","title":"\u4f8b\u98981 HDU2824 The Euler function"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#hdu-2588-gcd","text":"\u9898\u76ee\u63cf\u8ff0 The greatest common divisor GCD(a,b) of two positive integers a and b,sometimes written (a,b),is the largest divisor common to a and b,For example,(1,2)=1,(12,18)=6. (a,b) can be easily found by the Euclidean algorithm. Now Carp is considering a little more difficult problem: Given integers N and M, how many integer X satisfies 1<=X<=N and (X,N)>=M. \u8f93\u5165\u683c\u5f0f The first line of input is an integer T(T<=100) representing the number of test cases. The following T lines each contains two numbers N and M (2<=N<=1000000000, 1<=M<=N), representing a test case. \u8f93\u51fa\u683c\u5f0f For each test case,output the answer on a single line. \u8f93\u5165\u6837\u4f8b 1 2 3 4 3 1 1 10 2 10000 72 \u8f93\u51fa\u6837\u4f8b 1 2 3 1 6 260 \u601d\u8def: \u5f53M\u4e3a1 \u65f6\uff0c\u6613\u77e5\u7b54\u6848\u4e3aN\uff0c\u5f53M>1\u65f6\uff0c\u53ef\u4ee5\u786e\u5b9a\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u4e00\u5b9a\u65f6N\u5927\u4e8eM\u7684\u7ea6\u6570\uff0c\u5982\u679cx\u4e0d\u80fd\u6574\u9664N\uff0c\u5219gcd\uff08x,N\uff09=1<M\uff0c\u6211\u4eec\u77e5\u9053N\u7684\u7ea6\u6570\uff08\u8bbe\u4e3ax\uff09\u548cN\u7684\u6700\u5927\u516c\u7ea6\u6570\u4e3ax\uff0c\u90a3\u662f\u5426\u672c\u9898\u53ea\u6709N\u7684\u7ea6\u6570\u6ee1\u8db3\u6761\u4ef6\u5462\uff1f\u663e\u7136\u4e0d\u662f\uff0c\u6570x k\uff08k\u4e3a\u6ee1\u8db3\u6761\u4ef6\u7684\u67d0\u4e9b\u6570\uff09\u4e0eN\u7684\u7ea6\u6570\u540c\u6837\u4e3ax\uff0c\u5012\u9000\u4e00\u4e0b\uff0c\u5f53gcd\uff08N\uff0cx k\uff09=x\u65f6\uff0c\u6709gcd\uff08N/x\uff0ck\uff09=1\uff0c\u5373k\u6ee1\u8db3\u4e0eN/x\u4e92\u8d28\u65f6\u6ee1\u8db3N\u4e0ex*k\u7684\u6700\u5927\u516c\u7ea6\u6570\u4e3ax\uff0c\u4e8e\u662f\u672c\u9898\u5c31\u53d8\u6210\u4e86\u5c311-N/x\u5185\uff0c\u4e0eN/x\u4e92\u8d28\u7684\u6570\u7684\u4e2a\u6570\uff0c\u7528\u6b27\u62c9\u51fd\u6570\u6c42\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 #include <bits/stdc++.h> using namespace std ; typedef long long ll ; const int N = 1e5 ; ll eular ( ll x ) { ll ans = x ; for ( int i = 2 ; i * i <= x ; i ++ ) { if ( x % i == 0 ) { ans = ans - ans / i ; } while ( x % i == 0 ) { x /= i ; } } if ( x > 1 ) ans = ans - ans / x ; return ans ; } int main () { int t ; cin >> t ; while ( t -- ) { ll ans = 0 ; ll n , m ; cin >> n >> m ; int i ; for ( i = 1 ; i * i < n ; i ++ ) { if ( n % i == 0 ) { if ( i >= m ) { ans += eular ( n / i ); } if ( n / i >= m ) { ans += eular ( i ); } } } if ( i * i == n && i >= m ) ans += eular ( i ); cout << ans << endl ; } return 0 ; }","title":"HDU 2588 GCD"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#3-hdu-phi","text":"\u9898\u76ee\u63cf\u8ff0 \u7ed9\u51fa\u82e5\u5e72\u4e2a\u6b63\u6574\u6570n\uff0c\u8bf7\u4f60\u6c42\u51fa\u6700\u5c0f\u7684m\uff0c\u4f7f\u5f97\u03c6(m)\u2265n\u3002 \u8f93\u5165\u683c\u5f0f \u672c\u9898\u6709\u591a\u7ec4\u8f93\u5165\u3002 \u7b2c\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570T\u8868\u793a\u6570\u636e\u7ec4\u6570 \u63a5\u4e0b\u6765T\u884c\u6bcf\u884c\u4e00\u4e2a\u6b63\u6574\u6570n \u6570\u636e\u4fdd\u8bc1 \\(1\u2264T\u2264104,1\u2264n\u2264106\\) \u3002 \u8f93\u51fa\u683c\u5f0f \u5171T\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6570\u4ee3\u8868\u5bf9\u5e94\u7684\u7b54\u6848 \u8f93\u5165\u6837\u4f8b 1 2 3 4 5 6 5 1 2 3 4 5 \u8f93\u51fa\u6837\u4f8b 1 2 3 4 5 1 3 5 5 7 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 #include <bits/stdc++.h> using namespace std ; typedef long long ll ; const ll N = 5e6 + 10 ; int phi [ N -5 ]; bool vis [ N -5 ]; int prime [ N -5 ]; struct node { int pos ; int val ; friend bool operator < ( const node x , const node y ) //\u5bf9\u8f93\u5165\u8fdb\u884c\u5904\u4f18\u5148\u5904\u7406n\u5c0f\u7684\u8f93\u5165\u5e76\u8bb0\u5f55 { return x . val < y . val ; } } node [ 10005 ]; int ans [ 10005 ]; int t ; void euler () { int now = 1 ; memset ( vis , false , sizeof ( vis )); memset ( phi , 0 , sizeof ( phi )); vis [ 1 ] = true ; phi [ 1 ] = 1 ; int cnt = 0 ; for ( int i = 1 ; i <= N -10 ; i ++ ) { if ( ! vis [ i ]) { prime [ ++ cnt ] = i ; phi [ i ] = i -1 ; } for ( int j = 1 ; j <= cnt && prime [ j ] * i <= N -10 ; j ++ ) { vis [ prime [ j ] * i ] = true ; if ( i % prime [ j ] == 0 ) { phi [ i * prime [ j ]] = phi [ i ] * prime [ j ]; break ; } phi [ i * prime [ j ]] = phi [ i ] * phi [ prime [ j ] -1 ]; } while ( phi [ i ] >= node [ now ]. val & now <= t ) { ans [ node [ now ]. pos ] = i ; now ++ ; } if ( now > t ) return ; } } int main () { euler (); cin >> t ; for ( int i = 1 ; i <= t ; i ++ ) { cin >> node [ i ]. val ; node [ i ]. pos = i ; } sort ( node + 1 , node + t + 1 ); euler (); for ( int i = 1 ; i <= t ; i ++ ) cout << ans [ i ] << endl ; return 0 ; }","title":"\u4f8b\u98983 HDU phi"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_8","text":"","title":""},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E8%8E%AB%E5%8F%8D/","text":"\u79ef\u6027\u51fd\u6570 and \u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14 \u5b9a\u4e49 \u5bf9\u4e8e\u51fd\u6570 \\(f(x)\\) \uff0c\u82e5\u6ee1\u8db3 \\((p, q) = 1\\) \uff0c\u4e14 \\(f(p \\times q) = f(p) \\times f(q)\\) \uff0c\u5219\u79f0 \\(f(x)\\) \u4e3a\u5b8c\u5168\u79ef\u6027\u51fd\u6570 \u5e38\u89c1\u79ef\u6027\u51fd\u6570 \u6b63\u56e0\u5b50\u4e2a\u6570\u51fd\u6570\uff1a \\(d(x)\\) \u6b27\u62c9\u51fd\u6570(1 - n\u5185\u4e0en\u4e92\u8d28\u7684\u6570\u7684\u4e2a\u6570)\uff1a \\(phi(x)\\) \u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\uff1a \\(u(x)\\) \u7ebf\u6027\u6c42\u79ef\u6027\u51fd\u6570\u6a21\u677f\u9898 \u7ebf\u6027\u6c42 \\(d(x)\\) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 void init ( int n ) { vis [ 1 ] = true ; d [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { if ( ! vis [ i ]) prime [ ++ cnt ] = i , d [ i ] = 2 ; for ( int j = 1 ; prime [ j ] <= n / i ; j ++ ) { vis [ i * prime [ j ]] = true ; if ( i % prime [ j ] == 0 ) { int tmp = i ; while ( tmp % prime [ j ] == 0 ) { tmp /= prime [ j ]; } d [ i * prime [ j ]] = d [ i ] + d [ tmp ]; break ; } d [ i * prime [ j ]] = d [ i ] * d [ prime [ j ]]; } } } \u7ebf\u6027\u6c42 \\(phi(x)\\) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 void init ( int n ) { vis [ 1 ] = true ; phi [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { if ( ! vis [ i ]) prime [ ++ cnt ] = i , phi [ i ] = i - 1 ; for ( int j = 1 ; prime [ j ] <= n / i ; j ++ ) { vis [ i * prime [ j ]] = true ; if ( i % prime [ j ] == 0 ) { phi [ i * prime [ j ]] = phi [ i ] * prime [ j ]; break ; } phi [ i * prime [ j ]] = phi [ i ] * phi [ prime [ j ]]; } } } \u7ebf\u6027\u6c42 \\(u(x)\\) \\[ u(x) = \\begin{cases} 1, x = 1\\\\ (-1)^k, x = a_1^{p1}\\times a_2^{p2}\\times a_3^{p3} ... \\times a_k^{pk}\\\\ 0, \u5176\u4ed6\u60c5\u51b5\\\\ \\end{cases} \\] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 void init ( int n ) { u [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { if ( ! vis [ i ]) prime [ ++ cnt ] = i , u [ i ] = -1 ; for ( int j = 1 ; prime [ j ] * i <= n ; j ++ ) { vis [ prime [ j ] * i ] = true ; if ( i % prime [ j ] == 0 ) { u [ prime [ j ] * i ] = 0 ; break ; } u [ prime [ j ] * i ] = u [ i ] * ( -1 ); } } } \u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14 \u4f7f\u7528\u5230\u7684\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\u7684\u6027\u8d28 \\[ \\sum_{d|n}u(d) = \\begin{cases} 1, n = 1\\\\ 0, n \\neq 1\\\\ \\end{cases} \\] \u7b80\u5355\u8bc1\u660e\uff1a $$ \u5047\u8bben = a_1^{p1}\\times a_2^{p2} ... \\times a_k^{pk} (a1,a2...ak\u5747\u4e3a\u8d28\u56e0\u5b50)\\ \u4ee4n' = a_1\\times a_2 ... \\times a_k\\ \u5219\\sum_{d|n}u(d) = \\sum_{d|n'}u(d) = \\sum_{i}^{k} C_k^i * (-1)^i = 0\\ \u5f53n=1\u65f6,\u6709\\sum_{d|1}u(d)=u(1)=1 $$ \u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14 \u82e5 \\(F(n) = \\sum_{d|n}f(d)\\) \uff0c\u90a3\u4e48 \\(f(n) = \\sum_{d|n}u(d)F(\\frac{n}{d})\\) \u82e5 \\(F(n) = \\sum_{n|d}f(d)\\) \uff0c\u90a3\u4e48 \\(f(n) = \\sum_{n|d}u(\\frac{d}{n})F(d)\\) \u4e00\u5f0f\u8bc1\u660e\uff1a $$ \\sum_{d|n}u(d)F(\\frac{n}{d}) = \\sum_{d|n}u(d)\\sum_{i|\\frac{n}{d}}f(i) = \\sum_{i|n}f(i)\\sum_{d|\\frac{n}{i}}u(d)=f(n) \\ \u7531\u4e8e\\sum_{d|\\frac{n}{i}}u(d)\u4ec5\u5728\\frac{n}{i}=1\u5373n = i\u65f6\u4e3a1\uff0c\u5176\u4f59\u60c5\u51b5\u5747\u4e3a0\uff0c\u4e8e\u662f\u6700\u540e\u53ea\u5269f(n) $$ \u4e8c\u5f0f\u8bc1\u660e\uff1a $$ \\sum_{n|d}u(\\frac{d}{n})F(d) = \\sum_{n|d}u(\\frac{d}{n})\\sum_{d|i}f(i) = \\sum_{n|i}f(i)\\sum_{\\frac{d}{n}|\\frac{i}{n}}u(\\frac{d}{n}) = f(n)\\ \u7531\u4e8e\\sum_{\\frac{d}{n}|\\frac{i}{n}}u(\\frac{d}{n})\u4ec5\u5728i=n\u65f6\u4e3a1\uff0c\u5176\u4f59\u60c5\u51b5\u4e3a0\uff0c\u4e8e\u662f\u6700\u540e\u53ea\u5269f(n) $$ 4.3 \u4f8b\u9898 4.3.1 \u6d1b\u8c37 P3455 [POI2007]ZAP-Queries \u9898\u76ee\u610f\u601d\u53ef\u5316\u7b80\u4e3a\uff1a \\(\u6c42\\sum_{x = 1}^{a}\\sum_{y=1}^{b}[gcd(x, y) == 1]\\) \u9898\u89e3\uff1a \u8bbe \\(f(n)\\) \u4e3a\u4ee5\u4e0a\u5f0f\u5b50\u7684\u503c\uff0c\u6211\u4eec\u5047\u8bbe \\(F(n)\\) \u662f\u5728\u6b64\u8303\u56f4\u5185 \\(gcd(x, y)\\) \u4e3a \\(n\u6216n\u7684\u500d\u6570\\) \u7684\u4e2a\u6570\uff0c\u5219\u6709 \\(F(n) = \\sum_{n|d}f(d)\\) ,\u5df2\u77e5\u6b64\u65f6 \\(F(n)=\\lfloor\\frac{a}{n}\\rfloor\\times\\lfloor\\frac{b}{n}\\rfloor\\) ,\u5747\u5411\u4e0b\u53d6\u6574\uff0c\u7531\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14\u53ef\u4ee5\u5f97\u51fa \\(f(n)=\\sum_{n|d}u(\\frac{d}{n})F(d)\\) \uff0c\u7b54\u6848\u7ee7\u4e3a \\(f(n)\\) ,\u6b64\u65f6\u6211\u4eec\u679a\u4e3e \\(\\frac{d}{n}\\) \u7684\u503c\uff0c\u4ee4\u5176\u4e3a \\(t\\) \uff0c\u5219 \\(d=t\\times n\\) \uff0c\u539f\u5f0f\u53ef\u5316\u4e3a \\(f(n)=\\sum_{n|d}u(\\frac{d}{n})\\times \\frac{a}{d}\\times \\frac{b}{d}=\\sum_{t=1}^{min(a, b)}u(t)\\times \\frac{a}{nt}\\times \\frac{b}{nt}\\) \uff0c\u6700\u540e\u5229\u7528\u6570\u8bba\u5206\u5757\u8fdb\u884c\u4f18\u5316\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 #include <bits/stdc++.h> #define int long long using namespace std ; const int N = 5e4 + 5 ; int prime [ N ], cnt = 0 ; bool vis [ N ]; int u [ N ]; int sum [ N ]; void init ( int n ) { // \u9884\u5904\u7406mobius\u51fd\u6570\u7684\u524d\u7f00\u548c vis [ 1 ] = true ; u [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { if ( ! vis [ i ]) prime [ ++ cnt ] = i , u [ i ] = -1 ; for ( int j = 1 ; prime [ j ] <= n / i ; j ++ ) { vis [ i * prime [ j ]] = true ; if ( i % prime [ j ] == 0 ) { u [ i * prime [ j ]] = 0 ; break ; } u [ i * prime [ j ]] = u [ i ] * ( -1 ); } } for ( int i = 1 ; i <= n ; i ++ ) sum [ i ] = sum [ i - 1 ] + u [ i ]; } int cal ( int a , int b , int n ) { int res = 0 ; for ( int l = 1 , r ; l <= min ( a , b ); l = r + 1 ) { // \u6570\u8bba\u5206\u5757 r = min ( a / ( a / l ), b / ( b / l )); res += ( sum [ r ] - sum [ l - 1 ]) * ( a / ( n * l )) * ( b / ( n * l )); } return res ; } signed main () { cin . tie ( 0 ); cout . tie ( 0 ); ios :: sync_with_stdio ( 0 ); int t ; cin >> t ; init ( N - 4 ); while ( t -- ) { int a , b , d ; cin >> a >> b >> d ; int res = cal ( a , b , d ); cout << res << endl ; } return 0 ; } \u6d1b\u8c37 P2257 YY\u7684GCD \u9898\u76ee\u53ef\u7b80\u5316\u4e3a\uff1a \\(\u6c42\\sum_{P}^{P\\le min(n, m)}\\sum_{x = 1}^{N}\\sum_{y = 1}^{M}[gcd(x, y) == P]\\) \u9898\u89e3: \u82e5\u60f3\u5316\u4e3a\u4e0a\u4e00\u9898\u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u9700\u8981\u6539\u53d8\u679a\u4e3e\u53d8\u91cf\uff0c\u5c06\u679a\u4e3e \\(x, y\\) \u6539\u53d8\u4e3a\u679a\u4e3e \\(x,y\\) \u7684\u500d\u6570\uff0c\u5373\u540e\u9762\u4e24\u4e2a \\(\\sum\\) \u53d8\u4e3a \\(\\sum_{x=1}^{\\frac{N}{P}}\\sum_{y=1}^{\\frac{M}{P}}[gcd(x,y)==1]\\) \uff0c\u540c\u4e0a\u9898\u4e00\u6837\u7684\u5957\u8def\u8fdb\u884c\u5316\u7b80\uff0c $$ f(n)=\\sum_{n|d}u(\\frac{d}{n})\\times\\lfloor\\frac{N}{Pd}\\rfloor\\times \\lfloor\\frac{M}{Pd}\\rfloor $$ \u6211\u4eec\u9700\u8981\u7684\u662f $$ res = \\sum_{P}^{P\\le min(N, M)}f(1)=\\sum_{P}^{P\\le min(N,M)}\\sum_{d}u(d)\\times\\lfloor\\frac{N}{Pd}\\rfloor\\times\\lfloor\\frac{M}{Pd}\\rfloor $$ \u6211\u4eec\u53d1\u73b0\u82e5\u76f4\u63a5\u8ba1\u7b97\u53ea\u80fd\u5f97\u5230\u4e00\u534a\u7684\u5206\u6570\uff0c\u4e8e\u662f\u8003\u8651\u4f18\u5316\uff0c\u7531\u4e8e \\(Pd\\) \u5341\u5206\u4e11\u964b\uff0c\u5c06 \\(Pd\\) \u8bbe\u4e3a \\(t\\) \uff0c\u679a\u4e3e \\(d\\) \u53d8\u4e3a\u679a\u4e3e \\(t\\) \uff0c\u5e76\u4e92\u6362\u679a\u4e3e\u987a\u5e8f\uff0c\u6b64\u65f6 \\(P\\) \u7684\u8303\u56f4\u53d8\u6210\u4e86 \\(P|t\\) $$ res = \\sum_{t=1}^{min(N,M)}\\sum_{P|t}^{P\u2208prime}u(\\frac{t}{P})\\times\\lfloor\\frac{N}{t}\\rfloor\\times\\lfloor\\frac{M}{t}\\rfloor=\\sum_{t=1}^{min(N,M)}\\lfloor\\frac{N}{t}\\rfloor\\times\\lfloor\\frac{M}{t}\\rfloor\\sum_{P|t}^{P\u2208prime}u(\\frac{t}{P}) $$ \u5bf9\u4e8e \\(\\sum_{P|t}^{P\u2208prime}u(\\frac{t}{P})\\) \uff0c\u6211\u4eec\u9700\u8981\u9884\u5904\u7406\u4ed6\u7684\u524d\u7f00\u548c\uff0c\u5728\u914d\u5408\u6574\u9664\u5206\u5757\uff0c\u5c31\u80fd\u8fc7\u4e86 \u63a5\u4e0b\u6765\u8bb2\u8bb2\u600e\u4e48\u6c42\u524d\u7f00\u548c\uff0c\u8003\u8651\u7ebf\u6027\u7b5b\uff0c\u6211\u4eec\u8bbe\u5176\u4e3a \\(f(n)\\) \u5728\u7ebf\u6027\u7b5b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u82e5 \\(n\\) \u4e3a \\(prime\\) \uff0c\u6613\u5f97 \\(f(n)=u(1)=1\\) \u82e5 \\(n\\) \u975e\u8d28\u6570\uff0c\u8003\u8651 \\(n=i\\times p\\) \u82e5 \\(i\\%p=0\\) \u65f6 \\(i=p_1^{a1}\\times p_{2}^{a2}...\\times p_{k}^{ak}\\) \u82e5 \\(a1,a2...ak\\) \u5747\u4e3a1\uff0c\u5219\u6211\u4eec\u53d1\u73b0\u4ec5\u5f53 \\(P\\) \u53d6p\u65f6\uff0c \\(u(\\frac{n}{p})=u(i)\\) \u4e0d\u4e3a0 \u82e5\u5b58\u5728\u67d0\u4e2a \\(a_k\\ge2\\) \uff0c\u5219 \\(P\\) \u65e0\u8bba\u53d6\u8c01\uff0c\u90fd\u5b58\u5728\u4e00\u4e2a \\(a_i\\ge2\\) \uff0c \\(u(\\frac{n}{p})=0=u(i)\\) \u6240\u4ee5 \\(f(n)=u(i)\\) \u82e5 \\(i\\%p\\ne0\\) \u65f6 \\(f(i)=\\sum u(\\frac{i}{P}),f(n)=\\sum u(\\frac{ip}{P})\\) \u800c \\(u(\\frac{ip}{P})=u(\\frac{i}{P})\\times(-1)\\) \u4e8e\u662f\u6211\u4eec\u53d1\u73b0\u9664\u4e86 \\(p\\) \uff0c\u5176\u4ed6\u90fd\u5728 \\(f(i)\\) \u4e2d\u51fa\u73b0\u8fc7\u7c7b\u4f3c\u7684\u9879 \u6240\u4ee5 \\(f(n)=-f(i)+u(\\frac{ip}{p})=-f(i)+u(i)\\) \u5230\u8fd9\u91cc\u5c31\u80fd\u7ebf\u6027\u9000\u51fa \\(f(x)\\) \u7684\u6bcf\u4e00\u9879\uff0c\u6700\u540e\u5904\u7406\u51fa\u524d\u7f00\u548c\u5c31\u597d\u5566\uff0c\u6ce8\u610f\u8fd9\u9898\u82e5 #define int long long \u4f1a\u8d85\u65f6\u4e00\u4e2a\u70b9 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 #include <bits/stdc++.h> using namespace std ; typedef long long LL ; const int N = 1e7 + 5 ; int prime [ N ], cnt = 0 ; bool vis [ N ]; int u [ N ]; int f [ N ]; LL sum [ N ]; void init ( int n ) { vis [ 1 ] = true ; u [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { if ( ! vis [ i ]) { prime [ ++ cnt ] = i , u [ i ] = -1 ; f [ i ] = 1 ; } for ( int j = 1 ; prime [ j ] <= n / i ; j ++ ) { vis [ i * prime [ j ]] = true ; if ( i % prime [ j ] == 0 ) { u [ i * prime [ j ]] = 0 ; f [ i * prime [ j ]] = u [ i ]; break ; } u [ i * prime [ j ]] = u [ i ] * ( -1 ); f [ i * prime [ j ]] = - f [ i ] + u [ i ]; } } for ( int i = 1 ; i <= n ; i ++ ) sum [ i ] = sum [ i - 1 ] + f [ i ]; } LL cal ( int a , int b ) { LL res = 0 ; for ( int l = 1 , r ; l <= min ( a , b ); l = r + 1 ) { r = min ( a / ( a / l ), b / ( b / l )); res += ( sum [ r ] - sum [ l - 1 ]) * ( a / l ) * ( b / l ); } //cout << res << endl; return res ; } signed main () { int t ; scanf ( \"%d\" , & t ); init ( 1e7 + 1 ); while ( t -- ) { int n , m ; scanf ( \"%d %d\" , & n , & m ); LL res = 0 ; res = cal ( n , m ); printf ( \"%lld \\n \" , res ); } return 0 ; } \u8865\u5145\u77e5\u8bc6 \u6b27\u62c9\u51fd\u6570\u4e0e\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\u7684\u5173\u7cfb \\(phi(x)=\\sum_{d|x}u(\\frac{x}{d})d\\) [gcd(i, j)=1]\u7684\u66ff\u6362 \\([gcd(i,j)=1]=\\sum_{d|gcd(i,j)}u(d)\\) \u5728\u6b64\u611f\u8c22 ShadyPi\u7684\u535a\u5ba2","title":"\u79ef\u6027\u51fd\u6570\u4e0e\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E8%8E%AB%E5%8F%8D/#and","text":"","title":"\u79ef\u6027\u51fd\u6570 and \u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E8%8E%AB%E5%8F%8D/#_1","text":"\u5bf9\u4e8e\u51fd\u6570 \\(f(x)\\) \uff0c\u82e5\u6ee1\u8db3 \\((p, q) = 1\\) \uff0c\u4e14 \\(f(p \\times q) = f(p) \\times f(q)\\) \uff0c\u5219\u79f0 \\(f(x)\\) \u4e3a\u5b8c\u5168\u79ef\u6027\u51fd\u6570","title":"\u5b9a\u4e49"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E8%8E%AB%E5%8F%8D/#_2","text":"\u6b63\u56e0\u5b50\u4e2a\u6570\u51fd\u6570\uff1a \\(d(x)\\) \u6b27\u62c9\u51fd\u6570(1 - n\u5185\u4e0en\u4e92\u8d28\u7684\u6570\u7684\u4e2a\u6570)\uff1a \\(phi(x)\\) \u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\uff1a \\(u(x)\\)","title":"\u5e38\u89c1\u79ef\u6027\u51fd\u6570"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E8%8E%AB%E5%8F%8D/#_3","text":"","title":"\u7ebf\u6027\u6c42\u79ef\u6027\u51fd\u6570\u6a21\u677f\u9898"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E8%8E%AB%E5%8F%8D/#dx","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 void init ( int n ) { vis [ 1 ] = true ; d [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { if ( ! vis [ i ]) prime [ ++ cnt ] = i , d [ i ] = 2 ; for ( int j = 1 ; prime [ j ] <= n / i ; j ++ ) { vis [ i * prime [ j ]] = true ; if ( i % prime [ j ] == 0 ) { int tmp = i ; while ( tmp % prime [ j ] == 0 ) { tmp /= prime [ j ]; } d [ i * prime [ j ]] = d [ i ] + d [ tmp ]; break ; } d [ i * prime [ j ]] = d [ i ] * d [ prime [ j ]]; } } }","title":"\u7ebf\u6027\u6c42\\(d(x)\\)"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E8%8E%AB%E5%8F%8D/#phix","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 void init ( int n ) { vis [ 1 ] = true ; phi [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { if ( ! vis [ i ]) prime [ ++ cnt ] = i , phi [ i ] = i - 1 ; for ( int j = 1 ; prime [ j ] <= n / i ; j ++ ) { vis [ i * prime [ j ]] = true ; if ( i % prime [ j ] == 0 ) { phi [ i * prime [ j ]] = phi [ i ] * prime [ j ]; break ; } phi [ i * prime [ j ]] = phi [ i ] * phi [ prime [ j ]]; } } }","title":"\u7ebf\u6027\u6c42\\(phi(x)\\)"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E8%8E%AB%E5%8F%8D/#ux","text":"\\[ u(x) = \\begin{cases} 1, x = 1\\\\ (-1)^k, x = a_1^{p1}\\times a_2^{p2}\\times a_3^{p3} ... \\times a_k^{pk}\\\\ 0, \u5176\u4ed6\u60c5\u51b5\\\\ \\end{cases} \\] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 void init ( int n ) { u [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { if ( ! vis [ i ]) prime [ ++ cnt ] = i , u [ i ] = -1 ; for ( int j = 1 ; prime [ j ] * i <= n ; j ++ ) { vis [ prime [ j ] * i ] = true ; if ( i % prime [ j ] == 0 ) { u [ prime [ j ] * i ] = 0 ; break ; } u [ prime [ j ] * i ] = u [ i ] * ( -1 ); } } }","title":"\u7ebf\u6027\u6c42\\(u(x)\\)"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E8%8E%AB%E5%8F%8D/#_4","text":"","title":"\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E8%8E%AB%E5%8F%8D/#_5","text":"\\[ \\sum_{d|n}u(d) = \\begin{cases} 1, n = 1\\\\ 0, n \\neq 1\\\\ \\end{cases} \\] \u7b80\u5355\u8bc1\u660e\uff1a $$ \u5047\u8bben = a_1^{p1}\\times a_2^{p2} ... \\times a_k^{pk} (a1,a2...ak\u5747\u4e3a\u8d28\u56e0\u5b50)\\ \u4ee4n' = a_1\\times a_2 ... \\times a_k\\ \u5219\\sum_{d|n}u(d) = \\sum_{d|n'}u(d) = \\sum_{i}^{k} C_k^i * (-1)^i = 0\\ \u5f53n=1\u65f6,\u6709\\sum_{d|1}u(d)=u(1)=1 $$","title":"\u4f7f\u7528\u5230\u7684\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\u7684\u6027\u8d28"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E8%8E%AB%E5%8F%8D/#_6","text":"\u82e5 \\(F(n) = \\sum_{d|n}f(d)\\) \uff0c\u90a3\u4e48 \\(f(n) = \\sum_{d|n}u(d)F(\\frac{n}{d})\\) \u82e5 \\(F(n) = \\sum_{n|d}f(d)\\) \uff0c\u90a3\u4e48 \\(f(n) = \\sum_{n|d}u(\\frac{d}{n})F(d)\\) \u4e00\u5f0f\u8bc1\u660e\uff1a $$ \\sum_{d|n}u(d)F(\\frac{n}{d}) = \\sum_{d|n}u(d)\\sum_{i|\\frac{n}{d}}f(i) = \\sum_{i|n}f(i)\\sum_{d|\\frac{n}{i}}u(d)=f(n) \\ \u7531\u4e8e\\sum_{d|\\frac{n}{i}}u(d)\u4ec5\u5728\\frac{n}{i}=1\u5373n = i\u65f6\u4e3a1\uff0c\u5176\u4f59\u60c5\u51b5\u5747\u4e3a0\uff0c\u4e8e\u662f\u6700\u540e\u53ea\u5269f(n) $$ \u4e8c\u5f0f\u8bc1\u660e\uff1a $$ \\sum_{n|d}u(\\frac{d}{n})F(d) = \\sum_{n|d}u(\\frac{d}{n})\\sum_{d|i}f(i) = \\sum_{n|i}f(i)\\sum_{\\frac{d}{n}|\\frac{i}{n}}u(\\frac{d}{n}) = f(n)\\ \u7531\u4e8e\\sum_{\\frac{d}{n}|\\frac{i}{n}}u(\\frac{d}{n})\u4ec5\u5728i=n\u65f6\u4e3a1\uff0c\u5176\u4f59\u60c5\u51b5\u4e3a0\uff0c\u4e8e\u662f\u6700\u540e\u53ea\u5269f(n) $$","title":"\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E8%8E%AB%E5%8F%8D/#43","text":"","title":"4.3 \u4f8b\u9898"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E8%8E%AB%E5%8F%8D/#431-p3455-poi2007zap-queries","text":"\u9898\u76ee\u610f\u601d\u53ef\u5316\u7b80\u4e3a\uff1a \\(\u6c42\\sum_{x = 1}^{a}\\sum_{y=1}^{b}[gcd(x, y) == 1]\\) \u9898\u89e3\uff1a \u8bbe \\(f(n)\\) \u4e3a\u4ee5\u4e0a\u5f0f\u5b50\u7684\u503c\uff0c\u6211\u4eec\u5047\u8bbe \\(F(n)\\) \u662f\u5728\u6b64\u8303\u56f4\u5185 \\(gcd(x, y)\\) \u4e3a \\(n\u6216n\u7684\u500d\u6570\\) \u7684\u4e2a\u6570\uff0c\u5219\u6709 \\(F(n) = \\sum_{n|d}f(d)\\) ,\u5df2\u77e5\u6b64\u65f6 \\(F(n)=\\lfloor\\frac{a}{n}\\rfloor\\times\\lfloor\\frac{b}{n}\\rfloor\\) ,\u5747\u5411\u4e0b\u53d6\u6574\uff0c\u7531\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14\u53ef\u4ee5\u5f97\u51fa \\(f(n)=\\sum_{n|d}u(\\frac{d}{n})F(d)\\) \uff0c\u7b54\u6848\u7ee7\u4e3a \\(f(n)\\) ,\u6b64\u65f6\u6211\u4eec\u679a\u4e3e \\(\\frac{d}{n}\\) \u7684\u503c\uff0c\u4ee4\u5176\u4e3a \\(t\\) \uff0c\u5219 \\(d=t\\times n\\) \uff0c\u539f\u5f0f\u53ef\u5316\u4e3a \\(f(n)=\\sum_{n|d}u(\\frac{d}{n})\\times \\frac{a}{d}\\times \\frac{b}{d}=\\sum_{t=1}^{min(a, b)}u(t)\\times \\frac{a}{nt}\\times \\frac{b}{nt}\\) \uff0c\u6700\u540e\u5229\u7528\u6570\u8bba\u5206\u5757\u8fdb\u884c\u4f18\u5316\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 #include <bits/stdc++.h> #define int long long using namespace std ; const int N = 5e4 + 5 ; int prime [ N ], cnt = 0 ; bool vis [ N ]; int u [ N ]; int sum [ N ]; void init ( int n ) { // \u9884\u5904\u7406mobius\u51fd\u6570\u7684\u524d\u7f00\u548c vis [ 1 ] = true ; u [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { if ( ! vis [ i ]) prime [ ++ cnt ] = i , u [ i ] = -1 ; for ( int j = 1 ; prime [ j ] <= n / i ; j ++ ) { vis [ i * prime [ j ]] = true ; if ( i % prime [ j ] == 0 ) { u [ i * prime [ j ]] = 0 ; break ; } u [ i * prime [ j ]] = u [ i ] * ( -1 ); } } for ( int i = 1 ; i <= n ; i ++ ) sum [ i ] = sum [ i - 1 ] + u [ i ]; } int cal ( int a , int b , int n ) { int res = 0 ; for ( int l = 1 , r ; l <= min ( a , b ); l = r + 1 ) { // \u6570\u8bba\u5206\u5757 r = min ( a / ( a / l ), b / ( b / l )); res += ( sum [ r ] - sum [ l - 1 ]) * ( a / ( n * l )) * ( b / ( n * l )); } return res ; } signed main () { cin . tie ( 0 ); cout . tie ( 0 ); ios :: sync_with_stdio ( 0 ); int t ; cin >> t ; init ( N - 4 ); while ( t -- ) { int a , b , d ; cin >> a >> b >> d ; int res = cal ( a , b , d ); cout << res << endl ; } return 0 ; }","title":"4.3.1 \u6d1b\u8c37 P3455 [POI2007]ZAP-Queries"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E8%8E%AB%E5%8F%8D/#p2257-yygcd","text":"\u9898\u76ee\u53ef\u7b80\u5316\u4e3a\uff1a \\(\u6c42\\sum_{P}^{P\\le min(n, m)}\\sum_{x = 1}^{N}\\sum_{y = 1}^{M}[gcd(x, y) == P]\\) \u9898\u89e3: \u82e5\u60f3\u5316\u4e3a\u4e0a\u4e00\u9898\u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u9700\u8981\u6539\u53d8\u679a\u4e3e\u53d8\u91cf\uff0c\u5c06\u679a\u4e3e \\(x, y\\) \u6539\u53d8\u4e3a\u679a\u4e3e \\(x,y\\) \u7684\u500d\u6570\uff0c\u5373\u540e\u9762\u4e24\u4e2a \\(\\sum\\) \u53d8\u4e3a \\(\\sum_{x=1}^{\\frac{N}{P}}\\sum_{y=1}^{\\frac{M}{P}}[gcd(x,y)==1]\\) \uff0c\u540c\u4e0a\u9898\u4e00\u6837\u7684\u5957\u8def\u8fdb\u884c\u5316\u7b80\uff0c $$ f(n)=\\sum_{n|d}u(\\frac{d}{n})\\times\\lfloor\\frac{N}{Pd}\\rfloor\\times \\lfloor\\frac{M}{Pd}\\rfloor $$ \u6211\u4eec\u9700\u8981\u7684\u662f $$ res = \\sum_{P}^{P\\le min(N, M)}f(1)=\\sum_{P}^{P\\le min(N,M)}\\sum_{d}u(d)\\times\\lfloor\\frac{N}{Pd}\\rfloor\\times\\lfloor\\frac{M}{Pd}\\rfloor $$ \u6211\u4eec\u53d1\u73b0\u82e5\u76f4\u63a5\u8ba1\u7b97\u53ea\u80fd\u5f97\u5230\u4e00\u534a\u7684\u5206\u6570\uff0c\u4e8e\u662f\u8003\u8651\u4f18\u5316\uff0c\u7531\u4e8e \\(Pd\\) \u5341\u5206\u4e11\u964b\uff0c\u5c06 \\(Pd\\) \u8bbe\u4e3a \\(t\\) \uff0c\u679a\u4e3e \\(d\\) \u53d8\u4e3a\u679a\u4e3e \\(t\\) \uff0c\u5e76\u4e92\u6362\u679a\u4e3e\u987a\u5e8f\uff0c\u6b64\u65f6 \\(P\\) \u7684\u8303\u56f4\u53d8\u6210\u4e86 \\(P|t\\) $$ res = \\sum_{t=1}^{min(N,M)}\\sum_{P|t}^{P\u2208prime}u(\\frac{t}{P})\\times\\lfloor\\frac{N}{t}\\rfloor\\times\\lfloor\\frac{M}{t}\\rfloor=\\sum_{t=1}^{min(N,M)}\\lfloor\\frac{N}{t}\\rfloor\\times\\lfloor\\frac{M}{t}\\rfloor\\sum_{P|t}^{P\u2208prime}u(\\frac{t}{P}) $$ \u5bf9\u4e8e \\(\\sum_{P|t}^{P\u2208prime}u(\\frac{t}{P})\\) \uff0c\u6211\u4eec\u9700\u8981\u9884\u5904\u7406\u4ed6\u7684\u524d\u7f00\u548c\uff0c\u5728\u914d\u5408\u6574\u9664\u5206\u5757\uff0c\u5c31\u80fd\u8fc7\u4e86 \u63a5\u4e0b\u6765\u8bb2\u8bb2\u600e\u4e48\u6c42\u524d\u7f00\u548c\uff0c\u8003\u8651\u7ebf\u6027\u7b5b\uff0c\u6211\u4eec\u8bbe\u5176\u4e3a \\(f(n)\\) \u5728\u7ebf\u6027\u7b5b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u82e5 \\(n\\) \u4e3a \\(prime\\) \uff0c\u6613\u5f97 \\(f(n)=u(1)=1\\) \u82e5 \\(n\\) \u975e\u8d28\u6570\uff0c\u8003\u8651 \\(n=i\\times p\\) \u82e5 \\(i\\%p=0\\) \u65f6 \\(i=p_1^{a1}\\times p_{2}^{a2}...\\times p_{k}^{ak}\\) \u82e5 \\(a1,a2...ak\\) \u5747\u4e3a1\uff0c\u5219\u6211\u4eec\u53d1\u73b0\u4ec5\u5f53 \\(P\\) \u53d6p\u65f6\uff0c \\(u(\\frac{n}{p})=u(i)\\) \u4e0d\u4e3a0 \u82e5\u5b58\u5728\u67d0\u4e2a \\(a_k\\ge2\\) \uff0c\u5219 \\(P\\) \u65e0\u8bba\u53d6\u8c01\uff0c\u90fd\u5b58\u5728\u4e00\u4e2a \\(a_i\\ge2\\) \uff0c \\(u(\\frac{n}{p})=0=u(i)\\) \u6240\u4ee5 \\(f(n)=u(i)\\) \u82e5 \\(i\\%p\\ne0\\) \u65f6 \\(f(i)=\\sum u(\\frac{i}{P}),f(n)=\\sum u(\\frac{ip}{P})\\) \u800c \\(u(\\frac{ip}{P})=u(\\frac{i}{P})\\times(-1)\\) \u4e8e\u662f\u6211\u4eec\u53d1\u73b0\u9664\u4e86 \\(p\\) \uff0c\u5176\u4ed6\u90fd\u5728 \\(f(i)\\) \u4e2d\u51fa\u73b0\u8fc7\u7c7b\u4f3c\u7684\u9879 \u6240\u4ee5 \\(f(n)=-f(i)+u(\\frac{ip}{p})=-f(i)+u(i)\\) \u5230\u8fd9\u91cc\u5c31\u80fd\u7ebf\u6027\u9000\u51fa \\(f(x)\\) \u7684\u6bcf\u4e00\u9879\uff0c\u6700\u540e\u5904\u7406\u51fa\u524d\u7f00\u548c\u5c31\u597d\u5566\uff0c\u6ce8\u610f\u8fd9\u9898\u82e5 #define int long long \u4f1a\u8d85\u65f6\u4e00\u4e2a\u70b9 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 #include <bits/stdc++.h> using namespace std ; typedef long long LL ; const int N = 1e7 + 5 ; int prime [ N ], cnt = 0 ; bool vis [ N ]; int u [ N ]; int f [ N ]; LL sum [ N ]; void init ( int n ) { vis [ 1 ] = true ; u [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { if ( ! vis [ i ]) { prime [ ++ cnt ] = i , u [ i ] = -1 ; f [ i ] = 1 ; } for ( int j = 1 ; prime [ j ] <= n / i ; j ++ ) { vis [ i * prime [ j ]] = true ; if ( i % prime [ j ] == 0 ) { u [ i * prime [ j ]] = 0 ; f [ i * prime [ j ]] = u [ i ]; break ; } u [ i * prime [ j ]] = u [ i ] * ( -1 ); f [ i * prime [ j ]] = - f [ i ] + u [ i ]; } } for ( int i = 1 ; i <= n ; i ++ ) sum [ i ] = sum [ i - 1 ] + f [ i ]; } LL cal ( int a , int b ) { LL res = 0 ; for ( int l = 1 , r ; l <= min ( a , b ); l = r + 1 ) { r = min ( a / ( a / l ), b / ( b / l )); res += ( sum [ r ] - sum [ l - 1 ]) * ( a / l ) * ( b / l ); } //cout << res << endl; return res ; } signed main () { int t ; scanf ( \"%d\" , & t ); init ( 1e7 + 1 ); while ( t -- ) { int n , m ; scanf ( \"%d %d\" , & n , & m ); LL res = 0 ; res = cal ( n , m ); printf ( \"%lld \\n \" , res ); } return 0 ; }","title":"\u6d1b\u8c37 P2257 YY\u7684GCD"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E8%8E%AB%E5%8F%8D/#_7","text":"","title":"\u8865\u5145\u77e5\u8bc6"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E8%8E%AB%E5%8F%8D/#_8","text":"\\(phi(x)=\\sum_{d|x}u(\\frac{x}{d})d\\)","title":"\u6b27\u62c9\u51fd\u6570\u4e0e\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\u7684\u5173\u7cfb"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E8%8E%AB%E5%8F%8D/#gcdi-j1","text":"\\([gcd(i,j)=1]=\\sum_{d|gcd(i,j)}u(d)\\) \u5728\u6b64\u611f\u8c22 ShadyPi\u7684\u535a\u5ba2","title":"[gcd(i, j)=1]\u7684\u66ff\u6362"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E9%80%86%E5%85%83/","text":"\u6982\u8ff0 \u5982\u679c\u4e00\u4e2a\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b \\(ax\u22611(mod \\ b)\\) ,\u5219\u79f0x\u662fa mod b\u7684\u9006\u5143\uff0c\u8bb0\u4f5ca-1\u3002(\u5f53a\u22a5b\u65f6\u624d\u6709\u9006\u5143) \u6269\u6b27\u6c42\u9006\u5143 \u4ee3\u7801\u6a21\u677f 1 2 3 4 5 6 7 8 void exgcd ( int a , int b , int & x , int & y ) { if ( b == 0 ) { x = 1 , y = 0 ; return ; } exgcd ( b , a % b , y , x ); y -= a / b * x ; } \u8d39\u9a6c\u5c0f\u5b9a\u7406\u6c42\u9006\u5143 \u8d39\u9a6c\u5c0f\u5b9a\u7406 \uff1a \u82e5\u5b58\u5728\u6574\u6570a,p\u4e14gcd(a,p)=1,\u5373\u4e8c\u8005\u4e92\u4e3a\u8d28\u6570\uff0c\u5219\u6709 \\(a^{p-1}\u22611(mod \\ p)\\) \u3002\u6b64\u65f6 \\(a^{p-2}\\) \u662fa mod p\u7684\u9006\u5143 \u7531\u4e8ep\u4e00\u822c\u5f88\u5927\uff0c\u7528\u5feb\u901f\u5e42\u6765\u6c42 \u4ee3\u7801\u6a21\u677f 1 2 3 4 5 6 7 8 9 10 11 ll qpow ( ll a , ll n ) { ll ans = 1 ; while ( n ) { if ( n % 2 ) ans = ans * a % mod ; a = a * a % mod ; n /= 2 ; } return ans ; } \u7ebf\u6027\u6c42\u9006\u5143 \u6c421-n\u7684\u9006\u5143 \u4ee3\u7801\u6a21\u677f 1 2 3 4 inv [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; ++ i ) { inv [ i ] = ( long long )( p - p / i ) * inv [ p % i ] % p ; } \u6c42\u7ed9\u5b9an\u4e2a\u6570\u7684\u9006\u5143 \u9996\u5148\u8ba1\u7b97n\u4e2a\u6570\u7684\u524d\u7f00\u79ef\uff0c\u8bb0\u4e3apre[i]\uff0c\u7136\u540e\u4f7f\u7528\u5feb\u901f\u5e42\u6216\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u6cd5\u8ba1\u7b97pre[n] \u7684\u9006\u5143\uff0c\u8bb0\u4e3aInv[n] \u3002 \u56e0\u4e3aInv[n]\u662fn\u4e2a\u6570\u7684\u79ef\u7684\u9006\u5143\uff0c\u6240\u4ee5\u5f53\u6211\u4eec\u628a\u5b83\u4e58\u4e0aa[n]\u65f6\uff0c\u5c31\u4f1a\u548ca[n]\u7684\u9006\u5143\u62b5\u6d88\uff0c\u4e8e\u662f\u5c31\u5f97\u5230\u4e86a[1] \u5230a[n-1]\u7684\u79ef\u9006\u5143\uff0c\u8bb0\u4e3aInv[n-1]\u3002 \u540c\u7406\u6211\u4eec\u53ef\u4ee5\u4f9d\u6b21\u8ba1\u7b97\u51fa\u6240\u6709\u7684Inv[i]\uff0c\u4e8e\u662fa[i-1]\u5c31\u53ef\u4ee5\u7528pre[i-1]*Inv[i]\u6c42\u5f97\u3002 \u6240\u4ee5\u6211\u4eec\u5c31\u5728O(n+logp)\u7684\u65f6\u95f4\u5185\u8ba1\u7b97\u51fa\u4e86n\u4e2a\u6570\u7684\u9006\u5143\u3002 \u4ee3\u7801\u6a21\u677f 1 2 3 4 5 6 7 8 9 void init () { pre [ 0 ] = 1 ; for ( int i = 1 ; i <= n ; ++ i ) pre [ i ] = pre [ i - 1 ] * a [ i ] % p ; inv [ n ] = qpow ( pre [ n ], p - 2 ); // \u5f53\u7136\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u7528 exgcd \u6765\u6c42\u9006\u5143,\u89c6\u4e2a\u4eba\u559c\u597d\u800c\u5b9a. for ( int i = n ; i >= 1 ; -- i ) inv [ i - 1 ] = inv [ i ] * a [ i ] % p ; for ( int i = 1 ; i <= n ; ++ i ) inv [ i ] = inv [ i ] * pre [ i - 1 ] % p ; } \u7ecf\u5178\u4f8b\u9898 LiberOJ #161 \u4e58\u6cd5\u9006\u51432 \u9898\u76ee\u5165\u53e3 \u9898\u76ee\u63cf\u8ff0 \u8fd9\u53ef\u80fd\u662f\u4e00\u9053\u6a21\u677f\u9898\u3002 \u7ed9\u5b9a\u4e2a\u6b63\u6574\u6570,\u6c42\u6bcf\u4e2a\u6570\u5728\u6a21\u610f\u4e49\u4e0b\u7684\u4e58\u6cd5\u9006\u5143\u3002 \u63d0\u793a\uff1a\u8bf7\u4f7f\u7528\u9ad8\u6548\u7684\u8bfb\u5165\u65b9\u5f0f\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570n\u3002 \u7b2c\u4e8c\u884cn\u4e2a\u6574\u6570ai\u3002 \u8f93\u51fa\u683c\u5f0f \u4e00\u884c\u4e00\u4e2a\u6570 \u8f93\u5165\u6837\u4f8b 1 2 5 4 7 8 12 123456 \u8f93\u51fa\u6837\u4f8b 1 650798912 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 #include <bits/stdc++.h> using namespace std ; typedef long long ll ; const ll mod = 1e9 + 7 ; const ll N = 998244353 ; ll a [ 5000005 ]; ll pre [ 5000005 ]; ll qpow ( ll a , ll n ) { ll ans = 1 ; while ( n ) { if ( n & 1 ) ans = ( ans % mod ) * ( a % mod ) % mod ; a = a * a % mod ; n /= 2 ; } return ans ; } int read () { int x = 0 , f = 1 ; char c = getchar (); while ( c < '0' || c > '9' ){ if ( c == '-' ) f = -1 ; c = getchar ();} while ( c >= '0' && c <= '9' ) x = x * 10 + c - '0' , c = getchar (); return x * f ; } ll inv [ 5000005 ]; int main () { int n ; scanf ( \"%d\" , & n ); pre [ 0 ] = 1 ; ll ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { a [ i ] = read (); pre [ i ] = pre [ i -1 ] * a [ i ] % mod ; } inv [ n ] = qpow ( pre [ n ], mod -2 ); for ( int i = n ; i >= 1 ; i -- ) inv [ i -1 ] = inv [ i ] % mod * a [ i ] % mod ; for ( int i = 1 ; i <= n ; i ++ ) { ans = ans * N % mod + inv [ i ] * pre [ i -1 ] % mod ; } printf ( \"%lld \\n \" , ans % mod ); return 0 ; }","title":"\u9006\u5143"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E9%80%86%E5%85%83/#_1","text":"\u5982\u679c\u4e00\u4e2a\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b \\(ax\u22611(mod \\ b)\\) ,\u5219\u79f0x\u662fa mod b\u7684\u9006\u5143\uff0c\u8bb0\u4f5ca-1\u3002(\u5f53a\u22a5b\u65f6\u624d\u6709\u9006\u5143)","title":"\u6982\u8ff0"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E9%80%86%E5%85%83/#_2","text":"\u4ee3\u7801\u6a21\u677f 1 2 3 4 5 6 7 8 void exgcd ( int a , int b , int & x , int & y ) { if ( b == 0 ) { x = 1 , y = 0 ; return ; } exgcd ( b , a % b , y , x ); y -= a / b * x ; }","title":"\u6269\u6b27\u6c42\u9006\u5143"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E9%80%86%E5%85%83/#_3","text":"\u8d39\u9a6c\u5c0f\u5b9a\u7406 \uff1a \u82e5\u5b58\u5728\u6574\u6570a,p\u4e14gcd(a,p)=1,\u5373\u4e8c\u8005\u4e92\u4e3a\u8d28\u6570\uff0c\u5219\u6709 \\(a^{p-1}\u22611(mod \\ p)\\) \u3002\u6b64\u65f6 \\(a^{p-2}\\) \u662fa mod p\u7684\u9006\u5143 \u7531\u4e8ep\u4e00\u822c\u5f88\u5927\uff0c\u7528\u5feb\u901f\u5e42\u6765\u6c42 \u4ee3\u7801\u6a21\u677f 1 2 3 4 5 6 7 8 9 10 11 ll qpow ( ll a , ll n ) { ll ans = 1 ; while ( n ) { if ( n % 2 ) ans = ans * a % mod ; a = a * a % mod ; n /= 2 ; } return ans ; }","title":"\u8d39\u9a6c\u5c0f\u5b9a\u7406\u6c42\u9006\u5143"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E9%80%86%E5%85%83/#_4","text":"","title":"\u7ebf\u6027\u6c42\u9006\u5143"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E9%80%86%E5%85%83/#1-n","text":"\u4ee3\u7801\u6a21\u677f 1 2 3 4 inv [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; ++ i ) { inv [ i ] = ( long long )( p - p / i ) * inv [ p % i ] % p ; }","title":"\u6c421-n\u7684\u9006\u5143"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E9%80%86%E5%85%83/#n","text":"\u9996\u5148\u8ba1\u7b97n\u4e2a\u6570\u7684\u524d\u7f00\u79ef\uff0c\u8bb0\u4e3apre[i]\uff0c\u7136\u540e\u4f7f\u7528\u5feb\u901f\u5e42\u6216\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u6cd5\u8ba1\u7b97pre[n] \u7684\u9006\u5143\uff0c\u8bb0\u4e3aInv[n] \u3002 \u56e0\u4e3aInv[n]\u662fn\u4e2a\u6570\u7684\u79ef\u7684\u9006\u5143\uff0c\u6240\u4ee5\u5f53\u6211\u4eec\u628a\u5b83\u4e58\u4e0aa[n]\u65f6\uff0c\u5c31\u4f1a\u548ca[n]\u7684\u9006\u5143\u62b5\u6d88\uff0c\u4e8e\u662f\u5c31\u5f97\u5230\u4e86a[1] \u5230a[n-1]\u7684\u79ef\u9006\u5143\uff0c\u8bb0\u4e3aInv[n-1]\u3002 \u540c\u7406\u6211\u4eec\u53ef\u4ee5\u4f9d\u6b21\u8ba1\u7b97\u51fa\u6240\u6709\u7684Inv[i]\uff0c\u4e8e\u662fa[i-1]\u5c31\u53ef\u4ee5\u7528pre[i-1]*Inv[i]\u6c42\u5f97\u3002 \u6240\u4ee5\u6211\u4eec\u5c31\u5728O(n+logp)\u7684\u65f6\u95f4\u5185\u8ba1\u7b97\u51fa\u4e86n\u4e2a\u6570\u7684\u9006\u5143\u3002 \u4ee3\u7801\u6a21\u677f 1 2 3 4 5 6 7 8 9 void init () { pre [ 0 ] = 1 ; for ( int i = 1 ; i <= n ; ++ i ) pre [ i ] = pre [ i - 1 ] * a [ i ] % p ; inv [ n ] = qpow ( pre [ n ], p - 2 ); // \u5f53\u7136\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u7528 exgcd \u6765\u6c42\u9006\u5143,\u89c6\u4e2a\u4eba\u559c\u597d\u800c\u5b9a. for ( int i = n ; i >= 1 ; -- i ) inv [ i - 1 ] = inv [ i ] * a [ i ] % p ; for ( int i = 1 ; i <= n ; ++ i ) inv [ i ] = inv [ i ] * pre [ i - 1 ] % p ; }","title":"\u6c42\u7ed9\u5b9an\u4e2a\u6570\u7684\u9006\u5143"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%95%B0%E8%AE%BA/%E9%80%86%E5%85%83/#_5","text":"LiberOJ #161 \u4e58\u6cd5\u9006\u51432 \u9898\u76ee\u5165\u53e3 \u9898\u76ee\u63cf\u8ff0 \u8fd9\u53ef\u80fd\u662f\u4e00\u9053\u6a21\u677f\u9898\u3002 \u7ed9\u5b9a\u4e2a\u6b63\u6574\u6570,\u6c42\u6bcf\u4e2a\u6570\u5728\u6a21\u610f\u4e49\u4e0b\u7684\u4e58\u6cd5\u9006\u5143\u3002 \u63d0\u793a\uff1a\u8bf7\u4f7f\u7528\u9ad8\u6548\u7684\u8bfb\u5165\u65b9\u5f0f\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570n\u3002 \u7b2c\u4e8c\u884cn\u4e2a\u6574\u6570ai\u3002 \u8f93\u51fa\u683c\u5f0f \u4e00\u884c\u4e00\u4e2a\u6570 \u8f93\u5165\u6837\u4f8b 1 2 5 4 7 8 12 123456 \u8f93\u51fa\u6837\u4f8b 1 650798912 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 #include <bits/stdc++.h> using namespace std ; typedef long long ll ; const ll mod = 1e9 + 7 ; const ll N = 998244353 ; ll a [ 5000005 ]; ll pre [ 5000005 ]; ll qpow ( ll a , ll n ) { ll ans = 1 ; while ( n ) { if ( n & 1 ) ans = ( ans % mod ) * ( a % mod ) % mod ; a = a * a % mod ; n /= 2 ; } return ans ; } int read () { int x = 0 , f = 1 ; char c = getchar (); while ( c < '0' || c > '9' ){ if ( c == '-' ) f = -1 ; c = getchar ();} while ( c >= '0' && c <= '9' ) x = x * 10 + c - '0' , c = getchar (); return x * f ; } ll inv [ 5000005 ]; int main () { int n ; scanf ( \"%d\" , & n ); pre [ 0 ] = 1 ; ll ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { a [ i ] = read (); pre [ i ] = pre [ i -1 ] * a [ i ] % mod ; } inv [ n ] = qpow ( pre [ n ], mod -2 ); for ( int i = n ; i >= 1 ; i -- ) inv [ i -1 ] = inv [ i ] % mod * a [ i ] % mod ; for ( int i = 1 ; i <= n ; i ++ ) { ans = ans * N % mod + inv [ i ] * pre [ i -1 ] % mod ; } printf ( \"%lld \\n \" , ans % mod ); return 0 ; }","title":"\u7ecf\u5178\u4f8b\u9898"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%9C%9F%E6%9C%9B/%E6%9C%9F%E6%9C%9B/","text":"1.\u671f\u671bDP \u6d1b\u8c37P1365 WJMZBMR\u6253osu! / Easy \u9898\u76ee\u5165\u53e3 \u9898\u89e3 \u4ee4 \\(f[i]\\) \u8868\u793a\u5230\u7b2ci\u4e2a\u5b57\u7b26\u7684\u671f\u671b\u957f\u5ea6, \\(g[i]\\) \u8868\u793a\u4ee5\u7b2ci\u4e2a\u5b57\u7b26\u4e3a\u7ed3\u5c3e\u7684\u8fde\u7eedo\u4e32\u957f\u5ea6\u7684\u671f\u671b,\u6b64\u65f6\u5c31\u6709\u4e09\u79cd\u60c5\u51b5 \\(s[i] == o \u65f6, f[i] = f[i - 1] + (g[i-1] + 1)^2 -g[i-1]^2 = f[i - 1] + 2 * g[i - 1] + 1,g[i] = g[i -1] + 1\\) \\(\u5f53s[i] == x\u65f6,g[i] = 0,f[i] = f[i - 1]\\) \\(\u5f53s[i] == ?\u65f6,f[i] = f[i] + (2 * g[i - 1] + 1.0) * p,g[i]=(g[i - 1] + 1)*p(p\u4e3a?\u4e3ao\u7684\u6982\u7387\uff0c\u8fd9\u9898\u662f0.5)\\) \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #include <bits/stdc++.h> using namespace std ; const int N = 3e5 + 5 ; double f [ N ], g [ N ]; char s [ N ]; int main () { int n ; cin >> n >> s + 1 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( s [ i ] == 'o' ) { g [ i ] = g [ i - 1 ] + 1.0 ; f [ i ] = f [ i - 1 ] + 2.0 * g [ i - 1 ] + 1.0 ; } else if ( s [ i ] == 'x' ) { g [ i ] = 0 ; f [ i ] = f [ i - 1 ]; } else if ( s [ i ] == '?' ) { g [ i ] = ( g [ i - 1 ] + 1.0 ) / 2.0 ; f [ i ] = f [ i - 1 ] + ( 2.0 * g [ i - 1 ] + 1.0 ) / 2.0 ; } } printf ( \"%.4lf\" , f [ n ]); return 0 ; } \u6d1b\u8c37P1654 OSU\uff01 \u9898\u76ee\u5165\u53e3 \u9898\u89e3 \u672c\u9898\u548c\u4e0a\u9898\u5dee\u4e0d\u591a,\u4e0d\u540c\u7684\u662f\u672c\u9898\u9700\u8981\u7ef4\u62a4\u957f\u5ea6 \\(len\\) \u548c \\(len^2\\) \u7684\u671f\u671b\uff0c\u6ce8\u610f\u4e0d\u80fd\u53ea\u7ef4\u62a4 \\(len\\) \u7684\u671f\u671b\uff0c\u56e0\u4e3a \\(E(x^2)\\neq E(x)^2\\) \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <bits/stdc++.h> using namespace std ; const int N = 1e5 + 5 ; double p ; double f [ N ]; // \u5230\u7b2ci\u4e2a\u7684\u671f\u671b\u957f\u5ea6 double a [ N ], b [ N ]; // len\u7684\u671f\u671b \u548c len\u65b9\u7684\u671f\u671b double cal ( double x ) { return x * x * x ; } int main () { cin . tie ( 0 ); cout . tie ( 0 ); ios :: sync_with_stdio ( 0 ); int n ; cin >> n ; double res = 0 ; double len = 0 ; double p ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> p ; a [ i ] = ( a [ i - 1 ] + 1 ) * p ; b [ i ] = ( b [ i - 1 ] + ( 2.0 * a [ i - 1 ] + 1.0 )) * p ; f [ i ] = f [ i - 1 ] + (( 3.0 * b [ i - 1 ] + 3.0 * a [ i - 1 ] + 1.0 )) * p ; } printf ( \"%.1lf\" , f [ n ]); return 0 ; } 2.\u63a8\u516c\u5f0f P4562 [JXOI2018]\u6e38\u620f \u9898\u76ee\u5165\u53e3 \u9898\u89e3 \u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u7cfb\u5217\u5177\u6709\u500d\u6570\u5173\u7cfb\u6570\u5b572,4,6,8\uff0c\u68c0\u67e5\u65f6\u95f4\u5176\u5b9e\u662f\u7531\u4ed6\u4eec\u79cd\u6700\u5c0f\u7684\u6570\u6240\u51b3\u5b9a\u7684\uff0c\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff0c\u5c062\uff0c4\u5206\u4e3a\u4e00\u7c7b\uff0c3\u5206\u4e3a\u4e00\u7c7b\uff0c\u6700\u540e\u7684\u68c0\u67e5\u65f6\u95f4\u662f\u75312\u548c3\u7684\u4f4d\u7f6e\u6240\u51b3\u5b9a\uff0c\u6240\u4ee5\u53ef\u4ee5\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u65f6\u95f4\uff0c\u6392\u5217\u7ec4\u5408\u4e00\u4e0b\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 #include <bits/stdc++.h> #define int long long using namespace std ; const int mod = 1e9 + 7 ; const int N = 1e7 + 5 ; int fac [ N ], infac [ N ]; int pre [ N ]; bool vis [ N ]; int sz [ N ]; int qpow ( int a , int n , int mod ) { int res = 1 ; while ( n ) { if ( n & 1 ) res = res * a % mod ; a = a * a % mod ; n >>= 1 ; } return res ; } void init ( int n ) { //\u9884\u5904\u7406\u9636\u4e58\u548c\u9006\u5143 fac [ 0 ] = 1 ; infac [ 0 ] = 1 ; for ( int i = 1 ; i <= n ; i ++ ) fac [ i ] = fac [ i - 1 ] * i % mod ; infac [ n ] = qpow ( fac [ n ], mod - 2 , mod ); for ( int i = n - 1 ; i >= 1 ; i -- ) { infac [ i ] = infac [ i + 1 ] * ( i + 1 ) % mod ; } //for(int i = 1; i <= 10; i ++ ) cout << fac[i] << \" \"; //cout << endl; //for(int j = 1; j <= 10; j ++ ) cout << infac[j] << \" \"; //cout << endl; } inline int find ( int x ) { return x == pre [ x ] ? x : pre [ x ] = find ( pre [ x ]); } int C ( int a , int b ) { return fac [ a ] % mod * infac [ a - b ] % mod * infac [ b ] % mod ; } signed main () { int l , r ; cin >> l >> r ; init ( r + 1 ); int n = r - l + 1 ; int x = 0 ; // x\u4e3a\u6700\u5c0f\u7684\u6570\u7684\u4e2a\u6570 for ( int i = l ; i <= r ; i ++ ) { if ( vis [ i ]) continue ; x ++ ; for ( int j = 2 ; j * i <= r ; j ++ ) { if ( vis [ i * j ]) continue ; vis [ i * j ] = true ; //cout << i << \" \" << j << endl; } } //for(int i = l; i <= r; i ++ ) cout << pre[i] << \" \"; int res = 0 ; //cout << C(5, 3) << endl; //cout << x << endl; for ( int i = x ; i <= n ; i ++ ) { // \u679a\u4e3e\u53ef\u80fd\u7684\u65f6\u95f4 res += x * C ( n - x , i - x ) % mod * fac [ i - 1 ] % mod * fac [ n - i ] % mod * i % mod ; res %= mod ; } // \u5bf9\u4e8e\u65f6\u95f4\u662fi\u7684\u60c5\u51b5\uff0c\u8bf4\u660ex\u4e2a\u6570\u5fc5\u987b\u5728\u524di\u4e2a\u4f4d\u7f6e\u4e14\u6709\u4e00\u4e2a\u5904\u4e8e\u7b2ci\u4e2a\u4f4d\u7f6e\uff0c\u4e8e\u662f\u56fa\u5b9a\u7b2ci\u4e2a\u4f4d\u7f6e\uff0c\u524d\u9762\u548c\u540e\u9762\u5168\u6392\u5217\u5373\u53ef cout << res << endl ; return 0 ; } P3802 \u5c0f\u9b54\u5973\u5e15\u742a \u9898\u76ee\u5165\u53e3 \u9898\u89e3 \u5982\u679c\u6211\u4eec\u80fd\u77e5\u9053\u6bcf\u4e03\u4e2a\u8fde\u7eed\u7684\u6676\u4f53\u91ca\u653e\u9b54\u6cd5\u7684\u6982\u7387\uff0c\u5c06\u6240\u6709\u7684\u53ef\u80fd\u6027\u52a0\u8d77\u6765\u4fbf\u662f\u7ed3\u679c\uff0c\u4ee4 \\(a_1,a_2...a_7\u4e3a\u6bcf\u79cd\u5c5e\u6027\u7684\u6676\u4f53\u6570\u91cf\uff0c\\) \u4ee5\u524d\u4e03\u4e2a\u4e3a\u4f8b\uff0c\u5982\u679c\u80fd\u65bd\u653e\u9b54\u6cd5\uff0c\u6982\u7387\u5fc5\u4e3a \\(7!\\times C_n^{a1}\\times C_{n-1}^{a2}...\\times C_{n - 6}^{a7}\\) \uff0c7!\u662f\u56e0\u4e3a\u91ca\u653e\u4e00\u6b21\u9b54\u6cd5\u65f6\u6bcf\u79cd\u5c5e\u6027\u7684\u6676\u4f53\u4f4d\u7f6e\u4e0d\u786e\u5b9a\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u611f\u6027\u7684\u7406\u89e3\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u62bd\u7b7e\uff0c\u5728\u6bcf\u6b21\u4e0d\u77e5\u9053\u524d\u8005\u7ed3\u679c\u65f6\u6982\u7387\u65f6\u4e00\u6837\u7684\uff0c\u672c\u9898\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff0c\u4e4b\u540e\u6bcf\u4e03\u4e2a\u80fd\u91ca\u653e\u9b54\u6cd5\u7684\u6982\u7387\u5747\u76f8\u540c\uff0c\u7531\u4e8e\u957f\u5ea6\u4e3a7\u7684\u4e32\u4e00\u5171\u6709 \\(n-6\\) \u4e2a\uff0c\u6700\u540e\u7b54\u6848\u4e58\u4e0a\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 #include <bits/stdc++.h> using namespace std ; const int N = 10 ; double f [ N ], g [ N ]; int a [ N ]; double res = 1 ; int main () { int n = 0 ; for ( int i = 1 ; i <= 7 ; i ++ ) { cin >> a [ i ]; n += a [ i ]; } int fac7 = 1 * 2 * 3 * 4 * 5 * 6 * 7 ; bool flag = true ; for ( int i = 1 ; i <= 7 ; i ++ ) { if ( n - i + 1 == 0 ) { flag = false ; break ; } res *= a [ i ] * 1.0 / ( n - i + 1 ); } if ( ! flag ) cout << \"0.000\" << endl ; else { res = res * fac7 * ( n - 6 ); printf ( \"%.3lf\" , res ); } return 0 ; }","title":"\u671f\u671b"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%9C%9F%E6%9C%9B/%E6%9C%9F%E6%9C%9B/#1dp","text":"","title":"1.\u671f\u671bDP"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%9C%9F%E6%9C%9B/%E6%9C%9F%E6%9C%9B/#p1365-wjmzbmrosu-easy","text":"\u9898\u76ee\u5165\u53e3 \u9898\u89e3 \u4ee4 \\(f[i]\\) \u8868\u793a\u5230\u7b2ci\u4e2a\u5b57\u7b26\u7684\u671f\u671b\u957f\u5ea6, \\(g[i]\\) \u8868\u793a\u4ee5\u7b2ci\u4e2a\u5b57\u7b26\u4e3a\u7ed3\u5c3e\u7684\u8fde\u7eedo\u4e32\u957f\u5ea6\u7684\u671f\u671b,\u6b64\u65f6\u5c31\u6709\u4e09\u79cd\u60c5\u51b5 \\(s[i] == o \u65f6, f[i] = f[i - 1] + (g[i-1] + 1)^2 -g[i-1]^2 = f[i - 1] + 2 * g[i - 1] + 1,g[i] = g[i -1] + 1\\) \\(\u5f53s[i] == x\u65f6,g[i] = 0,f[i] = f[i - 1]\\) \\(\u5f53s[i] == ?\u65f6,f[i] = f[i] + (2 * g[i - 1] + 1.0) * p,g[i]=(g[i - 1] + 1)*p(p\u4e3a?\u4e3ao\u7684\u6982\u7387\uff0c\u8fd9\u9898\u662f0.5)\\) \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #include <bits/stdc++.h> using namespace std ; const int N = 3e5 + 5 ; double f [ N ], g [ N ]; char s [ N ]; int main () { int n ; cin >> n >> s + 1 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( s [ i ] == 'o' ) { g [ i ] = g [ i - 1 ] + 1.0 ; f [ i ] = f [ i - 1 ] + 2.0 * g [ i - 1 ] + 1.0 ; } else if ( s [ i ] == 'x' ) { g [ i ] = 0 ; f [ i ] = f [ i - 1 ]; } else if ( s [ i ] == '?' ) { g [ i ] = ( g [ i - 1 ] + 1.0 ) / 2.0 ; f [ i ] = f [ i - 1 ] + ( 2.0 * g [ i - 1 ] + 1.0 ) / 2.0 ; } } printf ( \"%.4lf\" , f [ n ]); return 0 ; }","title":"\u6d1b\u8c37P1365 WJMZBMR\u6253osu! / Easy"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%9C%9F%E6%9C%9B/%E6%9C%9F%E6%9C%9B/#p1654-osu","text":"\u9898\u76ee\u5165\u53e3 \u9898\u89e3 \u672c\u9898\u548c\u4e0a\u9898\u5dee\u4e0d\u591a,\u4e0d\u540c\u7684\u662f\u672c\u9898\u9700\u8981\u7ef4\u62a4\u957f\u5ea6 \\(len\\) \u548c \\(len^2\\) \u7684\u671f\u671b\uff0c\u6ce8\u610f\u4e0d\u80fd\u53ea\u7ef4\u62a4 \\(len\\) \u7684\u671f\u671b\uff0c\u56e0\u4e3a \\(E(x^2)\\neq E(x)^2\\) \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <bits/stdc++.h> using namespace std ; const int N = 1e5 + 5 ; double p ; double f [ N ]; // \u5230\u7b2ci\u4e2a\u7684\u671f\u671b\u957f\u5ea6 double a [ N ], b [ N ]; // len\u7684\u671f\u671b \u548c len\u65b9\u7684\u671f\u671b double cal ( double x ) { return x * x * x ; } int main () { cin . tie ( 0 ); cout . tie ( 0 ); ios :: sync_with_stdio ( 0 ); int n ; cin >> n ; double res = 0 ; double len = 0 ; double p ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> p ; a [ i ] = ( a [ i - 1 ] + 1 ) * p ; b [ i ] = ( b [ i - 1 ] + ( 2.0 * a [ i - 1 ] + 1.0 )) * p ; f [ i ] = f [ i - 1 ] + (( 3.0 * b [ i - 1 ] + 3.0 * a [ i - 1 ] + 1.0 )) * p ; } printf ( \"%.1lf\" , f [ n ]); return 0 ; }","title":"\u6d1b\u8c37P1654 OSU\uff01"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%9C%9F%E6%9C%9B/%E6%9C%9F%E6%9C%9B/#2","text":"","title":"2.\u63a8\u516c\u5f0f"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%9C%9F%E6%9C%9B/%E6%9C%9F%E6%9C%9B/#p4562-jxoi2018","text":"\u9898\u76ee\u5165\u53e3 \u9898\u89e3 \u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u7cfb\u5217\u5177\u6709\u500d\u6570\u5173\u7cfb\u6570\u5b572,4,6,8\uff0c\u68c0\u67e5\u65f6\u95f4\u5176\u5b9e\u662f\u7531\u4ed6\u4eec\u79cd\u6700\u5c0f\u7684\u6570\u6240\u51b3\u5b9a\u7684\uff0c\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff0c\u5c062\uff0c4\u5206\u4e3a\u4e00\u7c7b\uff0c3\u5206\u4e3a\u4e00\u7c7b\uff0c\u6700\u540e\u7684\u68c0\u67e5\u65f6\u95f4\u662f\u75312\u548c3\u7684\u4f4d\u7f6e\u6240\u51b3\u5b9a\uff0c\u6240\u4ee5\u53ef\u4ee5\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u65f6\u95f4\uff0c\u6392\u5217\u7ec4\u5408\u4e00\u4e0b\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 #include <bits/stdc++.h> #define int long long using namespace std ; const int mod = 1e9 + 7 ; const int N = 1e7 + 5 ; int fac [ N ], infac [ N ]; int pre [ N ]; bool vis [ N ]; int sz [ N ]; int qpow ( int a , int n , int mod ) { int res = 1 ; while ( n ) { if ( n & 1 ) res = res * a % mod ; a = a * a % mod ; n >>= 1 ; } return res ; } void init ( int n ) { //\u9884\u5904\u7406\u9636\u4e58\u548c\u9006\u5143 fac [ 0 ] = 1 ; infac [ 0 ] = 1 ; for ( int i = 1 ; i <= n ; i ++ ) fac [ i ] = fac [ i - 1 ] * i % mod ; infac [ n ] = qpow ( fac [ n ], mod - 2 , mod ); for ( int i = n - 1 ; i >= 1 ; i -- ) { infac [ i ] = infac [ i + 1 ] * ( i + 1 ) % mod ; } //for(int i = 1; i <= 10; i ++ ) cout << fac[i] << \" \"; //cout << endl; //for(int j = 1; j <= 10; j ++ ) cout << infac[j] << \" \"; //cout << endl; } inline int find ( int x ) { return x == pre [ x ] ? x : pre [ x ] = find ( pre [ x ]); } int C ( int a , int b ) { return fac [ a ] % mod * infac [ a - b ] % mod * infac [ b ] % mod ; } signed main () { int l , r ; cin >> l >> r ; init ( r + 1 ); int n = r - l + 1 ; int x = 0 ; // x\u4e3a\u6700\u5c0f\u7684\u6570\u7684\u4e2a\u6570 for ( int i = l ; i <= r ; i ++ ) { if ( vis [ i ]) continue ; x ++ ; for ( int j = 2 ; j * i <= r ; j ++ ) { if ( vis [ i * j ]) continue ; vis [ i * j ] = true ; //cout << i << \" \" << j << endl; } } //for(int i = l; i <= r; i ++ ) cout << pre[i] << \" \"; int res = 0 ; //cout << C(5, 3) << endl; //cout << x << endl; for ( int i = x ; i <= n ; i ++ ) { // \u679a\u4e3e\u53ef\u80fd\u7684\u65f6\u95f4 res += x * C ( n - x , i - x ) % mod * fac [ i - 1 ] % mod * fac [ n - i ] % mod * i % mod ; res %= mod ; } // \u5bf9\u4e8e\u65f6\u95f4\u662fi\u7684\u60c5\u51b5\uff0c\u8bf4\u660ex\u4e2a\u6570\u5fc5\u987b\u5728\u524di\u4e2a\u4f4d\u7f6e\u4e14\u6709\u4e00\u4e2a\u5904\u4e8e\u7b2ci\u4e2a\u4f4d\u7f6e\uff0c\u4e8e\u662f\u56fa\u5b9a\u7b2ci\u4e2a\u4f4d\u7f6e\uff0c\u524d\u9762\u548c\u540e\u9762\u5168\u6392\u5217\u5373\u53ef cout << res << endl ; return 0 ; }","title":"P4562 [JXOI2018]\u6e38\u620f"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E6%9C%9F%E6%9C%9B/%E6%9C%9F%E6%9C%9B/#p3802","text":"\u9898\u76ee\u5165\u53e3 \u9898\u89e3 \u5982\u679c\u6211\u4eec\u80fd\u77e5\u9053\u6bcf\u4e03\u4e2a\u8fde\u7eed\u7684\u6676\u4f53\u91ca\u653e\u9b54\u6cd5\u7684\u6982\u7387\uff0c\u5c06\u6240\u6709\u7684\u53ef\u80fd\u6027\u52a0\u8d77\u6765\u4fbf\u662f\u7ed3\u679c\uff0c\u4ee4 \\(a_1,a_2...a_7\u4e3a\u6bcf\u79cd\u5c5e\u6027\u7684\u6676\u4f53\u6570\u91cf\uff0c\\) \u4ee5\u524d\u4e03\u4e2a\u4e3a\u4f8b\uff0c\u5982\u679c\u80fd\u65bd\u653e\u9b54\u6cd5\uff0c\u6982\u7387\u5fc5\u4e3a \\(7!\\times C_n^{a1}\\times C_{n-1}^{a2}...\\times C_{n - 6}^{a7}\\) \uff0c7!\u662f\u56e0\u4e3a\u91ca\u653e\u4e00\u6b21\u9b54\u6cd5\u65f6\u6bcf\u79cd\u5c5e\u6027\u7684\u6676\u4f53\u4f4d\u7f6e\u4e0d\u786e\u5b9a\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u611f\u6027\u7684\u7406\u89e3\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u62bd\u7b7e\uff0c\u5728\u6bcf\u6b21\u4e0d\u77e5\u9053\u524d\u8005\u7ed3\u679c\u65f6\u6982\u7387\u65f6\u4e00\u6837\u7684\uff0c\u672c\u9898\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff0c\u4e4b\u540e\u6bcf\u4e03\u4e2a\u80fd\u91ca\u653e\u9b54\u6cd5\u7684\u6982\u7387\u5747\u76f8\u540c\uff0c\u7531\u4e8e\u957f\u5ea6\u4e3a7\u7684\u4e32\u4e00\u5171\u6709 \\(n-6\\) \u4e2a\uff0c\u6700\u540e\u7b54\u6848\u4e58\u4e0a\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 #include <bits/stdc++.h> using namespace std ; const int N = 10 ; double f [ N ], g [ N ]; int a [ N ]; double res = 1 ; int main () { int n = 0 ; for ( int i = 1 ; i <= 7 ; i ++ ) { cin >> a [ i ]; n += a [ i ]; } int fac7 = 1 * 2 * 3 * 4 * 5 * 6 * 7 ; bool flag = true ; for ( int i = 1 ; i <= 7 ; i ++ ) { if ( n - i + 1 == 0 ) { flag = false ; break ; } res *= a [ i ] * 1.0 / ( n - i + 1 ); } if ( ! flag ) cout << \"0.000\" << endl ; else { res = res * fac7 * ( n - 6 ); printf ( \"%.3lf\" , res ); } return 0 ; }","title":"P3802 \u5c0f\u9b54\u5973\u5e15\u742a"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E5%8D%A1%E7%89%B9%E5%85%B0%E6%95%B0/","text":"\u5361\u7279\u5170\u6570 \u6982\u8ff0 \u5361\u7279\u5170\u6570\u662f\u4e00\u79cd\u7ecf\u5178\u7684\u7ec4\u5408\u6570\uff0c\u7ecf\u5e38\u51fa\u73b0\u5728\u5404\u79cd\u8ba1\u7b97\u4e2d\uff0c\u5176\u524d\u51e0\u9879\u4e3a : 1, 2, 5, 14, 42, 132, 429, 1430, 4862, 16796, 58786, 208012, 742900, 2674440, 9694845\u2026 \u5e38\u89c1\u516c\u5f0f \\(H_n=\\begin{cases} \\sum_{i = 1}^nH_{i - 1}H_{n-i},(n\\ge2, n\\in N_{+})\\\\ 1,(n=0,1) \\end{cases}\\) \u2002 \\(H_n = \\frac{H_{n-1}(4n-2)}{n+1}\\) \u2002 \\(H_n=C_{2n}^n-C_{2n}^{n-1}=\\frac{C_{2n}^n}{n+1}\\) \u7ecf\u5178\u4f8b\u9898 \u4f8b1 P1641 [SCOI2010]\u751f\u6210\u5b57\u7b26\u4e32 \u9898\u76ee\u63cf\u8ff0 lxhgww \u6700\u8fd1\u63a5\u5230\u4e86\u4e00\u4e2a\u751f\u6210\u5b57\u7b26\u4e32\u7684\u4efb\u52a1\uff0c\u4efb\u52a1\u9700\u8981\u4ed6\u628a n \u4e2a 1 \u548c m \u4e2a 0 \u7ec4\u6210\u5b57\u7b26\u4e32\uff0c\u4f46\u662f\u4efb\u52a1\u8fd8\u8981\u6c42\u5728\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u4e2d\uff0c\u5728\u4efb\u610f\u7684\u524d k \u4e2a\u5b57\u7b26\u4e2d\uff0c1 \u7684\u4e2a\u6570\u4e0d\u80fd\u5c11\u4e8e 0 \u7684\u4e2a\u6570\u3002\u73b0\u5728 lxhgww \u60f3\u8981\u77e5\u9053\u6ee1\u8db3\u8981\u6c42\u7684\u5b57\u7b26\u4e32\u5171\u6709\u591a\u5c11\u4e2a\uff0c\u806a\u660e\u7684\u7a0b\u5e8f\u5458\u4eec\uff0c\u4f60\u4eec\u80fd\u5e2e\u52a9\u4ed6\u5417\uff1f \u8f93\u5165\u683c\u5f0f \u8f93\u5165\u6570\u636e\u53ea\u6709\u4e00\u884c\uff0c\u5305\u62ec 2 \u4e2a\u6570\u5b57 n \u548c m\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u6570\u636e\u662f\u4e00\u884c\uff0c\u5305\u62ec 1 \u4e2a\u6570\u5b57\uff0c\u8868\u793a\u6ee1\u8db3\u8981\u6c42\u7684\u5b57\u7b26\u4e32\u6570\u76ee\uff0c\u8fd9\u4e2a\u6570\u53ef\u80fd\u4f1a\u5f88\u5927\uff0c\u53ea\u9700\u8f93\u51fa\u8fd9\u4e2a\u6570\u9664\u4ee5 20100403 \u7684\u4f59\u6570 \u8f93\u5165\u8f93\u51fa\u6837\u4f8b 1 2 3 4 \u8f93\u5165#1 2 2 \u8f93\u5165#1 2 \u601d\u8def \u5c061\u548c0\u7684\u64cd\u4f5c\u8f6c\u6362\u5230\u5750\u6807\u7cfb\u4e2d\uff0c\u5047\u8bbe\u67091\u5219\uff08x+1\uff0cy+1\uff09\uff0c\u67090\u5219\uff08x+1,y-1\uff09\uff0c\u6211\u4eec\u53d1\u73b0\u7ec8\u70b9\u4e3a\uff08n+m,n-m\uff09\uff0c\u82e5\u5b58\u5728\u524dk\u5b57\u6bcd\u4e2d0\u4e2a\u6570\u5927\u4e8e1\uff0c\u5219\u5728\u5750\u6807\u7cfb\u4e2d\u66f2\u7ebf\u7ecf\u8fc7y=-1\uff0c\u5c06\u7ec8\u70b9\u5173\u4e8ey=-1\u5bf9\u79f0\uff0c\u5219\u7ec8\u70b9\u5bf9\u79f0\u70b9\u4e3a\uff08n+m\uff0cm-n-2\uff09\uff0c\u4e8e\u662f\u5c31\u6709n-m+1\u6b65\u7684\u5411\u4e0a\u53d8\u6210\u5411\u4e0b\uff0c\u5373\u4e00\u5171\u6709n+1\u6b65\u5411\u4e0b\uff0c\u6240\u6709\u60c5\u51b5\u6709C_(c+m)^n\u79cd\u53ef\u80fd\uff0c\u4e0d\u5408\u6cd5\u7684\u6709C_(n+m)^(m-1) \u6216C_(n+m)^(n+1)\u79cd\u53ef\u80fd\uff0c\u7b54\u6848\u76f8\u51cf\u5373\u53ef\uff0c\u53e6\u4e00\u79cd\u5bf9\u79f0\u65b9\u6cd5\u662f\u5c06\u8d77\u70b9\u5173\u4e8ey=-1\u5bf9\u79f0\uff0c\u5219\u8d77\u70b9\u53d8\u4e3a\uff080\uff0c-2\uff09\uff0c\u5230\u8fbe\uff08n+m\uff0cn-m\uff09,\u9700\u8981\u5c06\u4e00\u6b65\u5411\u4e0b\u53d8\u4e3a\u5411\u4e0a\uff0c\u5219\u4e0d\u5408\u6cd5\u6709C_(n+m)^(m-1)\u79cd\u53ef\u80fd 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #include <bits/stdc++.h> #define int long long using namespace std ; const int mod = 20100403 ; int qpow ( int a , int n , int mod ) { int res = 1 ; while ( n ) { if ( n & 1 ) res = res * a % mod ; a = a * a % mod ; n >>= 1 ; } return res ; } int C ( int a , int b , int mod ) { int res = 1 ; for ( int i = 1 , j = a ; i <= b ; i ++ , j -- ) { res *= j ; res %= mod ; res *= qpow ( i , mod -2 , mod ); res %= mod ; } return res ; } signed main () { int n , m ; cin >> n >> m ; cout << (( C ( n + m , m , mod ) - C ( n + m , m -1 , mod )) % mod + mod ) % mod << endl ; return 0 ; }","title":"\u5361\u7279\u5170\u6570"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E5%8D%A1%E7%89%B9%E5%85%B0%E6%95%B0/#_1","text":"","title":"\u5361\u7279\u5170\u6570"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E5%8D%A1%E7%89%B9%E5%85%B0%E6%95%B0/#_2","text":"\u5361\u7279\u5170\u6570\u662f\u4e00\u79cd\u7ecf\u5178\u7684\u7ec4\u5408\u6570\uff0c\u7ecf\u5e38\u51fa\u73b0\u5728\u5404\u79cd\u8ba1\u7b97\u4e2d\uff0c\u5176\u524d\u51e0\u9879\u4e3a : 1, 2, 5, 14, 42, 132, 429, 1430, 4862, 16796, 58786, 208012, 742900, 2674440, 9694845\u2026","title":"\u6982\u8ff0"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E5%8D%A1%E7%89%B9%E5%85%B0%E6%95%B0/#_3","text":"\\(H_n=\\begin{cases} \\sum_{i = 1}^nH_{i - 1}H_{n-i},(n\\ge2, n\\in N_{+})\\\\ 1,(n=0,1) \\end{cases}\\) \u2002 \\(H_n = \\frac{H_{n-1}(4n-2)}{n+1}\\) \u2002 \\(H_n=C_{2n}^n-C_{2n}^{n-1}=\\frac{C_{2n}^n}{n+1}\\)","title":"\u5e38\u89c1\u516c\u5f0f"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E5%8D%A1%E7%89%B9%E5%85%B0%E6%95%B0/#_4","text":"","title":"\u7ecf\u5178\u4f8b\u9898"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E5%8D%A1%E7%89%B9%E5%85%B0%E6%95%B0/#1-p1641-scoi2010","text":"\u9898\u76ee\u63cf\u8ff0 lxhgww \u6700\u8fd1\u63a5\u5230\u4e86\u4e00\u4e2a\u751f\u6210\u5b57\u7b26\u4e32\u7684\u4efb\u52a1\uff0c\u4efb\u52a1\u9700\u8981\u4ed6\u628a n \u4e2a 1 \u548c m \u4e2a 0 \u7ec4\u6210\u5b57\u7b26\u4e32\uff0c\u4f46\u662f\u4efb\u52a1\u8fd8\u8981\u6c42\u5728\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u4e2d\uff0c\u5728\u4efb\u610f\u7684\u524d k \u4e2a\u5b57\u7b26\u4e2d\uff0c1 \u7684\u4e2a\u6570\u4e0d\u80fd\u5c11\u4e8e 0 \u7684\u4e2a\u6570\u3002\u73b0\u5728 lxhgww \u60f3\u8981\u77e5\u9053\u6ee1\u8db3\u8981\u6c42\u7684\u5b57\u7b26\u4e32\u5171\u6709\u591a\u5c11\u4e2a\uff0c\u806a\u660e\u7684\u7a0b\u5e8f\u5458\u4eec\uff0c\u4f60\u4eec\u80fd\u5e2e\u52a9\u4ed6\u5417\uff1f \u8f93\u5165\u683c\u5f0f \u8f93\u5165\u6570\u636e\u53ea\u6709\u4e00\u884c\uff0c\u5305\u62ec 2 \u4e2a\u6570\u5b57 n \u548c m\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u6570\u636e\u662f\u4e00\u884c\uff0c\u5305\u62ec 1 \u4e2a\u6570\u5b57\uff0c\u8868\u793a\u6ee1\u8db3\u8981\u6c42\u7684\u5b57\u7b26\u4e32\u6570\u76ee\uff0c\u8fd9\u4e2a\u6570\u53ef\u80fd\u4f1a\u5f88\u5927\uff0c\u53ea\u9700\u8f93\u51fa\u8fd9\u4e2a\u6570\u9664\u4ee5 20100403 \u7684\u4f59\u6570 \u8f93\u5165\u8f93\u51fa\u6837\u4f8b 1 2 3 4 \u8f93\u5165#1 2 2 \u8f93\u5165#1 2 \u601d\u8def \u5c061\u548c0\u7684\u64cd\u4f5c\u8f6c\u6362\u5230\u5750\u6807\u7cfb\u4e2d\uff0c\u5047\u8bbe\u67091\u5219\uff08x+1\uff0cy+1\uff09\uff0c\u67090\u5219\uff08x+1,y-1\uff09\uff0c\u6211\u4eec\u53d1\u73b0\u7ec8\u70b9\u4e3a\uff08n+m,n-m\uff09\uff0c\u82e5\u5b58\u5728\u524dk\u5b57\u6bcd\u4e2d0\u4e2a\u6570\u5927\u4e8e1\uff0c\u5219\u5728\u5750\u6807\u7cfb\u4e2d\u66f2\u7ebf\u7ecf\u8fc7y=-1\uff0c\u5c06\u7ec8\u70b9\u5173\u4e8ey=-1\u5bf9\u79f0\uff0c\u5219\u7ec8\u70b9\u5bf9\u79f0\u70b9\u4e3a\uff08n+m\uff0cm-n-2\uff09\uff0c\u4e8e\u662f\u5c31\u6709n-m+1\u6b65\u7684\u5411\u4e0a\u53d8\u6210\u5411\u4e0b\uff0c\u5373\u4e00\u5171\u6709n+1\u6b65\u5411\u4e0b\uff0c\u6240\u6709\u60c5\u51b5\u6709C_(c+m)^n\u79cd\u53ef\u80fd\uff0c\u4e0d\u5408\u6cd5\u7684\u6709C_(n+m)^(m-1) \u6216C_(n+m)^(n+1)\u79cd\u53ef\u80fd\uff0c\u7b54\u6848\u76f8\u51cf\u5373\u53ef\uff0c\u53e6\u4e00\u79cd\u5bf9\u79f0\u65b9\u6cd5\u662f\u5c06\u8d77\u70b9\u5173\u4e8ey=-1\u5bf9\u79f0\uff0c\u5219\u8d77\u70b9\u53d8\u4e3a\uff080\uff0c-2\uff09\uff0c\u5230\u8fbe\uff08n+m\uff0cn-m\uff09,\u9700\u8981\u5c06\u4e00\u6b65\u5411\u4e0b\u53d8\u4e3a\u5411\u4e0a\uff0c\u5219\u4e0d\u5408\u6cd5\u6709C_(n+m)^(m-1)\u79cd\u53ef\u80fd 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #include <bits/stdc++.h> #define int long long using namespace std ; const int mod = 20100403 ; int qpow ( int a , int n , int mod ) { int res = 1 ; while ( n ) { if ( n & 1 ) res = res * a % mod ; a = a * a % mod ; n >>= 1 ; } return res ; } int C ( int a , int b , int mod ) { int res = 1 ; for ( int i = 1 , j = a ; i <= b ; i ++ , j -- ) { res *= j ; res %= mod ; res *= qpow ( i , mod -2 , mod ); res %= mod ; } return res ; } signed main () { int n , m ; cin >> n >> m ; cout << (( C ( n + m , m , mod ) - C ( n + m , m -1 , mod )) % mod + mod ) % mod << endl ; return 0 ; }","title":"\u4f8b1 P1641 [SCOI2010]\u751f\u6210\u5b57\u7b26\u4e32"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E6%96%AF%E7%89%B9%E6%8B%89%E6%95%B0/","text":"\u7b2c\u4e00\u7c7b\u65af\u7279\u6797\u6570 \u6c42\u5c06n\u4e2a\u4e92\u4e0d\u76f8\u540c\u7684\u7403\u5206\u6210k\u4e2a\u5706\u6392\u5217\u7684\u65b9\u6848\u6570 \u601d\u8def s[i][j]\u8868\u793a\u5c06i\u4e2a\u7403\u5206\u6210j\u4e2a\u5706\u6392\u5217\u7684\u65b9\u6848\u6570\uff0c\u5f53\u653e\u5165\u7b2ci\u4e2a\u7403\u65f6\uff0c\u53ef\u4ee5\u5c06\u5176\u989d\u5916\u65b0\u589e\u4e00\u4e2a\u539f\u6392\u5217\uff0c\u6b64\u65f6\u65b9\u6848\u6570\u4f4ds[i-1][j-1]\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5176\u63d2\u5165\u5230\u524di-1\u4e2a\u6570\u7684\u7a7a\u9699\u4e2d\uff0c\u7531\u4e8e\u662f\u5706\u6392\u5217\uff0cx\u4e2a\u7403\u5c31\u6709x\u4e2a\u7a7a\uff0c\u4e8e\u662f\u65b0\u589e\u4e86\uff08i-1)*s[i-1][j]\u79cd\u65b9\u6848\u3002 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <bits/stdc++.h> using namespace std ; #define int long long int k , n ; const int N = 1005 ; int s [ N ][ N ]; const int mod = 1e9 + 7 ; signed main () { cin >> n >> k ; s [ 0 ][ 0 ] = 1 ; for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= k ; j ++ ) { s [ i ][ j ] = s [ i -1 ][ j -1 ] + ( i -1 ) * s [ i -1 ][ j ]; s [ i ][ j ] %= mod ; } } cout << s [ n ][ k ] << endl ; } \u7b2c\u4e8c\u7c7b\u65af\u7279\u6797\u6570 \u6c42\u5c06n\u4e2a\u4e0d\u540c\u7684\u7403\u5206\u6210k\u7ec4\u7684\u65b9\u6848\u6570 \u601d\u8def S[i][j][\u8868\u793a\u5c06i\u4e2a\u7403\u5206\u6210j\u7ec4\u7684\u65b9\u6848\u6570\uff0c\u5f53\u653e\u5165\u7b2ci\u4e2a\u7403\u65f6\uff0c\u540c\u7b2c\u4e00\u7c7b\u65af\u7279\u6797\u6570\uff0c\u53ef\u4ee5\u9009\u62e9\u989d\u5916\u751f\u6210\u4e00\u4e2a\u539f\u6392\u5217\uff0c\u5219\u65b9\u6848\u6570\u4e3aS[i-1][j-1]\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5176\u63d2\u5165\u5230\u524dj\u7ec4\u4e2d\uff0c\u65b9\u6848\u6570\u4e3aj*S[i-1][j]\u3002 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include <bits/stdc++.h> using namespace std ; #define int long long const int N = 1005 ; int S [ N ][ N ]; int n , k ; const int mod = 1e9 + 7 ; signed main () { cin >> n >> k ; S [ 0 ][ 0 ] = 1 ; for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= k ; j ++ ) { S [ i ][ j ] = S [ i -1 ][ j -1 ] + j * S [ i -1 ][ j ]; S [ i ][ j ] %= mod ; } } cout << S [ n ][ k ] << endl ; return 0 ; }","title":"\u65af\u7279\u62c9\u6570"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E6%96%AF%E7%89%B9%E6%8B%89%E6%95%B0/#_1","text":"","title":"\u7b2c\u4e00\u7c7b\u65af\u7279\u6797\u6570"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E6%96%AF%E7%89%B9%E6%8B%89%E6%95%B0/#nk","text":"\u601d\u8def s[i][j]\u8868\u793a\u5c06i\u4e2a\u7403\u5206\u6210j\u4e2a\u5706\u6392\u5217\u7684\u65b9\u6848\u6570\uff0c\u5f53\u653e\u5165\u7b2ci\u4e2a\u7403\u65f6\uff0c\u53ef\u4ee5\u5c06\u5176\u989d\u5916\u65b0\u589e\u4e00\u4e2a\u539f\u6392\u5217\uff0c\u6b64\u65f6\u65b9\u6848\u6570\u4f4ds[i-1][j-1]\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5176\u63d2\u5165\u5230\u524di-1\u4e2a\u6570\u7684\u7a7a\u9699\u4e2d\uff0c\u7531\u4e8e\u662f\u5706\u6392\u5217\uff0cx\u4e2a\u7403\u5c31\u6709x\u4e2a\u7a7a\uff0c\u4e8e\u662f\u65b0\u589e\u4e86\uff08i-1)*s[i-1][j]\u79cd\u65b9\u6848\u3002 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <bits/stdc++.h> using namespace std ; #define int long long int k , n ; const int N = 1005 ; int s [ N ][ N ]; const int mod = 1e9 + 7 ; signed main () { cin >> n >> k ; s [ 0 ][ 0 ] = 1 ; for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= k ; j ++ ) { s [ i ][ j ] = s [ i -1 ][ j -1 ] + ( i -1 ) * s [ i -1 ][ j ]; s [ i ][ j ] %= mod ; } } cout << s [ n ][ k ] << endl ; }","title":"\u6c42\u5c06n\u4e2a\u4e92\u4e0d\u76f8\u540c\u7684\u7403\u5206\u6210k\u4e2a\u5706\u6392\u5217\u7684\u65b9\u6848\u6570"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E6%96%AF%E7%89%B9%E6%8B%89%E6%95%B0/#_2","text":"","title":"\u7b2c\u4e8c\u7c7b\u65af\u7279\u6797\u6570"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E6%96%AF%E7%89%B9%E6%8B%89%E6%95%B0/#nk_1","text":"\u601d\u8def S[i][j][\u8868\u793a\u5c06i\u4e2a\u7403\u5206\u6210j\u7ec4\u7684\u65b9\u6848\u6570\uff0c\u5f53\u653e\u5165\u7b2ci\u4e2a\u7403\u65f6\uff0c\u540c\u7b2c\u4e00\u7c7b\u65af\u7279\u6797\u6570\uff0c\u53ef\u4ee5\u9009\u62e9\u989d\u5916\u751f\u6210\u4e00\u4e2a\u539f\u6392\u5217\uff0c\u5219\u65b9\u6848\u6570\u4e3aS[i-1][j-1]\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5176\u63d2\u5165\u5230\u524dj\u7ec4\u4e2d\uff0c\u65b9\u6848\u6570\u4e3aj*S[i-1][j]\u3002 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include <bits/stdc++.h> using namespace std ; #define int long long const int N = 1005 ; int S [ N ][ N ]; int n , k ; const int mod = 1e9 + 7 ; signed main () { cin >> n >> k ; S [ 0 ][ 0 ] = 1 ; for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= k ; j ++ ) { S [ i ][ j ] = S [ i -1 ][ j -1 ] + j * S [ i -1 ][ j ]; S [ i ][ j ] %= mod ; } } cout << S [ n ][ k ] << endl ; return 0 ; }","title":"\u6c42\u5c06n\u4e2a\u4e0d\u540c\u7684\u7403\u5206\u6210k\u7ec4\u7684\u65b9\u6848\u6570"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BA%BF%E6%80%A7%E5%9F%BA/","text":"\u6982\u8ff0 \u7ebf\u6027\u57fa\uff0c\u662f\u7ebf\u6027\u4ee3\u6570\u4e2d\u7684\u6982\u5ff5\uff0c\u5728\u4fe1\u606f\u5b66\u7ade\u8d5b\u4e2d\uff0c\u524d\u7f00\u7ebf\u6027\u57fa\u662f\u7ebf\u6027\u57fa\u7684\u6269\u5c55\uff0c\u4ed6\u4eec\u4e3b\u8981\u7528\u4e8e\u5904\u7406\u6709\u5173\u5f02\u6216\u548c\u7684\u6781\u503c\u95ee\u9898\u3002 \u4e00\u7ec4\u7ebf\u6027\u65e0\u5173\u7684\u5411\u91cf\u5373\u53ef\u4f5c\u4e3a\u4e00\u7ec4\u57fa\u5e95\uff0c\u5f20\u8d77\u4e00\u4e2a\u7ebf\u6027\u7684\u5411\u91cf\u7a7a\u95f4\uff0c\u8fd9\u4e2a\u57fa\u5e95\u5373\u79f0\u4e3a\u7ebf\u6027\u57fa\uff0c\u5229\u7528\u7ebf\u6027\u57fa\u7684\u57fa\u5e95\u8fdb\u884c\u7ebf\u6027\u8fd0\u7b97\uff0c\u53ef\u8868\u793a\u5411\u91cf\u7a7a\u95f4\u5185\u7684\u6240\u6709\u5411\u91cf\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6240\u6709\u5411\u91cf\u90fd\u53ef\u4ee5\u62c6\u6210\u57fa\u5e95\u7684\u7ebf\u6027\u7ec4\u5408\u3002 \u6839\u636e\u5f02\u6216\u7684\u539f\u7406\uff0c\u5c06\u4e00\u4e2a\u6570\u5b57\u62c6\u6210\u4ed6\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\uff0c\u5c06\u4e8c\u8fdb\u5236\u5f62\u5f0f\u7528\u5411\u91cf\u6765\u8868\u793a\uff0c\u7531\u4e8e\u4e00\u7ec4\u7ebf\u6027\u65e0\u5173\u7684\u5411\u91cf\u53ef\u4ee5\u5f20\u8d77\u4e00\u4e2a\u5411\u91cf\u7a7a\u95f4\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u6784\u9020\u8fd9\u6837\u4e00\u7ec4\u6570\u5b57\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\u7ec4\u6210\u7684\u7ebf\u6027\u57fa\uff0c\u5728\u8fd9\u4e2a\u7ebf\u6027\u57fa\u4e2d\uff0c\u901a\u8fc7\u57fa\u5e95\u7684\u7ebf\u6027\u7ec4\u5408\u3001\u5f02\u6216\u8fd0\u7b97\uff0c\u4ece\u800c\u53ef\u4ee5\u8868\u8fbe\u6240\u6709\u7684\u5f02\u6216\u7ed3\u679c\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u82e5\u4e00\u4e2a\u6570\u96c6 T \u7684\u503c\u57df\u8303\u56f4\u4e3a \uff0c\u90a3\u4e48 T \u7684\u7ebf\u6027\u57fa\u662f T \u7684\u4e00\u4e2a\u5b50\u96c6 A={a1,a2,a3,...,an}\uff0cA \u4e2d\u5143\u7d20\u76f8\u4e92\u5f02\u6216\u800c\u6210\u7684\u96c6\u5408\uff0c\u7b49\u4ef7\u4e8e\u539f\u6570\u96c6 T \u7684\u5143\u7d20\u76f8\u4e92\u5f02\u6216\u5f62\u6210\u5f02\u6216\u96c6\u5408 \u9884\u5907\u77e5\u8bc6 \u4ea4\u6362\u53d8\u91cf\u4f4d\u7f6e\uff1a a = a ^ b; b = a ^ b; a = a ^ b; \u5982\u679ca^b==c \u5219a^c==b b^c==a a^b^c==0 \u5b9a\u4e49 \u7ebf\u6027\u57fa\u662f\u4e00\u4e2a\u6570\u7684\u96c6\u5408\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5e8f\u5217\u90fd\u62e5\u6709\u81f3\u5c11\u4e00\u4e2a\u7ebf\u6027\u57fa\uff0c\u53d6\u7ebf\u6027\u57fa\u4e2d\u82e5\u5e72\u4e2a\u6570\u5f02\u6216\u8d77\u6765\u53ef\u4ee5\u5f97\u5230\u539f\u5e8f\u5217\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6570\u3002 \u4e8c\u8fdb\u5236\u6c42\u7ebf\u6027\u57fa \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 void init () //\u6c42\u975e\u6700\u7b80\u7ebf\u6027\u57fa { for ( int i = 1 ; i <= n ; i ++ ) //1-n\u904d\u5386\u6570\u7ec4\u5143\u7d20 { ll x = num [ i ]; for ( int j = 63 ; j >= 0 ; j -- ) //\u8003\u5bdf\u5143\u7d20\u7684\u6bcf\u4e00\u4f4d { if ( x & ( 1L L << j )) //\u5982\u679c\u5143\u7d20\u7684\u7b2cj\u4f4d\u4e3a1 { if ( p [ j ]) x ^= p [ j ]; //\u5728\u7ebf\u6027\u57fa\u4e2d\u5df2\u7ecf\u51fa\u73b0\u7b2cj\u4f4d\u4e3a1\u65f6\uff0c\u6d88\u53bb\u5f53\u524d\u5143\u7d20//\u76841\uff0c\u4fdd\u8bc1\u4e3a\u4e0b\u4e09\u89d2\u5f62\u5f0f,\u5316\u4e3a\u4e0b\u4e09\u89d2\u662f\u4e3a\u4e86\u66f4\u5bb9\u6613\u5f02//\u6216\u5f97\u51fa\u67d0\u6570 else { p [ j ] = x ; //\u5426\u5219\u5c06\u7b2cj\u4f4d\u5143\u7d20\u7f6e1 break ; } } } } return ; } \u5224\u65ad\u67d0\u6570\u80fd\u5426\u7531\u7ebf\u6027\u57fa\u8868\u793a \u601d\u8def\uff1a\u5c06\u8be5\u6570\u901a\u8fc7\u7ebf\u6027\u57fa\uff0c\u770b\u7ed3\u679c\u662f\u5426\u4e3a0\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 bool check ( long long x ) { for ( int j = 60 ; j >= 0 ; j -- ) { if ( x & ( 1L L << j )) { if ( d [ j ] == 0 ) { return false ; } else x ^= d [ j ]; } } return x == 0 ; } \u6c42\u5f02\u6216\u548c\u6700\u5927 \u601d\u8def\uff1a\u6c42\u51fa\u7ebf\u6027\u57fa\uff0c\u7531\u4e8e\u9ad8\u4f4d\u4e3a1\u8d21\u732e\u66f4\u5927\uff0c\u6bcf\u6b21\u4f18\u5148\u5f02\u6216\u9ad8\u4f4d\uff0c\u904d\u5386\u7ebf\u6027\u57fa\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 long long query_max () { long long ret = 0 ; for ( int i = 60 ; i >= 0 ; i -- ) if (( ret ^ d [ i ]) > ret ) //\u8d2a\u5fc3 ret ^= d [ i ]; return ret ; } \u6c42\u5f02\u6216\u548c\u6700\u5c0f \u601d\u8def\uff1a\u6c42\u6700\u5c0f\u7684\u7ebf\u6027\u57fa\u5143\u7d20\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 long long query_min () { for ( int i = 0 ; i <= 60 ; i ++ ) if ( d [ i ]) return d [ i ]; return 0 ; } \u6c42\u5f02\u6216\u548c\u7b2cK\u5927 \u601d\u8def\uff1a\u5c06\u7ebf\u6027\u57fa\u5316\u4e3a\u6700\u7b80\uff0cK\u7528\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u9009\u51fa1\u7684\u4f4d\uff0c\u5c06\u4ee5\u5176\u4e3a\u4e0b\u6807\u7684\u7ebf\u6027\u57fa\u5143\u7d20\u76f8\u4e58\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 void rebuild () //\u9ad8\u65af\u6d88\u5143\u5316\u4e3a\u6700\u7b80\u7ebf\u6027\u57fa { for ( int i = 60 ; i >= 0 ; i -- ) for ( int j = i -1 ; j >= 0 ; j -- ) if ( d [ i ] & ( 1L L << j )) d [ i ] ^= d [ j ]; for ( int i = 0 ; i <= 60 ; i ++ ) if ( d [ i ]) p [ cnt ++ ] = d [ i ]; } long long kthquery ( long long k ) { int ret = 0 ; if ( k >= ( 1L L << cnt )) return -1 ; for ( int i = 60 ; i >= 0 ; i -- ) if ( k & ( 1L L << i )) ret ^= p [ i ]; return ret ; } \u7ecf\u5178\u4f8b\u9898 \u4f8b1.HDU 3949 XOR Problem Description XOR is a kind of bit operator, we define that as follow: for two binary base number A and B, let C=A XOR B, then for each bit of C, we can get its value by check the digit of corresponding position in A and B. And for each digit, 1 XOR 1 = 0, 1 XOR 0 = 1, 0 XOR 1 = 1, 0 XOR 0 = 0. And we simply write this operator as ^, like 3 ^ 1 = 2,4 ^ 3 = 7. XOR is an amazing operator and this is a question about XOR. We can choose several numbers and do XOR operatorion to them one by one, then we get another number. For example, if we choose 2,3 and 4, we can get 2^3^4=5. Now, you are given N numbers, and you can choose some of them(even a single number) to do XOR on them, and you can get many different numbers. Now I want you tell me which number is the K-th smallest number among them. Input First line of the input is a single integer T(T<=30), indicates there are T test cases. For each test case, the first line is an integer N(1<=N<=10000), the number of numbers below. The second line contains N integers (each number is between 1 and 10^18). The third line is a number Q(1<=Q<=10000), the number of queries. The fourth line contains Q numbers(each number is between 1 and 10^18) K1,K2,......KQ. Output For each test case,first output Case #C: in a single line,C means the number of the test case which is from 1 to T. Then for each query, you should output a single line contains the Ki-th smallest number in them, if there are less than Ki different numbers, output -1. Sample input 1 2 3 4 5 6 7 8 9 2 2 1 2 4 1 2 3 4 3 1 2 3 5 1 2 3 4 5 Sample output Case #1: 1 2 3 4 1 2 3 -1 Case #2: 1 2 3 4 5 0 1 2 3 -1 \u9898\u610f\uff1a\u7ed9\u51fan\u4e2a\u6570\uff0c\u6c42\u4ed6\u4eec\u4efb\u610f\u7ec4\u5408\u7684\u6700\u5c0f\u503c \u601d\u8def\uff1a\u6c42\u51fa\u8fd9\u4e9b\u6570\u7684\u7ebf\u6027\u57fa\uff0c\u5c06k\u4e8c\u8fdb\u5236\u62c6\u5206\uff0c\u7b2ci\u4f4d\u4e3a1\uff0c\u7b54\u6848\u5c31\u5f02\u6216\u7b2ci\u4e2a\u7ebf\u6027\u57fa\uff0c\u82e5\u7ebf\u6027\u57fa\u4e2a\u6570\u5c0f\u4e8e\u539f\u4e2a\u6570\uff0c\u5373\u6700\u5c0f\u503c\u53ef\u4e3a0\uff0c\u5219\u7528\u7c7b\u4f3c\u65b9\u6cd5\u6c42k-1\u5c0f\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 #include <bits/stdc++.h> using namespace std ; typedef long long ll ; ll p [ 65 ]; //\u5b58\u50a8\u7ebf\u6027\u57fa ll np [ 65 ]; //\u5b58\u50a8\u6700\u7b80\u7ebf\u6027\u57fa ll num [ 10005 ]; //\u5b58\u50a8\u539f\u6570\u7ec4 int n ; int k ; void init () //\u6c42\u975e\u6700\u7b80\u7ebf\u6027\u57fa { for ( int i = 1 ; i <= n ; i ++ ) //1-n\u904d\u5386\u6570\u7ec4\u5143\u7d20 { ll x = num [ i ]; for ( int j = 63 ; j >= 0 ; j -- ) //\u8003\u5bdf\u5143\u7d20\u7684\u6bcf\u4e00\u4f4d { if ( x & ( 1L L << j )) //\u5982\u679c\u5143\u7d20\u7684\u7b2cj\u4f4d\u4e3a1 { if ( p [ j ]) x ^= p [ j ]; //\u5728\u7ebf\u6027\u57fa\u4e2d\u5df2\u7ecf\u51fa\u73b0\u7b2cj\u4f4d\u4e3a1\u65f6\uff0c\u6d88\u53bb\u5f53\u524d\u5143\u7d20\u76841\uff0c\u4fdd\u8bc1\u4e3a\u4e0b\u4e09\u89d2\u5f62\u5f0f //\u5316\u4e3a\u4e0b\u4e09\u89d2\u662f\u4e3a\u4e86\u66f4\u5bb9\u6613\u5f02\u6216\u5f97\u51fa\u67d0\u6570 else { p [ j ] = x ; //\u5426\u5219\u5c06\u7b2cj\u4f4d\u5143\u7d20\u7f6e1 break ; } } } } return ; } int ninit () //\u6c42\u6700\u7b80\u7ebf\u6027\u57fa \u5316\u4e3a\u5bf9\u89d2\u77e9\u9635 { int cnt = 0 ; for ( int i = 0 ; i <= 63 ; i ++ ) //\u4ece\u53f3\u4e0b\u89d2\u5f00\u59cb { for ( int j = i -1 ; j >= 0 ; j -- ) //\u4ece\u5de6\u5f80\u53f3\u904d\u5386 { if ( p [ i ] & ( 1L L << j )) p [ i ] ^= p [ j ]; //\u5982\u679cp[i]\u5728\u9664\u7b2ci\u4f4d\u4e3a1\u5916\u6709\u7b2cj\u4f4d\u4e3a1\uff0c\u9ad8\u65af\u6d88\u5143\u6d88\u53bb\u7b2cj\u4f4d\u76841 //\u7531\u4e8ep[j]\u7684\u7b2cj\u4f4d\u5fc5\u4e3a1\uff0c\u56e0\u6b64\u4e0ep[J]\u5f02\u6216 } } for ( int i = 0 ; i <= 63 ; i ++ ) if ( p [ i ]) { np [ cnt ++ ] = p [ i ]; //\u5c06\u6700\u7b80\u7684\u7ebf\u6027\u57fa\u5b58\u5165\u65b0\u6570\u7ec4\u4e2d } return cnt ; } ll kth ( ll k , int z ) //\u67e5\u8be2\u5f02\u6216\u548c\u7b2ck\u5c0f\u7684\u51fd\u6570 { ll ans = 0 ; for ( int i = 0 ; i <= 62 ; i ++ ) //\u5c06k\u7528\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u9010\u4e00\u641c\u7d22\u5b83\u7684\u6bcf\u4e00\u4f4d\uff0c\u82e5\u7b2cj\u4f4d\u4e3a1\uff0c\u5219\u5c06\u7b54\u6848\u5f02p[j] { if ( k & ( 1L L << i )) ans ^= np [ i ]; } return ans ; } ll q [ 10005 ]; int main () { int t ; cin >> t ; int command ; int now = 0 ; while ( t -- ) { now ++ ; memset ( p , 0 , sizeof ( p )); memset ( num , 0 , sizeof ( num )); memset ( np , 0 , sizeof ( np )); cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> num [ i ]; cin >> command ; init (); k = ninit (); for ( int i = 1 ; i <= command ; i ++ ) cin >> q [ i ]; cout << \"Case #\" << now << \":\" << endl ; for ( int i = 1 ; i <= command ; i ++ ) { if ( k < n && q [ i ] == 1 ) { cout << \"0\" << endl ; continue ; } if ( k < n ) q [ i ] -- ; //\u6709\u91cd\u590d\u7684\uff0c\u5f02\u6216\u548c\u6700\u5c0f\u4e3a0\uff0c\u7531\u4e8e\u7ebf\u6027\u57fa\u65e0\u6cd5\u7ec4\u5408\u51fa0\uff0c\u56e0\u6b64\u5148\u51cf if ( q [ i ] >= ( 1L L << k )) //\u5982\u679c\u67e5\u8be2\u7684\u4f4d\u6b21\u6bd4\u6240\u6709\u7684\u7ec4\u5408\u90fd\u8981\u591a\uff0c\u5219\u8f93\u51fa-1 { cout << \"-1\" << endl ; continue ; } cout << kth ( q [ i ], k ) << endl ; } } return 0 ; } \u4f8b2.\u6d1b\u8c37P3812 \u7ebf\u6027\u57fa \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a n\u4e2a\u6574\u6570\uff08\u6570\u5b57\u53ef\u80fd\u91cd\u590d\uff09\uff0c\u6c42\u5728\u8fd9\u4e9b\u6570\u4e2d\u9009\u53d6\u4efb\u610f\u4e2a\uff0c\u4f7f\u5f97\u4ed6\u4eec\u7684\u5f02\u6216\u548c\u6700\u5927\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u4e00\u4e2a\u6570n\uff0c\u8868\u793a\u5143\u7d20\u4e2a\u6570 \u63a5\u4e0b\u6765\u4e00\u884cn\u4e2a\u6570 \u8f93\u51fa\u683c\u5f0f \u4ec5\u4e00\u884c\uff0c\u8868\u793a\u7b54\u6848\u3002 \u8f93\u5165\u6837\u4f8b 1 2 2 1 1 \u8f93\u51fa\u6837\u4f8b 1 1 \u601d\u8def\uff1a\u904d\u5386\u7ebf\u6027\u57fa\uff0c\u6bcf\u6b21\u5f02\u6216\u9ad8\u4f4d\u4e3a1\u7684\u7ebf\u6027\u57fa\u5143\u7d20 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #include <bits/stdc++.h> using namespace std ; typedef long long ll ; ll mp [ 65 ]; ll p [ 65 ]; ll np [ 65 ]; int n ; void init () //\u6c42\u975e\u6700\u7b80\u7ebf\u6027\u57fa\uff08\u4e0b\u4e09\u89d2\uff09 { memset ( p , 0 , sizeof ( p )); memset ( np , 0 , sizeof ( np )); for ( int i = 1 ; i <= n ; i ++ ) //\u904d\u5386\u6570\u7ec4 { ll x = mp [ i ]; for ( int j = 62 ; j >= 0 ; j -- ) //\u904d\u5386\u5143\u7d20\u6bcf\u4e00\u4f4d { if ( x & ( 1L L << j )) //\u82e5\u5143\u7d20\u7b2cj\u4f4d\u4e3a1 { if ( ! p [ j ]) //\u5e76\u4e14\u7ebf\u6027\u57fa\u4e2d\u65e0\u5bf9\u5e94\u7684\u503c { p [ j ] = x ; //\u52a0\u5165\u5143\u7d20 break ; } else x ^= p [ j ]; //\u5426\u5219\u6d88\u53bb\u7b2cj\u4f4d\u76841 } } } } int main () { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> mp [ i ]; init (); ll ans = 0 ; for ( int i = 62 ; i >= 0 ; i -- ) //\u6c42\u6700\u5927\u503c\u8d2a\u5fc3 { if (( ans ^ p [ i ]) > ans ) ans ^= p [ i ]; } cout << ans << endl ; return 0 ; } \u4f8b3.\u6d1b\u8c37P4570[BJWC2011]\u5143\u7d20 \u9898\u76ee\u63cf\u8ff0 \u76f8\u4f20\uff0c\u5728\u8fdc\u53e4\u65f6\u671f\uff0c\u4f4d\u4e8e\u897f\u65b9\u5927\u9646\u7684 Magic Land \u4e0a\uff0c\u4eba\u4eec\u5df2\u7ecf\u638c\u63e1\u4e86\u7528\u9b54\u6cd5\u77ff\u77f3\u70bc\u5236\u6cd5\u6756\u7684\u6280\u672f\u3002\u90a3\u65f6\u4eba\u4eec\u5c31\u8ba4\u8bc6\u5230\uff0c\u4e00\u4e2a\u6cd5\u6756\u7684\u6cd5\u529b\u53d6\u51b3\u4e8e\u4f7f\u7528\u7684\u77ff\u77f3\u3002 \u4e00\u822c\u5730\uff0c\u77ff\u77f3\u8d8a\u591a\u5219\u6cd5\u529b\u8d8a\u5f3a\uff0c\u4f46\u7269\u6781\u5fc5\u53cd\uff1a\u6709\u65f6\uff0c\u4eba\u4eec\u4e3a\u4e86\u83b7\u53d6\u66f4\u5f3a\u7684\u6cd5\u529b\u800c\u4f7f\u7528\u4e86\u5f88\u591a\u77ff\u77f3\uff0c\u5374\u5728\u70bc\u5236\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u9b54\u6cd5\u77ff\u77f3\u5168\u90e8\u6d88\u5931\u4e86\uff0c\u4ece\u800c\u65e0\u6cd5\u70bc\u5236\u51fa\u6cd5\u6756\uff0c\u8fd9\u4e2a\u73b0\u8c61\u88ab\u79f0\u4e3a\u201c\u9b54\u6cd5\u62b5\u6d88\u201d\u3002\u7279\u522b\u5730\uff0c\u5982\u679c\u5728\u70bc\u5236\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u8d85\u8fc7\u4e00\u5757\u540c\u4e00\u79cd\u77ff\u77f3\uff0c\u90a3\u4e48\u4e00\u5b9a\u4f1a\u53d1\u751f\u201c\u9b54\u6cd5\u62b5\u6d88\u201d\u3002\u540e\u6765\uff0c\u968f\u7740\u4eba\u4eec\u8ba4\u77e5\u6c34\u5e73\u7684\u63d0\u9ad8\uff0c\u8fd9\u4e2a\u73b0\u8c61\u5f97\u5230\u4e86\u5f88\u597d\u7684\u89e3\u91ca\u3002\u7ecf\u8fc7\u4e86\u5927\u91cf\u7684\u5b9e\u9a8c\u540e\uff0c\u8457\u540d\u6cd5\u5e08 Dmitri \u53d1\u73b0\uff1a\u5982\u679c\u7ed9\u73b0\u5728\u53d1\u73b0\u7684\u6bcf\u4e00\u79cd\u77ff\u77f3\u8fdb\u884c\u5408\u7406\u7684\u7f16\u53f7\uff08\u7f16\u53f7\u4e3a\u6b63\u6574\u6570\uff0c\u79f0\u4e3a\u8be5\u77ff\u77f3\u7684\u5143\u7d20\u5e8f\u53f7\uff09\uff0c\u90a3\u4e48\uff0c\u4e00\u4e2a\u77ff\u77f3\u7ec4\u5408\u4f1a\u4ea7\u751f\u201c\u9b54\u6cd5\u62b5\u6d88\u201d\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a\u975e\u7a7a\u5b50\u96c6\uff0c\u90a3\u4e9b\u77ff\u77f3\u7684\u5143\u7d20\u5e8f\u53f7\u6309\u4f4d\u5f02\u6216\u8d77\u6765\u4e3a\u96f6\uff08\u5982\u679c\u4f60\u4e0d\u6e05\u695a\u4ec0\u4e48\u662f\u5f02\u6216\uff0c\u8bf7\u53c2\u89c1\u4e0b\u4e00\u9875\u7684\u540d\u8bcd\u89e3\u91ca \uff09\u3002 \u4f8b\u5982\uff0c\u4f7f\u7528\u4e24\u4e2a\u540c\u6837\u7684\u77ff\u77f3\u5fc5\u5c06\u53d1\u751f\u201c\u9b54\u6cd5\u62b5\u6d88\u201d\uff0c\u56e0\u4e3a\u8fd9\u4e24\u79cd\u77ff\u77f3\u7684\u5143\u7d20\u5e8f\u53f7\u76f8\u540c\uff0c\u5f02\u6216\u8d77\u6765\u4e3a\u96f6\u3002\u5e76\u4e14\u4eba\u4eec\u6709\u4e86\u6d4b\u5b9a\u9b54\u529b\u7684\u6709\u6548\u9014\u5f84\uff0c\u5df2\u7ecf\u77e5\u9053\u4e86\uff1a\u5408\u6210\u51fa\u6765\u7684\u6cd5\u6756\u7684\u9b54\u529b\u7b49\u4e8e\u6bcf\u4e00\u79cd\u77ff\u77f3\u7684\u6cd5\u529b\u4e4b\u548c\u3002\u4eba\u4eec\u5df2\u7ecf\u6d4b\u5b9a\u4e86\u73b0\u4eca\u53d1\u73b0\u7684\u6240\u6709\u77ff\u77f3\u7684\u6cd5\u529b\u503c\uff0c\u5e76\u4e14\u901a\u8fc7\u5b9e\u9a8c\u63a8\u7b97\u51fa\u6bcf\u4e00\u79cd\u77ff\u77f3\u7684\u5143\u7d20\u5e8f\u53f7\u3002 \u73b0\u5728\uff0c\u7ed9\u5b9a\u4f60\u4ee5\u4e0a\u7684\u77ff\u77f3\u4fe1\u606f\uff0c\u8bf7\u4f60\u6765\u8ba1\u7b97\u4e00\u4e0b\u5f53\u65f6\u53ef\u4ee5\u70bc\u5236\u51fa\u7684\u6cd5\u6756\u6700\u591a\u6709\u591a\u5927\u7684\u9b54\u529b\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6b63\u6574\u6570 NN\uff0c\u8868\u793a\u77ff\u77f3\u7684\u79cd\u7c7b\u6570\u3002 \u63a5\u4e0b\u6765 N\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6b63\u6574\u6570Numberi \u548c Magici\uff0c\u8868\u793a\u8fd9\u79cd\u77ff\u77f3\u7684\u5143\u7d20\u5e8f\u53f7\u548c\u9b54\u529b\u503c\u3002 \u8f93\u51fa\u683c\u5f0f \u4ec5\u5305\u542b\u4e00\u884c\uff0c\u4e00\u4e2a\u6574\u6570\u4ee3\u8868\u6700\u5927\u7684\u9b54\u529b\u503c\u3002 \u8f93\u5165\u6837\u4f8b 1 2 3 4 3 1 10 2 20 3 30 \u8f93\u51fa\u6837\u4f8b 1 50 \u601d\u8def\uff1a\u7531\u4e8e\u7ebf\u6027\u57fa\u4e0d\u552f\u4e00\uff0c\u672c\u9898\u8981\u6c42\u6700\u5927\u9b54\u529b\u503c\uff0c\u53ef\u4f18\u5148\u9009\u9b54\u529b\u503c\u5927\u7684\u503c\u751f\u6210\u7ebf\u6027\u57fa\uff0c\u8d2a\u5fc3\u5373\u53ef \u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 #include <bits/stdc++.h> using namespace std ; typedef long long ll ; struct node { ll val , magic ; friend bool operator < ( const node x , const node y ) { return x . magic > y . magic ; } } mp [ 1005 ]; ll p [ 65 ]; int init ( int n ) { ll ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { ll x = mp [ i ]. val ; for ( int j = 62 ; j >= 0 ; j -- ) { if ( x & ( 1L L << j )) { if ( ! p [ j ]) { p [ j ] = x ; ans += mp [ i ]. magic ; break ; } else x ^= p [ j ]; } } } return ans ; } int main () { int n ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> mp [ i ]. val >> mp [ i ]. magic ; } sort ( mp + 1 , mp + n + 1 ); ll ans = init ( n ); cout << ans << endl ; return 0 ; } \u4f8b4.\u6d1b\u8c37P3265 \u88c5\u5907\u8d2d\u4e70 \u9898\u76ee\u63cf\u8ff0 \u6709n\u4ef6\u88c5\u5907\uff0c\u6bcf\u4ef6\u88c5\u5907\u6709m\u4e2a\u5c5e\u6027\uff0c\u7528\u5411\u91cf\uff08a1\uff0ca2\uff0ca3\u2026\u2026am\uff09\u8868\u793a\uff0c\u9700\u8981\u82b1\u8d39c\u8d2d\u4e70\uff0c\u73b0\u5728\u89c4\u5b9a\u5982\u679c\u4e00\u4ef6\u88c5\u5907\u80fd\u7531\u5176\u4ed6\u88c5\u5907\u7ec4\u5408\u51fa\uff0c\u90a3\u4e48\u5c31\u4e0d\u9700\u8981\u8d2d\u4e70\uff08\u5373\u53ef\u7531\u5176\u4ed6\u5411\u91cf\u7ebf\u6027\u8868\u793a\uff09\uff0c\u6c42\u5728\u4e70\u4e0b\u6700\u591a\u88c5\u5907\u7684\u60c5\u51b5\u4e0b\u82b1\u8d39\u6700\u5c11\u7684\u94b1 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u4e24\u4e2a\u6570n\uff0cm\u3002 \u63a5\u4e0b\u6765n\u884c\uff0c\u6bcf\u884cm\u4e2a\u6570\uff0c\u5176\u4e2d\u7b2ci\u884c\u63cf\u8ff0\u88c5\u5907i\u7684\u5404\u9879\u5c5e\u6027\u503c\u3002\u63a5\u4e0b\u6765\u4e00\u884cn\u4e2a\u6570\uff0c\u5176\u4e2dci\u8868\u793a\u8d2d\u4e70\u7b2ci\u4ef6\u88c5\u5907\u7684\u82b1\u8d39\u3002 \u8f93\u51fa\u683c\u5f0f \u4e00\u884c\u4e24\u4e2a\u6570\uff0c \u7b2c\u4e00\u4e2a\u6570\u8868\u793a\u80fd\u591f\u8d2d\u4e70\u7684\u6700\u591a\u88c5\u5907\u6570\u91cf\uff0c\u7b2c\u4e8c\u4e2a\u6570\u8868\u793a\u5728\u8d2d\u4e70\u6700\u591a\u6570\u91cf\u7684\u88c5\u5907\u7684\u60c5\u51b5\u4e0b\u7684\u6700\u5c0f\u82b1\u8d39 \u8f93\u5165\u6837\u4f8b 1 2 3 4 5 3 3 1 2 3 3 4 5 2 3 4 1 1 2 \u8f93\u51fa\u6837\u4f8b 1 2 2 \u601d\u8def\uff1a\u5b9e\u6570\u7ebf\u6027\u57fa+\u8d2a\u5fc3 \u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 #include <bits/stdc++.h> using namespace std ; typedef long long ll ; const double eps = 1e-6 ; int n , m ; int p [ 505 ]; struct node_ { double mp [ 505 ]; int c ; friend bool operator < ( const node_ x , const node_ y ) { return x . c < y . c ; } } node [ 505 ]; int cnt = 0 ; int ans = 0 ; void init () { for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= m ; j ++ ) { if ( fabs ( node [ i ]. mp [ j ]) > eps ) //\u5361\u7cbe\u5ea6 { if ( ! p [ j ]) { cnt ++ ; ans += node [ i ]. c ; p [ j ] = i ; break ; } else { long double times = node [ i ]. mp [ j ] * 1.0 / node [ p [ j ]]. mp [ j ]; for ( int k = j ; k <= m ; k ++ ) //\u521d\u7b49\u884c\u53d8\u6362\uff0c\u5316\u4e3a\u4e0b\u4e09\u89d2 { node [ i ]. mp [ k ] -= times * node [ p [ j ]]. mp [ k ]; } } } } } } int main () { cin >> n >> m ; for ( int i = 1 ; i <= n ; i ++ ) for ( int j = 1 ; j <= m ; j ++ ) cin >> node [ i ]. mp [ j ]; for ( int i = 1 ; i <= n ; i ++ ) cin >> node [ i ]. c ; sort ( node + 1 , node + n + 1 ); memset ( p , 0 , sizeof ( p )); init (); cout << cnt << \" \" << ans << endl ; return 0 ; }","title":"\u7ebf\u6027\u57fa"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BA%BF%E6%80%A7%E5%9F%BA/#_1","text":"\u7ebf\u6027\u57fa\uff0c\u662f\u7ebf\u6027\u4ee3\u6570\u4e2d\u7684\u6982\u5ff5\uff0c\u5728\u4fe1\u606f\u5b66\u7ade\u8d5b\u4e2d\uff0c\u524d\u7f00\u7ebf\u6027\u57fa\u662f\u7ebf\u6027\u57fa\u7684\u6269\u5c55\uff0c\u4ed6\u4eec\u4e3b\u8981\u7528\u4e8e\u5904\u7406\u6709\u5173\u5f02\u6216\u548c\u7684\u6781\u503c\u95ee\u9898\u3002 \u4e00\u7ec4\u7ebf\u6027\u65e0\u5173\u7684\u5411\u91cf\u5373\u53ef\u4f5c\u4e3a\u4e00\u7ec4\u57fa\u5e95\uff0c\u5f20\u8d77\u4e00\u4e2a\u7ebf\u6027\u7684\u5411\u91cf\u7a7a\u95f4\uff0c\u8fd9\u4e2a\u57fa\u5e95\u5373\u79f0\u4e3a\u7ebf\u6027\u57fa\uff0c\u5229\u7528\u7ebf\u6027\u57fa\u7684\u57fa\u5e95\u8fdb\u884c\u7ebf\u6027\u8fd0\u7b97\uff0c\u53ef\u8868\u793a\u5411\u91cf\u7a7a\u95f4\u5185\u7684\u6240\u6709\u5411\u91cf\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6240\u6709\u5411\u91cf\u90fd\u53ef\u4ee5\u62c6\u6210\u57fa\u5e95\u7684\u7ebf\u6027\u7ec4\u5408\u3002 \u6839\u636e\u5f02\u6216\u7684\u539f\u7406\uff0c\u5c06\u4e00\u4e2a\u6570\u5b57\u62c6\u6210\u4ed6\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\uff0c\u5c06\u4e8c\u8fdb\u5236\u5f62\u5f0f\u7528\u5411\u91cf\u6765\u8868\u793a\uff0c\u7531\u4e8e\u4e00\u7ec4\u7ebf\u6027\u65e0\u5173\u7684\u5411\u91cf\u53ef\u4ee5\u5f20\u8d77\u4e00\u4e2a\u5411\u91cf\u7a7a\u95f4\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u6784\u9020\u8fd9\u6837\u4e00\u7ec4\u6570\u5b57\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\u7ec4\u6210\u7684\u7ebf\u6027\u57fa\uff0c\u5728\u8fd9\u4e2a\u7ebf\u6027\u57fa\u4e2d\uff0c\u901a\u8fc7\u57fa\u5e95\u7684\u7ebf\u6027\u7ec4\u5408\u3001\u5f02\u6216\u8fd0\u7b97\uff0c\u4ece\u800c\u53ef\u4ee5\u8868\u8fbe\u6240\u6709\u7684\u5f02\u6216\u7ed3\u679c\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u82e5\u4e00\u4e2a\u6570\u96c6 T \u7684\u503c\u57df\u8303\u56f4\u4e3a \uff0c\u90a3\u4e48 T \u7684\u7ebf\u6027\u57fa\u662f T \u7684\u4e00\u4e2a\u5b50\u96c6 A={a1,a2,a3,...,an}\uff0cA \u4e2d\u5143\u7d20\u76f8\u4e92\u5f02\u6216\u800c\u6210\u7684\u96c6\u5408\uff0c\u7b49\u4ef7\u4e8e\u539f\u6570\u96c6 T \u7684\u5143\u7d20\u76f8\u4e92\u5f02\u6216\u5f62\u6210\u5f02\u6216\u96c6\u5408","title":"\u6982\u8ff0"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BA%BF%E6%80%A7%E5%9F%BA/#_2","text":"\u4ea4\u6362\u53d8\u91cf\u4f4d\u7f6e\uff1a a = a ^ b; b = a ^ b; a = a ^ b; \u5982\u679ca^b==c \u5219a^c==b b^c==a a^b^c==0","title":"\u9884\u5907\u77e5\u8bc6"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BA%BF%E6%80%A7%E5%9F%BA/#_3","text":"\u7ebf\u6027\u57fa\u662f\u4e00\u4e2a\u6570\u7684\u96c6\u5408\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5e8f\u5217\u90fd\u62e5\u6709\u81f3\u5c11\u4e00\u4e2a\u7ebf\u6027\u57fa\uff0c\u53d6\u7ebf\u6027\u57fa\u4e2d\u82e5\u5e72\u4e2a\u6570\u5f02\u6216\u8d77\u6765\u53ef\u4ee5\u5f97\u5230\u539f\u5e8f\u5217\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6570\u3002","title":"\u5b9a\u4e49"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BA%BF%E6%80%A7%E5%9F%BA/#_4","text":"\u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 void init () //\u6c42\u975e\u6700\u7b80\u7ebf\u6027\u57fa { for ( int i = 1 ; i <= n ; i ++ ) //1-n\u904d\u5386\u6570\u7ec4\u5143\u7d20 { ll x = num [ i ]; for ( int j = 63 ; j >= 0 ; j -- ) //\u8003\u5bdf\u5143\u7d20\u7684\u6bcf\u4e00\u4f4d { if ( x & ( 1L L << j )) //\u5982\u679c\u5143\u7d20\u7684\u7b2cj\u4f4d\u4e3a1 { if ( p [ j ]) x ^= p [ j ]; //\u5728\u7ebf\u6027\u57fa\u4e2d\u5df2\u7ecf\u51fa\u73b0\u7b2cj\u4f4d\u4e3a1\u65f6\uff0c\u6d88\u53bb\u5f53\u524d\u5143\u7d20//\u76841\uff0c\u4fdd\u8bc1\u4e3a\u4e0b\u4e09\u89d2\u5f62\u5f0f,\u5316\u4e3a\u4e0b\u4e09\u89d2\u662f\u4e3a\u4e86\u66f4\u5bb9\u6613\u5f02//\u6216\u5f97\u51fa\u67d0\u6570 else { p [ j ] = x ; //\u5426\u5219\u5c06\u7b2cj\u4f4d\u5143\u7d20\u7f6e1 break ; } } } } return ; }","title":"\u4e8c\u8fdb\u5236\u6c42\u7ebf\u6027\u57fa"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BA%BF%E6%80%A7%E5%9F%BA/#_5","text":"\u601d\u8def\uff1a\u5c06\u8be5\u6570\u901a\u8fc7\u7ebf\u6027\u57fa\uff0c\u770b\u7ed3\u679c\u662f\u5426\u4e3a0\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 bool check ( long long x ) { for ( int j = 60 ; j >= 0 ; j -- ) { if ( x & ( 1L L << j )) { if ( d [ j ] == 0 ) { return false ; } else x ^= d [ j ]; } } return x == 0 ; }","title":"\u5224\u65ad\u67d0\u6570\u80fd\u5426\u7531\u7ebf\u6027\u57fa\u8868\u793a"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BA%BF%E6%80%A7%E5%9F%BA/#_6","text":"\u601d\u8def\uff1a\u6c42\u51fa\u7ebf\u6027\u57fa\uff0c\u7531\u4e8e\u9ad8\u4f4d\u4e3a1\u8d21\u732e\u66f4\u5927\uff0c\u6bcf\u6b21\u4f18\u5148\u5f02\u6216\u9ad8\u4f4d\uff0c\u904d\u5386\u7ebf\u6027\u57fa\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 long long query_max () { long long ret = 0 ; for ( int i = 60 ; i >= 0 ; i -- ) if (( ret ^ d [ i ]) > ret ) //\u8d2a\u5fc3 ret ^= d [ i ]; return ret ; }","title":"\u6c42\u5f02\u6216\u548c\u6700\u5927"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BA%BF%E6%80%A7%E5%9F%BA/#_7","text":"\u601d\u8def\uff1a\u6c42\u6700\u5c0f\u7684\u7ebf\u6027\u57fa\u5143\u7d20\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 long long query_min () { for ( int i = 0 ; i <= 60 ; i ++ ) if ( d [ i ]) return d [ i ]; return 0 ; }","title":"\u6c42\u5f02\u6216\u548c\u6700\u5c0f"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BA%BF%E6%80%A7%E5%9F%BA/#k","text":"\u601d\u8def\uff1a\u5c06\u7ebf\u6027\u57fa\u5316\u4e3a\u6700\u7b80\uff0cK\u7528\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u9009\u51fa1\u7684\u4f4d\uff0c\u5c06\u4ee5\u5176\u4e3a\u4e0b\u6807\u7684\u7ebf\u6027\u57fa\u5143\u7d20\u76f8\u4e58\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 void rebuild () //\u9ad8\u65af\u6d88\u5143\u5316\u4e3a\u6700\u7b80\u7ebf\u6027\u57fa { for ( int i = 60 ; i >= 0 ; i -- ) for ( int j = i -1 ; j >= 0 ; j -- ) if ( d [ i ] & ( 1L L << j )) d [ i ] ^= d [ j ]; for ( int i = 0 ; i <= 60 ; i ++ ) if ( d [ i ]) p [ cnt ++ ] = d [ i ]; } long long kthquery ( long long k ) { int ret = 0 ; if ( k >= ( 1L L << cnt )) return -1 ; for ( int i = 60 ; i >= 0 ; i -- ) if ( k & ( 1L L << i )) ret ^= p [ i ]; return ret ; }","title":"\u6c42\u5f02\u6216\u548c\u7b2cK\u5927"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BA%BF%E6%80%A7%E5%9F%BA/#_8","text":"","title":"\u7ecf\u5178\u4f8b\u9898"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BA%BF%E6%80%A7%E5%9F%BA/#1hdu-3949-xor","text":"Problem Description XOR is a kind of bit operator, we define that as follow: for two binary base number A and B, let C=A XOR B, then for each bit of C, we can get its value by check the digit of corresponding position in A and B. And for each digit, 1 XOR 1 = 0, 1 XOR 0 = 1, 0 XOR 1 = 1, 0 XOR 0 = 0. And we simply write this operator as ^, like 3 ^ 1 = 2,4 ^ 3 = 7. XOR is an amazing operator and this is a question about XOR. We can choose several numbers and do XOR operatorion to them one by one, then we get another number. For example, if we choose 2,3 and 4, we can get 2^3^4=5. Now, you are given N numbers, and you can choose some of them(even a single number) to do XOR on them, and you can get many different numbers. Now I want you tell me which number is the K-th smallest number among them. Input First line of the input is a single integer T(T<=30), indicates there are T test cases. For each test case, the first line is an integer N(1<=N<=10000), the number of numbers below. The second line contains N integers (each number is between 1 and 10^18). The third line is a number Q(1<=Q<=10000), the number of queries. The fourth line contains Q numbers(each number is between 1 and 10^18) K1,K2,......KQ. Output For each test case,first output Case #C: in a single line,C means the number of the test case which is from 1 to T. Then for each query, you should output a single line contains the Ki-th smallest number in them, if there are less than Ki different numbers, output -1. Sample input 1 2 3 4 5 6 7 8 9 2 2 1 2 4 1 2 3 4 3 1 2 3 5 1 2 3 4 5 Sample output Case #1: 1 2 3 4 1 2 3 -1 Case #2: 1 2 3 4 5 0 1 2 3 -1 \u9898\u610f\uff1a\u7ed9\u51fan\u4e2a\u6570\uff0c\u6c42\u4ed6\u4eec\u4efb\u610f\u7ec4\u5408\u7684\u6700\u5c0f\u503c \u601d\u8def\uff1a\u6c42\u51fa\u8fd9\u4e9b\u6570\u7684\u7ebf\u6027\u57fa\uff0c\u5c06k\u4e8c\u8fdb\u5236\u62c6\u5206\uff0c\u7b2ci\u4f4d\u4e3a1\uff0c\u7b54\u6848\u5c31\u5f02\u6216\u7b2ci\u4e2a\u7ebf\u6027\u57fa\uff0c\u82e5\u7ebf\u6027\u57fa\u4e2a\u6570\u5c0f\u4e8e\u539f\u4e2a\u6570\uff0c\u5373\u6700\u5c0f\u503c\u53ef\u4e3a0\uff0c\u5219\u7528\u7c7b\u4f3c\u65b9\u6cd5\u6c42k-1\u5c0f\u5373\u53ef \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 #include <bits/stdc++.h> using namespace std ; typedef long long ll ; ll p [ 65 ]; //\u5b58\u50a8\u7ebf\u6027\u57fa ll np [ 65 ]; //\u5b58\u50a8\u6700\u7b80\u7ebf\u6027\u57fa ll num [ 10005 ]; //\u5b58\u50a8\u539f\u6570\u7ec4 int n ; int k ; void init () //\u6c42\u975e\u6700\u7b80\u7ebf\u6027\u57fa { for ( int i = 1 ; i <= n ; i ++ ) //1-n\u904d\u5386\u6570\u7ec4\u5143\u7d20 { ll x = num [ i ]; for ( int j = 63 ; j >= 0 ; j -- ) //\u8003\u5bdf\u5143\u7d20\u7684\u6bcf\u4e00\u4f4d { if ( x & ( 1L L << j )) //\u5982\u679c\u5143\u7d20\u7684\u7b2cj\u4f4d\u4e3a1 { if ( p [ j ]) x ^= p [ j ]; //\u5728\u7ebf\u6027\u57fa\u4e2d\u5df2\u7ecf\u51fa\u73b0\u7b2cj\u4f4d\u4e3a1\u65f6\uff0c\u6d88\u53bb\u5f53\u524d\u5143\u7d20\u76841\uff0c\u4fdd\u8bc1\u4e3a\u4e0b\u4e09\u89d2\u5f62\u5f0f //\u5316\u4e3a\u4e0b\u4e09\u89d2\u662f\u4e3a\u4e86\u66f4\u5bb9\u6613\u5f02\u6216\u5f97\u51fa\u67d0\u6570 else { p [ j ] = x ; //\u5426\u5219\u5c06\u7b2cj\u4f4d\u5143\u7d20\u7f6e1 break ; } } } } return ; } int ninit () //\u6c42\u6700\u7b80\u7ebf\u6027\u57fa \u5316\u4e3a\u5bf9\u89d2\u77e9\u9635 { int cnt = 0 ; for ( int i = 0 ; i <= 63 ; i ++ ) //\u4ece\u53f3\u4e0b\u89d2\u5f00\u59cb { for ( int j = i -1 ; j >= 0 ; j -- ) //\u4ece\u5de6\u5f80\u53f3\u904d\u5386 { if ( p [ i ] & ( 1L L << j )) p [ i ] ^= p [ j ]; //\u5982\u679cp[i]\u5728\u9664\u7b2ci\u4f4d\u4e3a1\u5916\u6709\u7b2cj\u4f4d\u4e3a1\uff0c\u9ad8\u65af\u6d88\u5143\u6d88\u53bb\u7b2cj\u4f4d\u76841 //\u7531\u4e8ep[j]\u7684\u7b2cj\u4f4d\u5fc5\u4e3a1\uff0c\u56e0\u6b64\u4e0ep[J]\u5f02\u6216 } } for ( int i = 0 ; i <= 63 ; i ++ ) if ( p [ i ]) { np [ cnt ++ ] = p [ i ]; //\u5c06\u6700\u7b80\u7684\u7ebf\u6027\u57fa\u5b58\u5165\u65b0\u6570\u7ec4\u4e2d } return cnt ; } ll kth ( ll k , int z ) //\u67e5\u8be2\u5f02\u6216\u548c\u7b2ck\u5c0f\u7684\u51fd\u6570 { ll ans = 0 ; for ( int i = 0 ; i <= 62 ; i ++ ) //\u5c06k\u7528\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u9010\u4e00\u641c\u7d22\u5b83\u7684\u6bcf\u4e00\u4f4d\uff0c\u82e5\u7b2cj\u4f4d\u4e3a1\uff0c\u5219\u5c06\u7b54\u6848\u5f02p[j] { if ( k & ( 1L L << i )) ans ^= np [ i ]; } return ans ; } ll q [ 10005 ]; int main () { int t ; cin >> t ; int command ; int now = 0 ; while ( t -- ) { now ++ ; memset ( p , 0 , sizeof ( p )); memset ( num , 0 , sizeof ( num )); memset ( np , 0 , sizeof ( np )); cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> num [ i ]; cin >> command ; init (); k = ninit (); for ( int i = 1 ; i <= command ; i ++ ) cin >> q [ i ]; cout << \"Case #\" << now << \":\" << endl ; for ( int i = 1 ; i <= command ; i ++ ) { if ( k < n && q [ i ] == 1 ) { cout << \"0\" << endl ; continue ; } if ( k < n ) q [ i ] -- ; //\u6709\u91cd\u590d\u7684\uff0c\u5f02\u6216\u548c\u6700\u5c0f\u4e3a0\uff0c\u7531\u4e8e\u7ebf\u6027\u57fa\u65e0\u6cd5\u7ec4\u5408\u51fa0\uff0c\u56e0\u6b64\u5148\u51cf if ( q [ i ] >= ( 1L L << k )) //\u5982\u679c\u67e5\u8be2\u7684\u4f4d\u6b21\u6bd4\u6240\u6709\u7684\u7ec4\u5408\u90fd\u8981\u591a\uff0c\u5219\u8f93\u51fa-1 { cout << \"-1\" << endl ; continue ; } cout << kth ( q [ i ], k ) << endl ; } } return 0 ; }","title":"\u4f8b1.HDU 3949 XOR"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BA%BF%E6%80%A7%E5%9F%BA/#2p3812","text":"\u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a n\u4e2a\u6574\u6570\uff08\u6570\u5b57\u53ef\u80fd\u91cd\u590d\uff09\uff0c\u6c42\u5728\u8fd9\u4e9b\u6570\u4e2d\u9009\u53d6\u4efb\u610f\u4e2a\uff0c\u4f7f\u5f97\u4ed6\u4eec\u7684\u5f02\u6216\u548c\u6700\u5927\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u4e00\u4e2a\u6570n\uff0c\u8868\u793a\u5143\u7d20\u4e2a\u6570 \u63a5\u4e0b\u6765\u4e00\u884cn\u4e2a\u6570 \u8f93\u51fa\u683c\u5f0f \u4ec5\u4e00\u884c\uff0c\u8868\u793a\u7b54\u6848\u3002 \u8f93\u5165\u6837\u4f8b 1 2 2 1 1 \u8f93\u51fa\u6837\u4f8b 1 1 \u601d\u8def\uff1a\u904d\u5386\u7ebf\u6027\u57fa\uff0c\u6bcf\u6b21\u5f02\u6216\u9ad8\u4f4d\u4e3a1\u7684\u7ebf\u6027\u57fa\u5143\u7d20 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #include <bits/stdc++.h> using namespace std ; typedef long long ll ; ll mp [ 65 ]; ll p [ 65 ]; ll np [ 65 ]; int n ; void init () //\u6c42\u975e\u6700\u7b80\u7ebf\u6027\u57fa\uff08\u4e0b\u4e09\u89d2\uff09 { memset ( p , 0 , sizeof ( p )); memset ( np , 0 , sizeof ( np )); for ( int i = 1 ; i <= n ; i ++ ) //\u904d\u5386\u6570\u7ec4 { ll x = mp [ i ]; for ( int j = 62 ; j >= 0 ; j -- ) //\u904d\u5386\u5143\u7d20\u6bcf\u4e00\u4f4d { if ( x & ( 1L L << j )) //\u82e5\u5143\u7d20\u7b2cj\u4f4d\u4e3a1 { if ( ! p [ j ]) //\u5e76\u4e14\u7ebf\u6027\u57fa\u4e2d\u65e0\u5bf9\u5e94\u7684\u503c { p [ j ] = x ; //\u52a0\u5165\u5143\u7d20 break ; } else x ^= p [ j ]; //\u5426\u5219\u6d88\u53bb\u7b2cj\u4f4d\u76841 } } } } int main () { cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) cin >> mp [ i ]; init (); ll ans = 0 ; for ( int i = 62 ; i >= 0 ; i -- ) //\u6c42\u6700\u5927\u503c\u8d2a\u5fc3 { if (( ans ^ p [ i ]) > ans ) ans ^= p [ i ]; } cout << ans << endl ; return 0 ; }","title":"\u4f8b2.\u6d1b\u8c37P3812  \u7ebf\u6027\u57fa"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BA%BF%E6%80%A7%E5%9F%BA/#3p4570bjwc2011","text":"\u9898\u76ee\u63cf\u8ff0 \u76f8\u4f20\uff0c\u5728\u8fdc\u53e4\u65f6\u671f\uff0c\u4f4d\u4e8e\u897f\u65b9\u5927\u9646\u7684 Magic Land \u4e0a\uff0c\u4eba\u4eec\u5df2\u7ecf\u638c\u63e1\u4e86\u7528\u9b54\u6cd5\u77ff\u77f3\u70bc\u5236\u6cd5\u6756\u7684\u6280\u672f\u3002\u90a3\u65f6\u4eba\u4eec\u5c31\u8ba4\u8bc6\u5230\uff0c\u4e00\u4e2a\u6cd5\u6756\u7684\u6cd5\u529b\u53d6\u51b3\u4e8e\u4f7f\u7528\u7684\u77ff\u77f3\u3002 \u4e00\u822c\u5730\uff0c\u77ff\u77f3\u8d8a\u591a\u5219\u6cd5\u529b\u8d8a\u5f3a\uff0c\u4f46\u7269\u6781\u5fc5\u53cd\uff1a\u6709\u65f6\uff0c\u4eba\u4eec\u4e3a\u4e86\u83b7\u53d6\u66f4\u5f3a\u7684\u6cd5\u529b\u800c\u4f7f\u7528\u4e86\u5f88\u591a\u77ff\u77f3\uff0c\u5374\u5728\u70bc\u5236\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u9b54\u6cd5\u77ff\u77f3\u5168\u90e8\u6d88\u5931\u4e86\uff0c\u4ece\u800c\u65e0\u6cd5\u70bc\u5236\u51fa\u6cd5\u6756\uff0c\u8fd9\u4e2a\u73b0\u8c61\u88ab\u79f0\u4e3a\u201c\u9b54\u6cd5\u62b5\u6d88\u201d\u3002\u7279\u522b\u5730\uff0c\u5982\u679c\u5728\u70bc\u5236\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u8d85\u8fc7\u4e00\u5757\u540c\u4e00\u79cd\u77ff\u77f3\uff0c\u90a3\u4e48\u4e00\u5b9a\u4f1a\u53d1\u751f\u201c\u9b54\u6cd5\u62b5\u6d88\u201d\u3002\u540e\u6765\uff0c\u968f\u7740\u4eba\u4eec\u8ba4\u77e5\u6c34\u5e73\u7684\u63d0\u9ad8\uff0c\u8fd9\u4e2a\u73b0\u8c61\u5f97\u5230\u4e86\u5f88\u597d\u7684\u89e3\u91ca\u3002\u7ecf\u8fc7\u4e86\u5927\u91cf\u7684\u5b9e\u9a8c\u540e\uff0c\u8457\u540d\u6cd5\u5e08 Dmitri \u53d1\u73b0\uff1a\u5982\u679c\u7ed9\u73b0\u5728\u53d1\u73b0\u7684\u6bcf\u4e00\u79cd\u77ff\u77f3\u8fdb\u884c\u5408\u7406\u7684\u7f16\u53f7\uff08\u7f16\u53f7\u4e3a\u6b63\u6574\u6570\uff0c\u79f0\u4e3a\u8be5\u77ff\u77f3\u7684\u5143\u7d20\u5e8f\u53f7\uff09\uff0c\u90a3\u4e48\uff0c\u4e00\u4e2a\u77ff\u77f3\u7ec4\u5408\u4f1a\u4ea7\u751f\u201c\u9b54\u6cd5\u62b5\u6d88\u201d\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a\u975e\u7a7a\u5b50\u96c6\uff0c\u90a3\u4e9b\u77ff\u77f3\u7684\u5143\u7d20\u5e8f\u53f7\u6309\u4f4d\u5f02\u6216\u8d77\u6765\u4e3a\u96f6\uff08\u5982\u679c\u4f60\u4e0d\u6e05\u695a\u4ec0\u4e48\u662f\u5f02\u6216\uff0c\u8bf7\u53c2\u89c1\u4e0b\u4e00\u9875\u7684\u540d\u8bcd\u89e3\u91ca \uff09\u3002 \u4f8b\u5982\uff0c\u4f7f\u7528\u4e24\u4e2a\u540c\u6837\u7684\u77ff\u77f3\u5fc5\u5c06\u53d1\u751f\u201c\u9b54\u6cd5\u62b5\u6d88\u201d\uff0c\u56e0\u4e3a\u8fd9\u4e24\u79cd\u77ff\u77f3\u7684\u5143\u7d20\u5e8f\u53f7\u76f8\u540c\uff0c\u5f02\u6216\u8d77\u6765\u4e3a\u96f6\u3002\u5e76\u4e14\u4eba\u4eec\u6709\u4e86\u6d4b\u5b9a\u9b54\u529b\u7684\u6709\u6548\u9014\u5f84\uff0c\u5df2\u7ecf\u77e5\u9053\u4e86\uff1a\u5408\u6210\u51fa\u6765\u7684\u6cd5\u6756\u7684\u9b54\u529b\u7b49\u4e8e\u6bcf\u4e00\u79cd\u77ff\u77f3\u7684\u6cd5\u529b\u4e4b\u548c\u3002\u4eba\u4eec\u5df2\u7ecf\u6d4b\u5b9a\u4e86\u73b0\u4eca\u53d1\u73b0\u7684\u6240\u6709\u77ff\u77f3\u7684\u6cd5\u529b\u503c\uff0c\u5e76\u4e14\u901a\u8fc7\u5b9e\u9a8c\u63a8\u7b97\u51fa\u6bcf\u4e00\u79cd\u77ff\u77f3\u7684\u5143\u7d20\u5e8f\u53f7\u3002 \u73b0\u5728\uff0c\u7ed9\u5b9a\u4f60\u4ee5\u4e0a\u7684\u77ff\u77f3\u4fe1\u606f\uff0c\u8bf7\u4f60\u6765\u8ba1\u7b97\u4e00\u4e0b\u5f53\u65f6\u53ef\u4ee5\u70bc\u5236\u51fa\u7684\u6cd5\u6756\u6700\u591a\u6709\u591a\u5927\u7684\u9b54\u529b\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6b63\u6574\u6570 NN\uff0c\u8868\u793a\u77ff\u77f3\u7684\u79cd\u7c7b\u6570\u3002 \u63a5\u4e0b\u6765 N\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6b63\u6574\u6570Numberi \u548c Magici\uff0c\u8868\u793a\u8fd9\u79cd\u77ff\u77f3\u7684\u5143\u7d20\u5e8f\u53f7\u548c\u9b54\u529b\u503c\u3002 \u8f93\u51fa\u683c\u5f0f \u4ec5\u5305\u542b\u4e00\u884c\uff0c\u4e00\u4e2a\u6574\u6570\u4ee3\u8868\u6700\u5927\u7684\u9b54\u529b\u503c\u3002 \u8f93\u5165\u6837\u4f8b 1 2 3 4 3 1 10 2 20 3 30 \u8f93\u51fa\u6837\u4f8b 1 50 \u601d\u8def\uff1a\u7531\u4e8e\u7ebf\u6027\u57fa\u4e0d\u552f\u4e00\uff0c\u672c\u9898\u8981\u6c42\u6700\u5927\u9b54\u529b\u503c\uff0c\u53ef\u4f18\u5148\u9009\u9b54\u529b\u503c\u5927\u7684\u503c\u751f\u6210\u7ebf\u6027\u57fa\uff0c\u8d2a\u5fc3\u5373\u53ef \u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 #include <bits/stdc++.h> using namespace std ; typedef long long ll ; struct node { ll val , magic ; friend bool operator < ( const node x , const node y ) { return x . magic > y . magic ; } } mp [ 1005 ]; ll p [ 65 ]; int init ( int n ) { ll ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { ll x = mp [ i ]. val ; for ( int j = 62 ; j >= 0 ; j -- ) { if ( x & ( 1L L << j )) { if ( ! p [ j ]) { p [ j ] = x ; ans += mp [ i ]. magic ; break ; } else x ^= p [ j ]; } } } return ans ; } int main () { int n ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> mp [ i ]. val >> mp [ i ]. magic ; } sort ( mp + 1 , mp + n + 1 ); ll ans = init ( n ); cout << ans << endl ; return 0 ; }","title":"\u4f8b3.\u6d1b\u8c37P4570[BJWC2011]\u5143\u7d20"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BA%BF%E6%80%A7%E5%9F%BA/#4p3265","text":"\u9898\u76ee\u63cf\u8ff0 \u6709n\u4ef6\u88c5\u5907\uff0c\u6bcf\u4ef6\u88c5\u5907\u6709m\u4e2a\u5c5e\u6027\uff0c\u7528\u5411\u91cf\uff08a1\uff0ca2\uff0ca3\u2026\u2026am\uff09\u8868\u793a\uff0c\u9700\u8981\u82b1\u8d39c\u8d2d\u4e70\uff0c\u73b0\u5728\u89c4\u5b9a\u5982\u679c\u4e00\u4ef6\u88c5\u5907\u80fd\u7531\u5176\u4ed6\u88c5\u5907\u7ec4\u5408\u51fa\uff0c\u90a3\u4e48\u5c31\u4e0d\u9700\u8981\u8d2d\u4e70\uff08\u5373\u53ef\u7531\u5176\u4ed6\u5411\u91cf\u7ebf\u6027\u8868\u793a\uff09\uff0c\u6c42\u5728\u4e70\u4e0b\u6700\u591a\u88c5\u5907\u7684\u60c5\u51b5\u4e0b\u82b1\u8d39\u6700\u5c11\u7684\u94b1 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u4e24\u4e2a\u6570n\uff0cm\u3002 \u63a5\u4e0b\u6765n\u884c\uff0c\u6bcf\u884cm\u4e2a\u6570\uff0c\u5176\u4e2d\u7b2ci\u884c\u63cf\u8ff0\u88c5\u5907i\u7684\u5404\u9879\u5c5e\u6027\u503c\u3002\u63a5\u4e0b\u6765\u4e00\u884cn\u4e2a\u6570\uff0c\u5176\u4e2dci\u8868\u793a\u8d2d\u4e70\u7b2ci\u4ef6\u88c5\u5907\u7684\u82b1\u8d39\u3002 \u8f93\u51fa\u683c\u5f0f \u4e00\u884c\u4e24\u4e2a\u6570\uff0c \u7b2c\u4e00\u4e2a\u6570\u8868\u793a\u80fd\u591f\u8d2d\u4e70\u7684\u6700\u591a\u88c5\u5907\u6570\u91cf\uff0c\u7b2c\u4e8c\u4e2a\u6570\u8868\u793a\u5728\u8d2d\u4e70\u6700\u591a\u6570\u91cf\u7684\u88c5\u5907\u7684\u60c5\u51b5\u4e0b\u7684\u6700\u5c0f\u82b1\u8d39 \u8f93\u5165\u6837\u4f8b 1 2 3 4 5 3 3 1 2 3 3 4 5 2 3 4 1 1 2 \u8f93\u51fa\u6837\u4f8b 1 2 2 \u601d\u8def\uff1a\u5b9e\u6570\u7ebf\u6027\u57fa+\u8d2a\u5fc3 \u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 #include <bits/stdc++.h> using namespace std ; typedef long long ll ; const double eps = 1e-6 ; int n , m ; int p [ 505 ]; struct node_ { double mp [ 505 ]; int c ; friend bool operator < ( const node_ x , const node_ y ) { return x . c < y . c ; } } node [ 505 ]; int cnt = 0 ; int ans = 0 ; void init () { for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= m ; j ++ ) { if ( fabs ( node [ i ]. mp [ j ]) > eps ) //\u5361\u7cbe\u5ea6 { if ( ! p [ j ]) { cnt ++ ; ans += node [ i ]. c ; p [ j ] = i ; break ; } else { long double times = node [ i ]. mp [ j ] * 1.0 / node [ p [ j ]]. mp [ j ]; for ( int k = j ; k <= m ; k ++ ) //\u521d\u7b49\u884c\u53d8\u6362\uff0c\u5316\u4e3a\u4e0b\u4e09\u89d2 { node [ i ]. mp [ k ] -= times * node [ p [ j ]]. mp [ k ]; } } } } } } int main () { cin >> n >> m ; for ( int i = 1 ; i <= n ; i ++ ) for ( int j = 1 ; j <= m ; j ++ ) cin >> node [ i ]. mp [ j ]; for ( int i = 1 ; i <= n ; i ++ ) cin >> node [ i ]. c ; sort ( node + 1 , node + n + 1 ); memset ( p , 0 , sizeof ( p )); init (); cout << cnt << \" \" << ans << endl ; return 0 ; }","title":"\u4f8b4.\u6d1b\u8c37P3265 \u88c5\u5907\u8d2d\u4e70"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0/","text":"\u6982\u8ff0 \u6392\u5217\u6570 \u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\uff0c\u4efb\u53d6m(m\u2264n,n,m\u5747\u4e3a\u81ea\u7136\u6570)\u4e2a\u5143\u7d20\u6309\u7167\u4e00\u5b9a\u7684\u987a\u5e8f\u6392\u6210\u4e00\u5217\uff0c\u53eb\u505a\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fam\u4e2a\u5143\u7d20\u7684\u4e00\u4e2a\u6392\u5217\uff1b\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fam(m\u2264n)\u4e2a\u5143\u7d20\u7684\u6240\u6709\u6392\u5217\u7684\u4e2a\u6570\uff0c\u53eb\u505a\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fam\u4e2a\u5143\u7d20\u7684\u6392\u5217\u6570\uff0c\u7528\u7b26\u53f7 \\(A_n^m(\u6216\u8005\u662fP_n^m)\\) \u8868\u793a\u3002 \\(A_n^m=\\frac{n!}{(n-m)!}\\) \u7ec4\u5408\u6570 \u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\uff0c\u4efb\u53d6 m(m\u2264n)\u4e2a\u5143\u7d20\u7ec4\u6210\u4e00\u4e2a\u96c6\u5408\uff0c\u53eb\u505a\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fam\u4e2a\u5143\u7d20\u7684\u4e00\u4e2a\u7ec4\u5408\uff1b\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fam(m\u2264n)\u4e2a\u5143\u7d20\u7684\u6240\u6709\u7ec4\u5408\u7684\u4e2a\u6570\uff0c\u53eb\u505a\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fam\u4e2a\u5143\u7d20\u7684\u7ec4\u5408\u6570\u3002\u7528\u7b26\u53f7 \\(C_n^m\\) \u6765\u8868\u793a,\u7ec4\u5408\u6570\u4e5f\u5e38\u7528 \\((_m^n)\\) \u8868\u793a \\(C_n^m=\\frac{n!}{m!(n-m)!}\\) \u5404\u79cd\u6392\u5217 \uff08\u6458\u81eaoiwiki\uff09 \u4e0d\u76f8\u90bb\u7684\u6392\u5217 1-n\u8fd9n\u4e2a\u81ea\u7136\u6570\u4e2d\u9009k\u4e2a\uff0c\u8fd9k\u4e2a\u4e2d\u4efb\u4f55\u4e24\u4e2a\u6570\u90fd\u4e0d\u76f8\u90bb\u7684\u7ec4\u5408\u6709 \\((\\frac{n-k+1}{k})\\) \u9519\u4f4d\u6392\u5217 \u6211\u4eec\u628a\u9519\u4f4d\u6392\u5217\u95ee\u9898\u5177\u4f53\u5316\uff0c\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a n\u5c01\u4e0d\u540c\u7684\u4fe1\uff0c\u7f16\u53f7\u5206\u522b\u662f1,2,3,4,5\uff0c\u73b0\u5728\u8981\u628a\u8fd9\u4e94\u5c01\u4fe1\u653e\u5728\u7f16\u53f71,2,3,4,5\u7684\u4fe1\u5c01\u4e2d\uff0c\u8981\u6c42\u4fe1\u5c01\u7684\u7f16\u53f7\u4e0e\u4fe1\u7684\u7f16\u53f7\u4e0d\u4e00\u6837\u3002\u95ee\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u653e\u7f6e\u65b9\u6cd5\uff1f \u5047\u8bbe\u6211\u4eec\u8003\u8651\u5230\u7b2cn\u4e2a\u4fe1\u5c01\uff0c\u521d\u59cb\u65f6\u6211\u4eec\u6682\u65f6\u628a\u7b2cn\u5c01\u4fe1\u653e\u5728\u7b2cn\u4e2a\u4fe1\u5c01\u4e2d\uff0c\u7136\u540e\u8003\u8651\u4e24\u79cd\u60c5\u51b5\u7684\u9012\u63a8\uff1a \u524d\u9762n-1\u4e2a\u4fe1\u5c01\u5168\u90e8\u88c5\u9519\uff1b \u524d\u9762n-1\u4e2a\u4fe1\u5c01\u6709\u4e00\u4e2a\u6ca1\u6709\u88c5\u9519\u5176\u4f59\u5168\u90e8\u88c5\u9519\u3002 \u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u524d\u9762n-1\u4e2a\u4fe1\u5c01\u5168\u90e8\u88c5\u9519\uff1a\u56e0\u4e3a\u524d\u9762n-1\u4e2a\u5df2\u7ecf\u5168\u90e8\u88c5\u9519\u4e86\uff0c\u6240\u4ee5\u7b2cn\u5c01\u53ea\u9700\u8981\u4e0e\u524d\u9762\u4efb\u4e00\u4e00\u4e2a\u4f4d\u7f6e\u4ea4\u6362\u5373\u53ef\uff0c\u603b\u5171\u6709 \\(f(n-1)\u00d7(n-1)\\) \u79cd\u60c5\u51b5\u3002 \u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u524d\u9762n-1\u4e2a\u4fe1\u5c01\u6709\u4e00\u4e2a\u6ca1\u6709\u88c5\u9519\u5176\u4f59\u5168\u90e8\u88c5\u9519\uff1a\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\u7684\u76ee\u7684\u5728\u4e8e\uff0c\u82e5n-1\u4e2a\u4fe1\u5c01\u4e2d\u5982\u679c\u6709\u4e00\u4e2a\u6ca1\u88c5\u9519\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u90a3\u4e2a\u6ca1\u88c5\u9519\u7684\u4e0en\u4ea4\u6362\uff0c\u5373\u53ef\u5f97\u5230\u4e00\u4e2a\u5168\u9519\u4f4d\u6392\u5217\u60c5\u51b5\u3002 \u5176\u4ed6\u60c5\u51b5\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u901a\u8fc7\u4e00\u6b21\u64cd\u4f5c\u6765\u628a\u5b83\u53d8\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a \u7684\u9519\u6392\u3002 \u4e8e\u662f\u53ef\u5f97\u9519\u4f4d\u6392\u5217\u7684\u9012\u63a8\u5f0f\u4e3a \\(f(n)=(n-1)(f(n-1)+f(n-2))\\) \u3002 \u9519\u4f4d\u6392\u5217\u6570\u5217\u7684\u524d\u51e0\u9879\u4e3a0,1,2,9,44,265\u3002 \u5706\u6392\u5217 n\u4e2a\u4eba\u5168\u90e8\u6765\u56f4\u6210\u4e00\u5708\uff0c\u6240\u6709\u7684\u6392\u5217\u6570\u8bb0\u4e3aQ_n^n\u3002\u8003\u8651\u5176\u4e2d\u5df2\u7ecf\u6392\u597d\u7684\u4e00\u5708\uff0c\u4ece\u4e0d\u540c\u4f4d\u7f6e\u65ad\u5f00\uff0c\u53c8\u53d8\u6210\u4e0d\u540c\u7684\u961f\u5217\u3002 \u6240\u4ee5\u6709 \\(Q_n^n\u00d7n=A_n^n\u2192Q_n^n=\\frac{A_n^n}{n}=(n-1)!\\) \u90e8\u5206\u5706\u6392\u5217\u516c\u5f0f \\(Q_n^r=\\frac{A_n^r}{r}=\\frac{n!}{r\u00d7(n-r)!}\\) \u4e09\u79cd\u6c42\u7ec4\u5408\u6570\u7684\u65b9\u6cd5 a,b < 2000 \u901a\u8fc7 \\((_b^a)=(_{b-1}^a)+(_{b-1}^{a-1})\\) \u9884\u5904\u7406 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <bits/stdc++.h> using namespace std ; const int N = 2005 , mod = 1e9 + 7 ; int c [ N ][ N ]; void init ( int n , int m ) { for ( int i = 0 ; i <= n ; i ++ ) { for ( int j = 0 ; j <= i ; j ++ ) { if ( j == 0 ) c [ i ][ j ] = 1 ; else c [ i ][ j ] = ( c [ i -1 ][ j -1 ] + c [ i -1 ][ j ]) % mod ; } } } int main () { init ( 2000 , 2000 ); int n , a , b ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> a >> b ; cout << c [ a ][ b ] << endl ; } return 0 ; } a,b < 1e5 \u968f\u53d6\u968f\u7528\uff0c\u7528\u9006\u5143,\u82e5\u8be2\u95ee\u591a\u5219\u9009\u62e9\u9884\u5904\u7406\u9636\u4e58\uff0c \\(C_a^b=\\frac{fac[a]}{fac[b]*fac[a-b]}\\) \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 #include <bits/stdc++.h> #define int long long using namespace std ; const int N = 1e5 + 5 , mod = 1e9 + 7 ; int fac [ N ], infac [ N ]; int qpow ( int a , int n , int mod ) { int ans = 1 ; while ( n ) { if ( n & 1 ) ans = ans * a % mod ; a = a * a % mod ; n >>= 1 ; } return ans ; } void init () { fac [ 0 ] = 1 ; infac [ 0 ] = 1 ; for ( int i = 1 ; i < N ; i ++ ) { fac [ i ] = fac [ i -1 ] * i % mod ; infac [ i ] = infac [ i -1 ] * qpow ( i , mod -2 , mod ) % mod ; } } int C ( int a , int b ) { return fac [ a ] * infac [ b ] % mod * infac [ a - b ] % mod ; } signed main () { int n ; cin >> n ; init (); //for(int i=1;i<=100;i++) cout<<fac[i]<<\" \"<<infac[i]<<endl; for ( int i = 1 ; i <= n ; i ++ ) { int a , b ; cin >> a >> b ; cout << C ( a , b ) << endl ; } return 0 ; } a,b\u8f83\u5927\u4e14\u53d6\u6a21 \\(a\u22641e18,b\u22641e18,p\u22641e5\\) Lucas\u5b9a\u7406\uff0c\u5f53p\u4e3a\u8d28\u6570\u65f6\uff0c\u6709 \\(C_a^b=C_{a\\ mod\\ p}^{b\\ mod\\ p}\\times C_{\\frac{a}{p}}^{\\frac{b}{p}}\\) \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #include <bits/stdc++.h> #define int long long using namespace std ; int qpow ( int a , int n , int mod ) { int ans = 1 ; while ( n ) { if ( n & 1 ) ans = ans * a % mod ; a = a * a % mod ; n >>= 1 ; } return ans ; } int C ( int a , int b , int p ) { int res = 1 ; for ( int i = 1 , j = a ; i <= b ; i ++ , j -- ) { res = res * j % p * qpow ( i , p -2 , p ) % p ; } return res ; } int lucas ( int a , int b , int p ) { if ( a < b ) return 0 ; if ( a < p && b < p ) return C ( a , b , p ); else return lucas ( a % p , b % p , p ) * lucas ( a / p , b / p , p ) % p ; } signed main () { int n ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { int a , b , p ; cin >> a >> b >> p ; cout << lucas ( a , b , p ) << endl ; } return 0 ; } \u4f8b\u9898 \u4f8b1.Beautiful Numbers \u9898\u76ee\u5165\u53e3 \u601d\u8def \u5bf9\u4e8e\u6bcf\u4e2an\u4f4d\u6570\uff0c\u53ea\u9700\u8981\u5224\u65ad\u5b83\u7684\u4f4d\u6570\u548c\u662f\u5426good\u5373\u53ef\uff0c\u66b4\u529b\u679a\u4e3ea\u7684\u6570\u91cf\uff0c\u6ce8\u610f\u8fd9\u91cc\u9700\u8981\u9700\u5904\u7406\u9636\u4e58 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 #include <bits/stdc++.h> using namespace std ; #define int long long int a , b , n ; const int mod = 1e9 + 7 , N = 1e6 + 6 ;; int fac [ N ]; void init () { fac [ 0 ] = 1 ; for ( int i = 1 ; i <= 1000000 ; i ++ ) { fac [ i ] = fac [ i -1 ] * i % mod ; } } bool check ( int x , int a , int b ) { while ( x ) { if ( x % 10 != a && x % 10 != b ) return false ; x /= 10 ; } return true ; } int qpow ( int a , int n , int mod ) { int res = 1 ; while ( n ) { if ( n & 1 ) res = res * a % mod ; a = a * a % mod ; n >>= 1 ; } return res ; } int C ( int a , int b , int mod ) { return fac [ a ] * qpow ( fac [ b ], mod -2 , mod ) % mod * qpow ( fac [ a - b ], mod -2 , mod ) % mod ; } void solve () { init (); cin >> a >> b >> n ; int res = 0 ; for ( int i = 0 ; i <= n ; i ++ ) { int tmp = i * a + ( n - i ) * b ; if ( ! check ( tmp , a , b )) continue ; res += C ( n , i , mod ); res %= mod ; } cout << res << endl ; } signed main () { solve (); return 0 ; }","title":"\u7ec4\u5408\u6570"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0/#_1","text":"","title":"\u6982\u8ff0"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0/#_2","text":"\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\uff0c\u4efb\u53d6m(m\u2264n,n,m\u5747\u4e3a\u81ea\u7136\u6570)\u4e2a\u5143\u7d20\u6309\u7167\u4e00\u5b9a\u7684\u987a\u5e8f\u6392\u6210\u4e00\u5217\uff0c\u53eb\u505a\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fam\u4e2a\u5143\u7d20\u7684\u4e00\u4e2a\u6392\u5217\uff1b\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fam(m\u2264n)\u4e2a\u5143\u7d20\u7684\u6240\u6709\u6392\u5217\u7684\u4e2a\u6570\uff0c\u53eb\u505a\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fam\u4e2a\u5143\u7d20\u7684\u6392\u5217\u6570\uff0c\u7528\u7b26\u53f7 \\(A_n^m(\u6216\u8005\u662fP_n^m)\\) \u8868\u793a\u3002 \\(A_n^m=\\frac{n!}{(n-m)!}\\)","title":"\u6392\u5217\u6570"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0/#_3","text":"\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\uff0c\u4efb\u53d6 m(m\u2264n)\u4e2a\u5143\u7d20\u7ec4\u6210\u4e00\u4e2a\u96c6\u5408\uff0c\u53eb\u505a\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fam\u4e2a\u5143\u7d20\u7684\u4e00\u4e2a\u7ec4\u5408\uff1b\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fam(m\u2264n)\u4e2a\u5143\u7d20\u7684\u6240\u6709\u7ec4\u5408\u7684\u4e2a\u6570\uff0c\u53eb\u505a\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fam\u4e2a\u5143\u7d20\u7684\u7ec4\u5408\u6570\u3002\u7528\u7b26\u53f7 \\(C_n^m\\) \u6765\u8868\u793a,\u7ec4\u5408\u6570\u4e5f\u5e38\u7528 \\((_m^n)\\) \u8868\u793a \\(C_n^m=\\frac{n!}{m!(n-m)!}\\)","title":"\u7ec4\u5408\u6570"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0/#_4","text":"\uff08\u6458\u81eaoiwiki\uff09","title":"\u5404\u79cd\u6392\u5217"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0/#_5","text":"1-n\u8fd9n\u4e2a\u81ea\u7136\u6570\u4e2d\u9009k\u4e2a\uff0c\u8fd9k\u4e2a\u4e2d\u4efb\u4f55\u4e24\u4e2a\u6570\u90fd\u4e0d\u76f8\u90bb\u7684\u7ec4\u5408\u6709 \\((\\frac{n-k+1}{k})\\)","title":"\u4e0d\u76f8\u90bb\u7684\u6392\u5217"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0/#_6","text":"\u6211\u4eec\u628a\u9519\u4f4d\u6392\u5217\u95ee\u9898\u5177\u4f53\u5316\uff0c\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a n\u5c01\u4e0d\u540c\u7684\u4fe1\uff0c\u7f16\u53f7\u5206\u522b\u662f1,2,3,4,5\uff0c\u73b0\u5728\u8981\u628a\u8fd9\u4e94\u5c01\u4fe1\u653e\u5728\u7f16\u53f71,2,3,4,5\u7684\u4fe1\u5c01\u4e2d\uff0c\u8981\u6c42\u4fe1\u5c01\u7684\u7f16\u53f7\u4e0e\u4fe1\u7684\u7f16\u53f7\u4e0d\u4e00\u6837\u3002\u95ee\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u653e\u7f6e\u65b9\u6cd5\uff1f \u5047\u8bbe\u6211\u4eec\u8003\u8651\u5230\u7b2cn\u4e2a\u4fe1\u5c01\uff0c\u521d\u59cb\u65f6\u6211\u4eec\u6682\u65f6\u628a\u7b2cn\u5c01\u4fe1\u653e\u5728\u7b2cn\u4e2a\u4fe1\u5c01\u4e2d\uff0c\u7136\u540e\u8003\u8651\u4e24\u79cd\u60c5\u51b5\u7684\u9012\u63a8\uff1a \u524d\u9762n-1\u4e2a\u4fe1\u5c01\u5168\u90e8\u88c5\u9519\uff1b \u524d\u9762n-1\u4e2a\u4fe1\u5c01\u6709\u4e00\u4e2a\u6ca1\u6709\u88c5\u9519\u5176\u4f59\u5168\u90e8\u88c5\u9519\u3002 \u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u524d\u9762n-1\u4e2a\u4fe1\u5c01\u5168\u90e8\u88c5\u9519\uff1a\u56e0\u4e3a\u524d\u9762n-1\u4e2a\u5df2\u7ecf\u5168\u90e8\u88c5\u9519\u4e86\uff0c\u6240\u4ee5\u7b2cn\u5c01\u53ea\u9700\u8981\u4e0e\u524d\u9762\u4efb\u4e00\u4e00\u4e2a\u4f4d\u7f6e\u4ea4\u6362\u5373\u53ef\uff0c\u603b\u5171\u6709 \\(f(n-1)\u00d7(n-1)\\) \u79cd\u60c5\u51b5\u3002 \u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u524d\u9762n-1\u4e2a\u4fe1\u5c01\u6709\u4e00\u4e2a\u6ca1\u6709\u88c5\u9519\u5176\u4f59\u5168\u90e8\u88c5\u9519\uff1a\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\u7684\u76ee\u7684\u5728\u4e8e\uff0c\u82e5n-1\u4e2a\u4fe1\u5c01\u4e2d\u5982\u679c\u6709\u4e00\u4e2a\u6ca1\u88c5\u9519\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u90a3\u4e2a\u6ca1\u88c5\u9519\u7684\u4e0en\u4ea4\u6362\uff0c\u5373\u53ef\u5f97\u5230\u4e00\u4e2a\u5168\u9519\u4f4d\u6392\u5217\u60c5\u51b5\u3002 \u5176\u4ed6\u60c5\u51b5\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u901a\u8fc7\u4e00\u6b21\u64cd\u4f5c\u6765\u628a\u5b83\u53d8\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a \u7684\u9519\u6392\u3002 \u4e8e\u662f\u53ef\u5f97\u9519\u4f4d\u6392\u5217\u7684\u9012\u63a8\u5f0f\u4e3a \\(f(n)=(n-1)(f(n-1)+f(n-2))\\) \u3002 \u9519\u4f4d\u6392\u5217\u6570\u5217\u7684\u524d\u51e0\u9879\u4e3a0,1,2,9,44,265\u3002","title":"\u9519\u4f4d\u6392\u5217"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0/#_7","text":"n\u4e2a\u4eba\u5168\u90e8\u6765\u56f4\u6210\u4e00\u5708\uff0c\u6240\u6709\u7684\u6392\u5217\u6570\u8bb0\u4e3aQ_n^n\u3002\u8003\u8651\u5176\u4e2d\u5df2\u7ecf\u6392\u597d\u7684\u4e00\u5708\uff0c\u4ece\u4e0d\u540c\u4f4d\u7f6e\u65ad\u5f00\uff0c\u53c8\u53d8\u6210\u4e0d\u540c\u7684\u961f\u5217\u3002 \u6240\u4ee5\u6709 \\(Q_n^n\u00d7n=A_n^n\u2192Q_n^n=\\frac{A_n^n}{n}=(n-1)!\\) \u90e8\u5206\u5706\u6392\u5217\u516c\u5f0f \\(Q_n^r=\\frac{A_n^r}{r}=\\frac{n!}{r\u00d7(n-r)!}\\)","title":"\u5706\u6392\u5217"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0/#_8","text":"","title":"\u4e09\u79cd\u6c42\u7ec4\u5408\u6570\u7684\u65b9\u6cd5"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0/#ab-2000","text":"\u901a\u8fc7 \\((_b^a)=(_{b-1}^a)+(_{b-1}^{a-1})\\) \u9884\u5904\u7406 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <bits/stdc++.h> using namespace std ; const int N = 2005 , mod = 1e9 + 7 ; int c [ N ][ N ]; void init ( int n , int m ) { for ( int i = 0 ; i <= n ; i ++ ) { for ( int j = 0 ; j <= i ; j ++ ) { if ( j == 0 ) c [ i ][ j ] = 1 ; else c [ i ][ j ] = ( c [ i -1 ][ j -1 ] + c [ i -1 ][ j ]) % mod ; } } } int main () { init ( 2000 , 2000 ); int n , a , b ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { cin >> a >> b ; cout << c [ a ][ b ] << endl ; } return 0 ; }","title":"a,b &lt; 2000"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0/#ab-1e5","text":"\u968f\u53d6\u968f\u7528\uff0c\u7528\u9006\u5143,\u82e5\u8be2\u95ee\u591a\u5219\u9009\u62e9\u9884\u5904\u7406\u9636\u4e58\uff0c \\(C_a^b=\\frac{fac[a]}{fac[b]*fac[a-b]}\\) \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 #include <bits/stdc++.h> #define int long long using namespace std ; const int N = 1e5 + 5 , mod = 1e9 + 7 ; int fac [ N ], infac [ N ]; int qpow ( int a , int n , int mod ) { int ans = 1 ; while ( n ) { if ( n & 1 ) ans = ans * a % mod ; a = a * a % mod ; n >>= 1 ; } return ans ; } void init () { fac [ 0 ] = 1 ; infac [ 0 ] = 1 ; for ( int i = 1 ; i < N ; i ++ ) { fac [ i ] = fac [ i -1 ] * i % mod ; infac [ i ] = infac [ i -1 ] * qpow ( i , mod -2 , mod ) % mod ; } } int C ( int a , int b ) { return fac [ a ] * infac [ b ] % mod * infac [ a - b ] % mod ; } signed main () { int n ; cin >> n ; init (); //for(int i=1;i<=100;i++) cout<<fac[i]<<\" \"<<infac[i]<<endl; for ( int i = 1 ; i <= n ; i ++ ) { int a , b ; cin >> a >> b ; cout << C ( a , b ) << endl ; } return 0 ; }","title":"a,b &lt; 1e5"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0/#ab","text":"\\(a\u22641e18,b\u22641e18,p\u22641e5\\) Lucas\u5b9a\u7406\uff0c\u5f53p\u4e3a\u8d28\u6570\u65f6\uff0c\u6709 \\(C_a^b=C_{a\\ mod\\ p}^{b\\ mod\\ p}\\times C_{\\frac{a}{p}}^{\\frac{b}{p}}\\) \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #include <bits/stdc++.h> #define int long long using namespace std ; int qpow ( int a , int n , int mod ) { int ans = 1 ; while ( n ) { if ( n & 1 ) ans = ans * a % mod ; a = a * a % mod ; n >>= 1 ; } return ans ; } int C ( int a , int b , int p ) { int res = 1 ; for ( int i = 1 , j = a ; i <= b ; i ++ , j -- ) { res = res * j % p * qpow ( i , p -2 , p ) % p ; } return res ; } int lucas ( int a , int b , int p ) { if ( a < b ) return 0 ; if ( a < p && b < p ) return C ( a , b , p ); else return lucas ( a % p , b % p , p ) * lucas ( a / p , b / p , p ) % p ; } signed main () { int n ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ) { int a , b , p ; cin >> a >> b >> p ; cout << lucas ( a , b , p ) << endl ; } return 0 ; }","title":"a,b\u8f83\u5927\u4e14\u53d6\u6a21"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0/#_9","text":"","title":"\u4f8b\u9898"},{"location":"ACM/%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E6%95%B0/#1beautiful-numbers","text":"\u9898\u76ee\u5165\u53e3 \u601d\u8def \u5bf9\u4e8e\u6bcf\u4e2an\u4f4d\u6570\uff0c\u53ea\u9700\u8981\u5224\u65ad\u5b83\u7684\u4f4d\u6570\u548c\u662f\u5426good\u5373\u53ef\uff0c\u66b4\u529b\u679a\u4e3ea\u7684\u6570\u91cf\uff0c\u6ce8\u610f\u8fd9\u91cc\u9700\u8981\u9700\u5904\u7406\u9636\u4e58 \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 #include <bits/stdc++.h> using namespace std ; #define int long long int a , b , n ; const int mod = 1e9 + 7 , N = 1e6 + 6 ;; int fac [ N ]; void init () { fac [ 0 ] = 1 ; for ( int i = 1 ; i <= 1000000 ; i ++ ) { fac [ i ] = fac [ i -1 ] * i % mod ; } } bool check ( int x , int a , int b ) { while ( x ) { if ( x % 10 != a && x % 10 != b ) return false ; x /= 10 ; } return true ; } int qpow ( int a , int n , int mod ) { int res = 1 ; while ( n ) { if ( n & 1 ) res = res * a % mod ; a = a * a % mod ; n >>= 1 ; } return res ; } int C ( int a , int b , int mod ) { return fac [ a ] * qpow ( fac [ b ], mod -2 , mod ) % mod * qpow ( fac [ a - b ], mod -2 , mod ) % mod ; } void solve () { init (); cin >> a >> b >> n ; int res = 0 ; for ( int i = 0 ; i <= n ; i ++ ) { int tmp = i * a + ( n - i ) * b ; if ( ! check ( tmp , a , b )) continue ; res += C ( n , i , mod ); res %= mod ; } cout << res << endl ; } signed main () { solve (); return 0 ; }","title":"\u4f8b1.Beautiful Numbers"},{"location":"PS/PS1/","text":"\u5feb\u6377\u952e \u65b0\u5efa\u56fe\u5f62\u6587\u4ef6\uff1a Ctrl + N \u8def\u5f84\u53d8\u9009\u533a\uff1a Ctrl + Enter \u8f7d\u5165\u9009\u533a\uff1a`Ctrl + \u70b9\u6309\u56fe\u5c42\u3001\u8def\u5f84\u3001\u901a\u9053\u9762\u677f\u4e2d\u7684\u7f29\u7ea6\u56fe \u653e\u5927/\u7f29\u5c0f\u89c6\u56fe\uff1a Ctrl + [+]/[-] \u6ee1\u753b\u5e03\u663e\u793a\uff1a Ctrl + 0 \u663e\u793a/\u9690\u85cf\u6807\u5c3a\uff1a Ctrl + R \u81ea\u7531\u53d8\u6362\uff1a Ctrl + T \u65b0\u5efa\u56fe\u5c42\uff1a Ctrl + Shift + N \u62f7\u8d1d\u56fe\u5c42\uff1a Ctrl + J \u5408\u5e76\u56fe\u5c42\uff1a Ctrl + E \u9009\u533a\u524d\u666f\u8272\u586b\u5145\uff1a Alt + del \u9009\u533a\u80cc\u666f\u8272\u586b\u5145\uff1a Ctrl + del \u5168\u90e8\u9009\u53d6\uff1a Ctrl + A \u53d6\u6d88\u9009\u62e9\uff1a Ctrl + D \u5728\u5df2\u6709\u9009\u533a\u60c5\u51b5\u4e0b\u6dfb\u52a0\u9009\u53d6\uff1a \u6309\u4f4fShift\u540e\u6dfb\u52a0 \u5728\u5df2\u6709\u9009\u533a\u60c5\u51b5\u4e0b\u51cf\u5c11\u9009\u533a\uff1a \u6309\u4f4fAlt \u540e\u51cf\u5c11 \u53cd\u5411\u9009\u62e9\uff1a Ctrl + Shift + I \u7fbd\u5316\uff1a Shift + F6 \u64a4\u9500\u64cd\u4f5c\uff1a Ctrl + Z \u4fee\u6539\u56fe\u50cf\u5927\u5c0f \u6267\u884c\u201c\u56fe\u50cf > \u56fe\u50cf\u5927\u5c0f\u201d\u547d\u4ee4\u6216\u6309 Alt+Ctrl+I \u7ec4\u5408\u952e\uff0c\u53ef\u6253\u5f00\u201c\u56fe\u50cf\u5927\u5c0f\u201d\u5bf9\u8bdd\u6846\u3002 \u4fee\u6539\u56fe\u50cf\u5c3a\u5bf8 \u5f88\u591a\u65f6\u5019\u56fe\u50cf\u7d20\u6750\u7684\u5c3a\u5bf8\u4e0e\u9700\u8981\u7684\u5c3a\u5bf8\u4e0d\u7b26\uff0c\u4f8b\u5982\u5236\u4f5c\u8ba1\u7b97\u673a\u684c\u9762\u58c1\u7eb8\u3001\u4e2a\u6027\u5316\u865a\u62df\u5934\u50cf\u6216\u4f20\u8f93\u5230\u4e2a\u4eba\u7f51\u7edc\u7a7a\u95f4\u7b49\uff0c\u90fd\u9700\u8981\u5bf9\u56fe\u50cf\u7684\u5c3a\u5bf8\u8fdb\u884c\u7279\u5b9a\u7684\u4fee\u6539\uff0c\u4ee5\u9002\u5408\u4e0d\u540c\u7684\u8981\u6c42\u3002 \u4fee\u6539\u56fe\u50cf\u5206\u8fa8\u7387 \u5206\u8fa8\u7387\u662f\u6307\u4f4d\u56fe\u56fe\u50cf\u4e2d\u7684\u7ec6\u8282\u7cbe\u7ec6\u5ea6\uff0c\u6d4b\u91cf\u5355\u4f4d\u662f\u50cf\u7d20 / \u82f1\u5bf8\uff08PPI\uff09\uff0c\u6bcf\u82f1\u5bf8\u7684\u50cf\u7d20\u8d8a\u591a\uff0c\u5206\u8fa8\u7387\u8d8a\u9ad8\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u56fe\u50cf\u7684\u5206\u8fa8\u7387\u8d8a\u9ad8\uff0c\u5370\u5237\u51fa\u6765\u7684\u8d28\u91cf\u5c31\u8d8a\u597d\u3002 \u4fee\u6539\u753b\u5e03 \u4fee\u6539\u753b\u5e03\u5927\u5c0f \u6267\u884c\u201c\u56fe\u50cf > \u753b\u5e03\u5927\u5c0f\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u753b\u5e03\u5927\u5c0f\u201d\u5bf9\u8bdd\u6846\u3002\u5728\u8be5\u5bf9\u8bdd\u6846\u4e2d\u53ef\u4ee5\u5bf9\u753b\u5e03\u7684\u5bbd\u5ea6\u3001\u9ad8\u5ea6\u3001\u5b9a\u4f4d\u548c\u753b\u5e03\u6269\u5c55\u989c\u8272\u8fdb\u884c\u8c03\u6574\u3002\u589e\u5927\u753b\u5e03\u5927\u5c0f\uff0c\u539f\u59cb\u56fe\u50cf\u5927\u5c0f\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u800c\u589e\u5927\u7684\u90e8\u5206\u5219\u4f7f\u7528\u9009\u5b9a\u7684\u586b\u5145\u989c\u8272\u8fdb\u884c\u586b\u5145\uff1b\u51cf\u5c0f\u753b\u5e03\u5927\u5c0f\uff0c\u56fe\u50cf\u5219\u4f1a\u88ab\u88c1\u5207\u6389\u4e00\u90e8\u5206\u3002 \u8bbe\u7f6e\u753b\u5e03\u6269\u5c55\u989c\u8272 \u753b\u5e03\u6269\u5c55\u989c\u8272\u662f\u6307\u586b\u5145\u65b0\u753b\u5e03\u7684\u989c\u8272\u3002\u5982\u679c\u56fe\u50cf\u7684\u80cc\u666f\u662f\u900f\u660e\u7684\uff0c\u90a3\u4e48\u201c\u753b\u5e03\u6269\u5c55\u989c\u8272\u201d\u9009\u9879\u5c06\u4e0d\u53ef\u7528\uff0c\u65b0\u589e\u52a0\u7684\u753b\u5e03\u4e5f\u662f\u900f\u660e\u7684\u3002 \u88c1\u526a\u4e0e\u88c1\u5207\u56fe\u50cf \u88c1\u526a\u56fe\u50cf \u88c1\u526a\u662f\u6307\u79fb\u53bb\u90e8\u5206\u56fe\u50cf\uff0c\u4ee5\u7a81\u51fa\u6216\u52a0\u5f3a\u6784\u56fe\u6548\u679c\u7684\u8fc7\u7a0b\u3002\u4f7f\u7528\u201c\u88c1\u526a\u5de5\u5177\u201d\u53ef\u4ee5\u88c1\u526a\u6389\u591a\u4f59\u7684\u56fe\u50cf\uff0c\u5e76\u91cd\u65b0\u5b9a\u4e49\u753b\u5e03\u7684\u5927\u5c0f\u3002\u9009\u62e9\u201c\u88c1\u526a\u5de5\u5177\u201d\u540e\uff0c\u5728\u753b\u9762\u4e2d\u62d6\u66f3\u51fa\u4e00\u4e2a\u77e9\u5f62\u533a\u57df\uff0c\u9009\u62e9\u8981\u4fdd\u7559\u7684\u90e8\u5206\uff0c\u7136\u540e\u6309 Enter \u952e\u6216\u53cc\u51fb\u5373\u53ef\u5b8c\u6210\u88c1\u526a\u3002 \u900f\u89c6\u88c1\u526a\u5de5\u5177 \u4f7f\u7528\u201c\u900f\u89c6\u88c1\u526a\u5de5\u5177\u201d\u53ef\u4ee5\u5728\u9700\u8981\u88c1\u526a\u7684\u56fe\u50cf\u4e0a\u5236\u4f5c\u51fa\u5e26\u6709\u900f\u89c6\u611f\u7684\u88c1\u526a\u6846\uff0c\u5728\u5e94\u7528\u88c1\u526a\u540e\u53ef\u4ee5\u4f7f\u56fe\u50cf\u5e26\u6709\u660e\u663e\u7684\u900f\u89c6\u611f\u3002\u4f7f\u7528\u201c\u900f\u89c6\u88c1\u526a\u5de5\u5177\u201d\u5728\u753b\u9762\u4e2d\u7ed8\u5236\u4e00\u4e2a\u88c1\u526a\u6846\uff0c\u5c06\u5149\u6807\u5b9a\u4f4d\u5230\u88c1\u526a\u6846\u7684\u4e00\u4e2a\u63a7\u5236\u70b9\u4e0a\uff0c\u5355\u51fb\u5e76\u62d6\u52a8\u3002\u8c03\u6574\u5b8c\u6210\u540e\u5355\u51fb\u9009\u9879\u680f\u4e2d\u7684\u201c\u63d0\u4ea4\u5f53\u524d\u88c1\u526a\u64cd\u4f5c\u201d\u6309\u94ae \uff0c\u5373\u53ef\u5f97\u5230\u5e26\u6709\u900f\u89c6\u611f\u7684\u753b\u9762\u6548\u679c\u3002 \u88c1\u5207\u56fe\u50cf \u4f7f\u7528\u201c\u88c1\u5207\u201d\u547d\u4ee4\u53ef\u4ee5\u57fa\u4e8e\u50cf\u7d20\u7684\u989c\u8272\u6765\u88c1\u5207\u56fe\u50cf\u3002\u6267\u884c\u201c\u56fe\u50cf > \u88c1\u5207\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u88c1\u5207\u201d\u5bf9\u8bdd\u6846 \u65cb\u8f6c\u753b\u5e03 \u6267\u884c\u201c\u56fe\u50cf > \u56fe\u50cf\u65cb\u8f6c\u201d\u547d\u4ee4\uff0c\u5728\u8be5\u83dc\u5355\u4e0b\u63d0\u4f9b\u4e86 6 \u79cd\u65cb\u8f6c\u753b\u5e03\u7684\u547d\u4ee4\uff0c\u5305\u62ec\u201c180 \u5ea6\u201d\u3001\u201c90 \u5ea6\uff08\u987a\u65f6\u9488\uff09\u201d\u3001\u201c90 \u5ea6\uff08\u9006\u65f6\u9488\uff09\u201d\u3001\u201c\u4efb\u610f\u89d2\u5ea6\u201d\u3001\u201c\u6c34\u5e73\u7ffb\u8f6c\u753b\u5e03\u201d\u548c\u201c\u5782\u76f4\u7ffb\u8f6c\u753b\u5e03\u201d\u3002\u5728\u6267\u884c\u8fd9\u4e9b\u547d\u4ee4\u65f6\uff0c\u53ef\u4ee5\u65cb\u8f6c\u6216\u7ffb\u8f6c\u6574\u4e2a\u56fe\u50cf\u3002 \u64a4\u9500/\u8fd4\u56de/\u6062\u590d\u6587\u4ef6 \u8fd8\u539f\u4e0e\u91cd\u505a \u6267\u884c\u201c\u7f16\u8f91 > \u8fd8\u539f\u201d\u547d\u4ee4\u6216\u6309 Ctrl+Z \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u64a4\u9500\u6700\u8fd1\u4e00\u6b21\u7684\u64cd\u4f5c\uff0c\u5c06\u56fe\u50cf\u8fd8\u539f\u5230\u4e0a\u4e00\u6b65\u7684\u64cd\u4f5c\u72b6\u6001\u3002\u5982\u679c\u60f3\u8981\u53d6\u6d88\u8fd8\u539f\u64cd\u4f5c\uff0c\u53ef\u4ee5\u6267\u884c\u201c\u7f16\u8f91 > \u91cd\u505a\u201d\u547d\u4ee4\u3002 \u524d\u8fdb\u4e00\u6b65\u4e0e\u540e\u9000\u4e00\u6b65 \u7531\u4e8e\u201c\u8fd8\u539f\u201d\u547d\u4ee4\u53ea\u53ef\u4ee5\u8fd8\u539f\u4e00\u6b65\u64cd\u4f5c\uff0c\u800c\u5b9e\u9645\u64cd\u4f5c\u4e2d\u7ecf\u5e38\u9700\u8981\u8fd8\u539f\u591a\u4e2a\u64cd\u4f5c\uff0c\u5c31\u9700\u8981\u8fde\u7eed\u6267\u884c\u201c\u7f16\u8f91 > \u540e\u9000\u4e00\u6b65\u201d\u547d\u4ee4\uff0c\u6216\u8fde\u7eed\u6309 Alt+Ctrl+Z \u7ec4\u5408\u952e\u6765\u9010\u6b65\u64a4\u9500\u64cd\u4f5c\uff1b\u5982\u679c\u8981\u53d6\u6d88\u8fd8\u539f\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u8fde\u7eed\u6267\u884c\u201c\u7f16\u8f91 > \u524d\u8fdb\u4e00\u6b65\u201d\u547d\u4ee4\uff0c\u6216\u8fde\u7eed\u6309 Shift+Ctrl+Z \u7ec4\u5408\u952e\u6765\u9010\u6b65\u6062\u590d\u88ab\u64a4\u9500\u7684\u64cd\u4f5c\u3002 \u6062\u590d\u6587\u4ef6\u5230\u521d\u59cb\u72b6\u6001 \u6267\u884c\u201c\u6587\u4ef6 > \u6062\u590d\u201d\u547d\u4ee4\u6216\u6309 F12 \u952e\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u6587\u4ef6\u6062\u590d\u5230\u6700\u540e\u4e00\u6b21\u4fdd\u5b58\u65f6\u7684\u72b6\u6001\uff0c\u6216\u8fd4\u56de\u5230\u521a\u6253\u5f00\u6587\u4ef6\u65f6\u7684\u72b6\u6001\u3002 \u4f7f\u7528\u201c\u5386\u53f2\u8bb0\u5f55\u201d \u6267\u884c\u201c\u7a97\u53e3 > \u5386\u53f2\u8bb0\u5f55\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u5386\u53f2\u8bb0\u5f55\u201d\u9762\u677f\u3002 \u526a\u5207/\u62f7\u8d1d/\u7c98\u8d34\u56fe\u50cf \u526a\u5207\u4e0e\u7c98\u8d34 \u521b\u5efa\u9009\u533a\u540e\uff0c\u6267\u884c\u201c\u7f16\u8f91 > \u526a\u5207\u201d\u547d\u4ee4\u6216\u6309 Ctrl+X \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u5c06\u9009\u533a\u4e2d\u7684\u5185\u5bb9\u526a\u5207\u5230\u526a\u8d34\u677f\u4e0a\u3002\u7136\u540e\u6267\u884c\u201c\u7f16\u8f91 > \u7c98\u8d34\u201d\u547d\u4ee4\u6216\u6309 Ctrl+V \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u5c06\u526a\u5207\u7684\u56fe\u50cf\u7c98\u8d34\u5230\u753b\u5e03\u4e2d\uff0c\u5e76\u53ef\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u56fe\u5c42\u3002 \u62f7\u8d1d \u521b\u5efa\u9009\u533a\u540e\uff0c\u6267\u884c\u201c\u7f16\u8f91 > \u62f7\u8d1d\u201d\u547d\u4ee4\u6216\u6309 Ctrl+C \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u5c06\u9009\u533a\u4e2d\u7684\u56fe\u50cf\u590d\u5236\u5230\u526a\u8d34\u677f\u4e2d\uff0c\u7136\u540e\u6267\u884c\u201c\u7f16\u8f91 > \u7c98\u8d34\u201d\u547d\u4ee4\u6216\u6309 Ctrl+V \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u5c06\u590d\u5236\u7684\u56fe\u50cf\u7c98\u8d34\u5230\u753b\u5e03\u4e2d\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u56fe\u5c42\u3002 \u5408\u5e76\u62f7\u8d1d \u5f53\u6587\u6863\u4e2d\u5305\u542b\u5f88\u591a\u56fe\u5c42\u65f6\uff0c\u6267\u884c\u201c\u9009\u62e9 > \u5168\u9009\u201d\u547d\u4ee4\u6216\u6309 Ctrl+A \u7ec4\u5408\u952e\u5168\u9009\u5f53\u524d\u56fe\u50cf\uff0c\u7136\u540e\u6267\u884c\u201c\u7f16\u8f91 > \u5408\u5e76\u62f7 \u8d1d\u201d\u547d\u4ee4\u6216\u6309 Ctrl+Shift+C \u7ec4\u5408\u952e\uff0c\u53ef\u5c06\u6240\u6709\u53ef\u89c1\u56fe\u5c42\u590d\u5236\u5e76\u5408\u5e76\u5230\u526a\u8d34\u677f\u4e2d\u3002\u6700\u540e\u6309 Ctrl+V \u7ec4\u5408\u952e\u53ef\u4ee5\u5c06\u5408\u5e76\u590d\u5236\u7684\u56fe\u50cf\u7c98\u8d34\u5230\u5f53\u524d\u6587\u6863\u6216\u5176\u4ed6\u6587\u6863\u4e2d\u3002 \u6e05\u9664\u56fe\u50cf \u5f53\u9009\u4e2d\u7684\u56fe\u5c42\u4e3a\u5305\u542b\u9009\u533a\u72b6\u6001\u4e0b\u7684\u666e\u901a\u56fe\u5c42\u65f6\uff0c\u6267\u884c\u201c\u7f16\u8f91 > \u6e05\u9664\u201d\u547d\u4ee4\u53ef\u4ee5\u6e05\u9664\u9009\u533a\u4e2d\u7684\u56fe\u50cf\u3002\u9009\u4e2d\u56fe\u5c42\u4e3a\u201c\u80cc\u666f\u201d\u56fe\u5c42\u65f6\uff0c\u88ab\u6e05\u9664\u7684\u533a\u57df\u5c06\u586b\u5145\u80cc\u666f\u8272\u3002 \u9009\u62e9\u4e0e\u79fb\u52a8\u5bf9\u8c61 \u5728\u540c\u4e00\u4e2a\u6587\u6863\u4e2d\u79fb\u52a8\u56fe\u50cf \u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u9009\u62e9\u8981\u79fb\u52a8\u7684\u5bf9\u8c61\u6240\u5728\u7684\u56fe\u5c42\u3002\u7136\u540e\u5728\u5de5\u5177\u7bb1\u4e2d\u5355\u51fb\u201c\u79fb\u52a8\u5de5\u5177\u201d\u6309\u94ae \uff0c\u63a5\u7740\u5728\u753b\u5e03\u4e2d\u5355\u51fb \u9f20\u6807\u5de6\u952e\u5e76\u62d6\u66f3\u5373\u53ef\u79fb\u52a8\u9009\u4e2d\u7684\u5bf9\u8c61\u3002 \u5728\u4e0d\u540c\u7684\u6587\u6863\u95f4\u79fb\u52a8\u56fe\u50cf \u82e5\u8981\u5728\u4e0d\u540c\u7684\u6587\u6863\u95f4\u79fb\u52a8\u56fe\u50cf\uff0c\u9996\u5148\u9700\u8981\u4f7f\u7528\u201c\u79fb\u52a8\u5de5 \u5177\u201d\u5c06\u5149\u6807\u653e\u7f6e\u5728\u5176\u4e2d\u4e00\u4e2a\u753b\u5e03\u4e2d\uff0c\u5355\u51fb\u5e76\u62d6\u66f3\u5230\u53e6\u5916\u4e00\u4e2a\u6587\u6863\u7684\u6807\u9898\u680f\u4e0a\uff0c\u505c\u7559\u7247\u523b\u540e\u5373\u53ef\u5207\u6362\u5230\u76ee\u6807\u6587\u6863\uff0c\u63a5\u7740\u5c06\u56fe\u50cf\u79fb\u52a8\u5230\u753b\u9762\u4e2d\u91ca\u653e\u9f20\u6807\u5373\u53ef\u5c06\u56fe\u50cf\u62d6\u66f3\u5230\u6587\u6863\u4e2d\uff0c\u540c\u65f6Photoshop \u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u56fe\u5c42\u3002 \u56fe\u50cf\u53d8\u6362 \u79fb\u52a8\u3001\u65cb\u8f6c\u3001\u7f29\u653e\u3001\u626d\u66f2\u3001\u659c\u5207\u7b49\u662f\u5904\u7406\u56fe\u50cf\u7684\u57fa\u672c\u65b9\u6cd5\u3002\u5176\u4e2d\u79fb\u52a8\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u79f0\u4e3a\u53d8\u6362\u64cd\u4f5c\uff0c\u800c\u626d\u66f2\u548c\u659c\u5207\u79f0\u4e3a\u53d8\u5f62\u64cd\u4f5c\u3002\u901a\u8fc7\u6267\u884c\u201c\u7f16\u8f91\u201d\u83dc\u5355\u4e0b\u7684 \u201c\u81ea\u7531\u53d8\u6362\u201d\u548c\u201c\u53d8\u6362\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6539\u53d8\u56fe\u50cf\u7684\u5f62\u72b6\u3002 \u5b9a\u754c\u6846\u3001\u4e2d\u5fc3\u70b9\u548c\u63a7\u5236\u70b9 \u5728\u6267\u884c\u201c\u81ea\u7531\u53d8\u6362\u201d\u6216\u201c\u53d8\u6362\u201d\u64cd\u4f5c\u65f6\uff0c\u5f53\u524d\u5bf9\u8c61\u7684\u5468\u56f4\u4f1a\u51fa\u73b0\u4e00\u4e2a\u5b9a\u754c\u6846\uff0c\u5b9a\u754c\u6846\u7684\u4e2d\u95f4\u6709\u4e00\u4e2a\u4e2d\u5fc3\u70b9\uff0c\u56db\u5468\u8fd8\u6709\u63a7\u5236\u70b9\u3002\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e2d\u5fc3\u70b9\u4f4d\u4e8e\u53d8\u6362\u5bf9\u8c61\u7684\u4e2d\u5fc3\uff0c\u7528\u4e8e\u5b9a\u4e49\u5bf9\u8c61\u7684\u53d8\u6362\u4e2d\u5fc3\uff0c\u62d6\u66f3\u4e2d\u5fc3\u70b9\u53ef\u4ee5\u79fb\u52a8\u5b83\u7684\u4f4d\u7f6e\uff1b\u63a7\u5236\u70b9\u4e3b\u8981\u7528\u6765\u53d8\u6362\u56fe\u50cf\u3002 \u53d8\u6362\u4e0e\u81ea\u7531\u53d8\u6362\u547d\u4ee4 \u5728\u201c\u7f16\u8f91 > \u53d8\u6362\u201d\u83dc\u5355\u4e2d\u63d0\u4f9b\u4e86\u591a\u79cd\u53d8\u6362\u547d\u4ee4\u3002\u4f7f\u7528\u8fd9\u4e9b\u547d\u4ee4\u53ef\u4ee5\u5bf9\u56fe\u5c42\u3001\u8def\u5f84\u3001\u77e2\u91cf\u56fe\u5f62\uff0c\u4ee5\u53ca\u9009\u533a\u4e2d\u7684\u56fe\u50cf\u8fdb\u884c\u53d8\u6362\u64cd\u4f5c\u3002\u53e6\u5916\uff0c\u8fd8\u53ef\u4ee5\u5bf9\u77e2\u91cf\u8499\u7248\u548c Alpha \u5e94\u7528\u53d8\u6362\u3002\u6267\u884c\u201c\u7f16\u8f91 > \u81ea\u7531\u53d8\u6362\u201d\u547d\u4ee4\uff0c\u540c\u6837\u53ef\u4ee5\u4f7f\u5bf9\u8c61\u8fdb\u5165\u53d8\u6362\u72b6\u6001\uff0c\u5982\u679c\u60f3\u8981\u5207\u6362\u53d8\u6362\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5728\u81ea\u7531\u53d8\u6362\u72b6\u6001\u4e0b\u5728\u753b\u9762\u4e2d\u5355\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u8fdb\u884c\u9009\u62e9\u3002 \u81ea\u7531\u53d8\u6362\u64cd\u4f5c \u7f29\u653e\uff1a \u4e0d\u6309\u4f4f\u4efb\u4f55\u5feb\u6377\u952e\uff0c\u53ef\u4ee5\u4efb\u610f\u7f29\u653e\u56fe\u50cf\uff1b\u5982\u679c\u6309\u4f4f Shift \u952e\uff0c\u53ef\u4ee5\u7b49\u6bd4\u4f8b\u7f29\u653e\u56fe\u50cf\uff1b\u5982\u679c\u6309\u4f4f Shift+Alt \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u4ee5\u4e2d\u5fc3\u70b9\u4e3a\u57fa\u51c6\u7b49\u6bd4\u4f8b\u7f29\u653e\u56fe\u50cf\u3002 \u65cb\u8f6c\uff1a \u5982\u679c\u4e0d\u6309\u4f4f\u4efb\u4f55\u5feb\u6377\u952e\uff0c\u53ef\u4ee5\u4ee5\u4efb\u610f\u89d2\u5ea6\u65cb\u8f6c\u56fe\u50cf\uff1b\u5982\u679c\u6309\u4f4f Shift \u952e\uff0c\u53ef\u4ee5\u4ee5 15\u00b0\u4e3a\u5355\u4f4d\u65cb\u8f6c\u56fe\u50cf\u3002 \u659c\u5207\uff1a \u4f7f\u7528\u201c\u659c\u5207\u201d\u547d\u4ee4\u53ef\u4ee5\u5728\u4efb\u610f\u65b9\u5411\u3001\u5782\u76f4\u65b9\u5411\u6216\u6c34\u5e73\u65b9\u5411\u4e0a\u503e\u659c\u56fe\u50cf\u3002\u5982\u679c\u4e0d\u6309\u4f4f\u4efb\u4f55\u5feb\u6377\u952e\uff0c\u53ef\u4ee5\u5728\u4efb\u610f\u65b9\u5411\u4e0a\u503e\u659c\u56fe\u50cf\uff1b\u5982\u679c\u6309\u4f4f Shift \u952e\uff0c\u53ef\u4ee5\u5728\u5782\u76f4\u6216\u6c34\u5e73\u65b9\u5411\u4e0a\u503e\u659c\u56fe\u50cf\u3002 \u626d\u66f2\uff1a \u4f7f\u7528\u201c\u626d\u66f2\u201d\u547d\u4ee4\u53ef\u4ee5\u5728\u5404\u4e2a\u65b9\u5411\u4e0a\u4f38\u5c55\u53d8\u6362\u5bf9\u8c61\u3002\u5982\u679c\u4e0d\u6309\u4f4f\u4efb\u4f55\u5feb\u6377\u952e\uff0c\u53ef\u4ee5\u5728\u4efb\u610f\u65b9\u5411\u4e0a\u626d\u66f2\u56fe\u50cf\uff1b\u5982\u679c\u6309\u4f4f Shift \u952e\uff0c\u53ef\u4ee5\u5728\u5782\u76f4\u6216\u6c34\u5e73\u65b9\u5411\u4e0a\u626d\u66f2\u56fe\u50cf\u3002 \u900f\u89c6\uff1a \u4f7f\u7528\u201c\u900f\u89c6\u201d\u547d\u4ee4\u53ef\u4ee5\u5bf9\u53d8\u6362\u5bf9\u8c61\u5e94\u7528\u5355\u70b9\u900f\u89c6\u3002\u62d6\u66f3\u5b9a\u754c\u6846 4 \u4e2a\u89d2\u4e0a\u7684\u63a7\u5236\u70b9\uff0c\u53ef\u4ee5\u5728\u6c34\u5e73\u6216\u5782\u76f4\u65b9\u5411\u4e0a\u5bf9\u56fe\u50cf\u5e94\u7528\u900f\u89c6\u3002 \u53d8\u5f62\uff1a \u5982\u679c\u8981\u5bf9\u56fe\u50cf\u7684\u5c40\u90e8\u5185\u5bb9\u8fdb\u884c\u626d\u66f2\uff0c\u53ef\u4ee5\u4f7f\u7528\u201c\u53d8\u5f62\u201d\u547d\u4ee4\u6765\u64cd\u4f5c\u3002\u6267\u884c\u8be5\u547d\u4ee4\u65f6\uff0c\u56fe\u50cf\u4e0a\u5c06\u4f1a\u51fa\u73b0\u53d8\u5f62\u7f51\u683c\u548c\u951a\u70b9\uff0c\u62d6\u66f3\u951a\u70b9\u6216\u8c03\u6574\u951a\u70b9\u7684\u65b9\u5411\u7ebf\u53ef\u4ee5\u5bf9\u56fe\u50cf\u8fdb\u884c\u66f4\u52a0\u81ea\u7531\u548c\u7075\u6d3b\u7684\u53d8\u5f62\u5904\u7406\u3002 \u65cb\u8f6c 180 \u5ea6 / \u65cb\u8f6c 90 \u5ea6\uff08\u987a\u65f6\u9488\uff09/ \u65cb\u8f6c 90 \u5ea6\uff08\u9006\u65f6\u9488\uff09\uff1a \u8fd9 3 \u4e2a\u547d\u4ee4\u975e\u5e38\u7b80\u5355\uff0c\u4ee5\u56fe 4-107 \u6240\u793a\u56fe\u50cf\u4e3a\u4f8b\uff0c\u6267\u884c\u201c\u65cb\u8f6c 180 \u5ea6\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u56fe\u50cf\u65cb\u8f6c 180\u00b0\uff1b\u6267\u884c\u201c\u65cb\u8f6c 90 \u5ea6\uff08\u987a\u65f6\u9488\uff09\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u56fe\u50cf\u987a\u65f6\u9488\u65cb\u8f6c 90\u00b0\uff1b\u6267\u884c\u201c\u65cb\u8f6c 90 \u5ea6\uff08\u9006\u65f6\u9488\uff09\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u56fe\u50cf\u9006\u65f6\u9488\u65cb\u8f6c 90\u00b0\u3002 \u6c34\u5e73\u7ffb\u8f6c / \u5782\u76f4\u7ffb\u8f6c\uff1a \u8fd9\u4e24\u4e2a\u547d\u4ee4\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u6267\u884c\u201c\u6c34\u5e73\u7ffb\u8f6c\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u56fe\u50cf\u5728\u6c34\u5e73\u65b9\u5411\u4e0a\u8fdb\u884c\u7ffb\u8f6c\uff1b\u6267\u884c\u201c\u5782\u76f4\u7ffb\u8f6c\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u56fe\u50cf\u5728\u5782\u76f4\u65b9\u5411\u4e0a\u8fdb\u884c\u7ffb\u8f6c\u3002 \u81ea\u7531\u53d8\u6362\u5e76\u590d\u5236\u56fe\u50cf \u5728 Photoshop \u4e2d\uff0c\u53ef\u4ee5\u8fb9\u53d8\u6362\u56fe\u50cf\uff0c\u8fb9\u590d\u5236\u56fe\u50cf\u3002\u8fd9\u4e2a\u529f\u80fd\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u7684\u4f7f\u7528\u9891\u7387\u975e\u5e38\u9ad8\u3002\u9009\u4e2d\u5706\u5f62\u6309\u94ae\u56fe\u5c42\uff0c\u6309 Ctrl+Alt+T \u7ec4\u5408\u952e\u8fdb\u5165\u81ea\u7531\u53d8\u6362\u5e76\u590d\u5236\u72b6\u6001\uff0c\u5c06\u4e2d\u5fc3\u70b9\u5b9a\u4f4d\u5728\u53f3\u4e0a\u89d2\uff0c\u7136\u540e\u5c06\u5176\u7f29\u5c0f\u5e76\u5411\u53f3\u79fb\u52a8\u4e00\u6bb5\u8ddd\u79bb\uff0c\u63a5\u7740\u6309 Enter \u952e\u786e\u8ba4\u64cd\u4f5c\u3002\u8fd9\u4e00\u7cfb\u5217\u7684\u64cd\u4f5c\u5960\u5b9a\u4e86\u4e00\u4e2a\u53d8\u6362\u89c4\u5f8b\uff0c\u540c\u65f6 Photoshop\u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u56fe\u5c42\u3002 \u786e \u5b9a \u53d8 \u6362 \u89c4 \u5f8b \u4ee5 \u540e\uff0c \u5c31 \u53ef \u4ee5 \u6309 \u7167 \u8fd9 \u4e2a \u89c4 \u5f8b \u7ee7 \u7eed \u53d8 \u6362 \u5e76 \u590d \u5236 \u56fe \u50cf\u3002 \u5982 \u679c \u8981 \u7ee7 \u7eed \u53d8 \u6362 \u5e76 \u590d \u5236 \u56fe \u50cf\uff0c \u53ef \u4ee5 \u8fde \u7eed \u6309 Shift+Ctrl+Alt+T \u7ec4\u5408\u952e\uff0c\u76f4\u5230\u8fbe\u5230\u8981\u6c42\u4e3a\u6b62\u3002 \u64cd\u63a7\u53d8\u5f62 \u201c\u64cd\u63a7\u53d8\u5f62\u201d\u662f\u4e00\u79cd\u53ef\u89c6\u7f51\u683c\u3002\u501f\u52a9\u8be5\u7f51\u683c\uff0c\u53ef\u4ee5\u968f\u610f\u5730\u626d\u66f2\u7279\u5b9a\u56fe\u50cf\u533a\u57df\uff0c\u5e76\u4fdd\u6301\u5176\u4ed6\u533a\u57df\u4e0d\u53d8\u3002\u201c\u64cd\u63a7\u53d8\u5f62\u201d\u901a\u5e38\u7528\u6765\u4fee\u6539\u4eba\u7269\u7684\u52a8\u4f5c\u3001\u53d1\u578b\u7b49\u3002\u6267\u884c\u201c\u7f16\u8f91 > \u64cd\u63a7\u53d8\u5f62\u201d\u547d\u4ee4\uff0c\u56fe\u50cf\u4e0a\u5c06\u4f1a\u5e03\u6ee1\u7f51\u683c\uff0c\u901a\u8fc7\u5728\u56fe\u50cf\u4e2d\u7684\u5173\u952e\u70b9\u4e0a\u6dfb\u52a0\u201c\u56fe\u9489\u201d\uff0c\u53ef\u4ee5\u4fee\u6539\u4eba\u7269\u7684\u4e00\u4e9b\u52a8\u4f5c\u3002 \u81ea\u52a8\u5bf9\u9f50\u56fe\u5c42 \u62cd\u6444\u5168\u666f\u56fe\u50cf\u65f6\u7ecf\u5e38\u9700\u8981\u62cd\u6444\u591a\u5f20\u540e\u5728\u540e\u671f\u8f6f\u4ef6\u4e2d\u8fdb\u884c\u62fc\u63a5\u3002\u4f7f\u7528\u201c\u81ea\u52a8\u5bf9\u9f50\u56fe\u5c42\u201d\u547d\u4ee4\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u56fe\u5c42\u4e2d\u7684\u76f8\u4f3c\u5185\u5bb9\uff08\u5982\u89d2\u548c\u8fb9\uff09\u81ea\u52a8\u5bf9\u9f50\u56fe\u5c42\u3002\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u56fe\u5c42\u4f5c\u4e3a\u53c2\u8003\u56fe\u5c42\uff0c\u4e5f\u53ef\u4ee5\u8ba9 Photoshop \u81ea\u52a8\u9009\u62e9\u53c2\u8003\u56fe\u5c42\uff0c\u5176\u4ed6\u56fe\u5c42\u5c06\u4e0e\u53c2\u8003\u56fe\u5c42\u5bf9\u9f50\uff0c\u4ee5\u4fbf\u4f7f\u5339\u914d\u7684\u5185\u5bb9\u80fd\u591f\u81ea\u52a8\u8fdb\u884c\u53e0\u52a0\u3002 \u81ea\u52a8\u6df7\u5408\u56fe\u5c42 \u4f7f\u7528\u201c\u81ea\u52a8\u6df7\u5408\u56fe\u5c42\u201d\u547d\u4ee4\u53ef\u4ee5\u7f1d\u5408\u6216\u8005\u7ec4\u5408\u56fe\u50cf\uff0c\u4ece\u800c\u5728\u6700\u7ec8\u56fe\u50cf\u4e2d\u83b7\u5f97\u5e73\u6ed1\u7684\u8fc7\u6e21\u6548\u679c\u3002\u201c\u7f16\u8f91 > \u81ea\u52a8\u6df7\u5408\u56fe\u5c42\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u81ea\u52a8\u6df7\u5408\u56fe\u5c42\u201d\u5bf9\u8bdd\u6846\u3002 \u7ec3\u4e60 \u4f7f\u7528\u53d8\u6362\u5236\u4f5c\u5f62\u6001\u5404\u5f02\u7684\u8774\u8776 \u4f7f\u7528\u64cd\u63a7\u53d8\u5f62\u6539\u53d8\u7f8e\u5973\u59ff\u52bf \u5229\u7528\u81ea\u7531\u53d8\u6362\u5c06\u7167\u7247\u653e\u5230\u76f8\u6846\u4e2d \u8c03\u6574\u753b\u9762\u6784\u56fe","title":"\u56fe\u50cf\u7684\u57fa\u672c\u7f16\u8f91\u65b9\u6cd5"},{"location":"PS/PS1/#_1","text":"\u65b0\u5efa\u56fe\u5f62\u6587\u4ef6\uff1a Ctrl + N \u8def\u5f84\u53d8\u9009\u533a\uff1a Ctrl + Enter \u8f7d\u5165\u9009\u533a\uff1a`Ctrl + \u70b9\u6309\u56fe\u5c42\u3001\u8def\u5f84\u3001\u901a\u9053\u9762\u677f\u4e2d\u7684\u7f29\u7ea6\u56fe \u653e\u5927/\u7f29\u5c0f\u89c6\u56fe\uff1a Ctrl + [+]/[-] \u6ee1\u753b\u5e03\u663e\u793a\uff1a Ctrl + 0 \u663e\u793a/\u9690\u85cf\u6807\u5c3a\uff1a Ctrl + R \u81ea\u7531\u53d8\u6362\uff1a Ctrl + T \u65b0\u5efa\u56fe\u5c42\uff1a Ctrl + Shift + N \u62f7\u8d1d\u56fe\u5c42\uff1a Ctrl + J \u5408\u5e76\u56fe\u5c42\uff1a Ctrl + E \u9009\u533a\u524d\u666f\u8272\u586b\u5145\uff1a Alt + del \u9009\u533a\u80cc\u666f\u8272\u586b\u5145\uff1a Ctrl + del \u5168\u90e8\u9009\u53d6\uff1a Ctrl + A \u53d6\u6d88\u9009\u62e9\uff1a Ctrl + D \u5728\u5df2\u6709\u9009\u533a\u60c5\u51b5\u4e0b\u6dfb\u52a0\u9009\u53d6\uff1a \u6309\u4f4fShift\u540e\u6dfb\u52a0 \u5728\u5df2\u6709\u9009\u533a\u60c5\u51b5\u4e0b\u51cf\u5c11\u9009\u533a\uff1a \u6309\u4f4fAlt \u540e\u51cf\u5c11 \u53cd\u5411\u9009\u62e9\uff1a Ctrl + Shift + I \u7fbd\u5316\uff1a Shift + F6 \u64a4\u9500\u64cd\u4f5c\uff1a Ctrl + Z","title":"\u5feb\u6377\u952e"},{"location":"PS/PS1/#_2","text":"\u6267\u884c\u201c\u56fe\u50cf > \u56fe\u50cf\u5927\u5c0f\u201d\u547d\u4ee4\u6216\u6309 Alt+Ctrl+I \u7ec4\u5408\u952e\uff0c\u53ef\u6253\u5f00\u201c\u56fe\u50cf\u5927\u5c0f\u201d\u5bf9\u8bdd\u6846\u3002","title":"\u4fee\u6539\u56fe\u50cf\u5927\u5c0f"},{"location":"PS/PS1/#_3","text":"\u5f88\u591a\u65f6\u5019\u56fe\u50cf\u7d20\u6750\u7684\u5c3a\u5bf8\u4e0e\u9700\u8981\u7684\u5c3a\u5bf8\u4e0d\u7b26\uff0c\u4f8b\u5982\u5236\u4f5c\u8ba1\u7b97\u673a\u684c\u9762\u58c1\u7eb8\u3001\u4e2a\u6027\u5316\u865a\u62df\u5934\u50cf\u6216\u4f20\u8f93\u5230\u4e2a\u4eba\u7f51\u7edc\u7a7a\u95f4\u7b49\uff0c\u90fd\u9700\u8981\u5bf9\u56fe\u50cf\u7684\u5c3a\u5bf8\u8fdb\u884c\u7279\u5b9a\u7684\u4fee\u6539\uff0c\u4ee5\u9002\u5408\u4e0d\u540c\u7684\u8981\u6c42\u3002","title":"\u4fee\u6539\u56fe\u50cf\u5c3a\u5bf8"},{"location":"PS/PS1/#_4","text":"\u5206\u8fa8\u7387\u662f\u6307\u4f4d\u56fe\u56fe\u50cf\u4e2d\u7684\u7ec6\u8282\u7cbe\u7ec6\u5ea6\uff0c\u6d4b\u91cf\u5355\u4f4d\u662f\u50cf\u7d20 / \u82f1\u5bf8\uff08PPI\uff09\uff0c\u6bcf\u82f1\u5bf8\u7684\u50cf\u7d20\u8d8a\u591a\uff0c\u5206\u8fa8\u7387\u8d8a\u9ad8\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u56fe\u50cf\u7684\u5206\u8fa8\u7387\u8d8a\u9ad8\uff0c\u5370\u5237\u51fa\u6765\u7684\u8d28\u91cf\u5c31\u8d8a\u597d\u3002","title":"\u4fee\u6539\u56fe\u50cf\u5206\u8fa8\u7387"},{"location":"PS/PS1/#_5","text":"","title":"\u4fee\u6539\u753b\u5e03"},{"location":"PS/PS1/#_6","text":"\u6267\u884c\u201c\u56fe\u50cf > \u753b\u5e03\u5927\u5c0f\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u753b\u5e03\u5927\u5c0f\u201d\u5bf9\u8bdd\u6846\u3002\u5728\u8be5\u5bf9\u8bdd\u6846\u4e2d\u53ef\u4ee5\u5bf9\u753b\u5e03\u7684\u5bbd\u5ea6\u3001\u9ad8\u5ea6\u3001\u5b9a\u4f4d\u548c\u753b\u5e03\u6269\u5c55\u989c\u8272\u8fdb\u884c\u8c03\u6574\u3002\u589e\u5927\u753b\u5e03\u5927\u5c0f\uff0c\u539f\u59cb\u56fe\u50cf\u5927\u5c0f\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u800c\u589e\u5927\u7684\u90e8\u5206\u5219\u4f7f\u7528\u9009\u5b9a\u7684\u586b\u5145\u989c\u8272\u8fdb\u884c\u586b\u5145\uff1b\u51cf\u5c0f\u753b\u5e03\u5927\u5c0f\uff0c\u56fe\u50cf\u5219\u4f1a\u88ab\u88c1\u5207\u6389\u4e00\u90e8\u5206\u3002","title":"\u4fee\u6539\u753b\u5e03\u5927\u5c0f"},{"location":"PS/PS1/#_7","text":"\u753b\u5e03\u6269\u5c55\u989c\u8272\u662f\u6307\u586b\u5145\u65b0\u753b\u5e03\u7684\u989c\u8272\u3002\u5982\u679c\u56fe\u50cf\u7684\u80cc\u666f\u662f\u900f\u660e\u7684\uff0c\u90a3\u4e48\u201c\u753b\u5e03\u6269\u5c55\u989c\u8272\u201d\u9009\u9879\u5c06\u4e0d\u53ef\u7528\uff0c\u65b0\u589e\u52a0\u7684\u753b\u5e03\u4e5f\u662f\u900f\u660e\u7684\u3002","title":"\u8bbe\u7f6e\u753b\u5e03\u6269\u5c55\u989c\u8272"},{"location":"PS/PS1/#_8","text":"","title":"\u88c1\u526a\u4e0e\u88c1\u5207\u56fe\u50cf"},{"location":"PS/PS1/#_9","text":"\u88c1\u526a\u662f\u6307\u79fb\u53bb\u90e8\u5206\u56fe\u50cf\uff0c\u4ee5\u7a81\u51fa\u6216\u52a0\u5f3a\u6784\u56fe\u6548\u679c\u7684\u8fc7\u7a0b\u3002\u4f7f\u7528\u201c\u88c1\u526a\u5de5\u5177\u201d\u53ef\u4ee5\u88c1\u526a\u6389\u591a\u4f59\u7684\u56fe\u50cf\uff0c\u5e76\u91cd\u65b0\u5b9a\u4e49\u753b\u5e03\u7684\u5927\u5c0f\u3002\u9009\u62e9\u201c\u88c1\u526a\u5de5\u5177\u201d\u540e\uff0c\u5728\u753b\u9762\u4e2d\u62d6\u66f3\u51fa\u4e00\u4e2a\u77e9\u5f62\u533a\u57df\uff0c\u9009\u62e9\u8981\u4fdd\u7559\u7684\u90e8\u5206\uff0c\u7136\u540e\u6309 Enter \u952e\u6216\u53cc\u51fb\u5373\u53ef\u5b8c\u6210\u88c1\u526a\u3002","title":"\u88c1\u526a\u56fe\u50cf"},{"location":"PS/PS1/#_10","text":"\u4f7f\u7528\u201c\u900f\u89c6\u88c1\u526a\u5de5\u5177\u201d\u53ef\u4ee5\u5728\u9700\u8981\u88c1\u526a\u7684\u56fe\u50cf\u4e0a\u5236\u4f5c\u51fa\u5e26\u6709\u900f\u89c6\u611f\u7684\u88c1\u526a\u6846\uff0c\u5728\u5e94\u7528\u88c1\u526a\u540e\u53ef\u4ee5\u4f7f\u56fe\u50cf\u5e26\u6709\u660e\u663e\u7684\u900f\u89c6\u611f\u3002\u4f7f\u7528\u201c\u900f\u89c6\u88c1\u526a\u5de5\u5177\u201d\u5728\u753b\u9762\u4e2d\u7ed8\u5236\u4e00\u4e2a\u88c1\u526a\u6846\uff0c\u5c06\u5149\u6807\u5b9a\u4f4d\u5230\u88c1\u526a\u6846\u7684\u4e00\u4e2a\u63a7\u5236\u70b9\u4e0a\uff0c\u5355\u51fb\u5e76\u62d6\u52a8\u3002\u8c03\u6574\u5b8c\u6210\u540e\u5355\u51fb\u9009\u9879\u680f\u4e2d\u7684\u201c\u63d0\u4ea4\u5f53\u524d\u88c1\u526a\u64cd\u4f5c\u201d\u6309\u94ae \uff0c\u5373\u53ef\u5f97\u5230\u5e26\u6709\u900f\u89c6\u611f\u7684\u753b\u9762\u6548\u679c\u3002","title":"\u900f\u89c6\u88c1\u526a\u5de5\u5177"},{"location":"PS/PS1/#_11","text":"\u4f7f\u7528\u201c\u88c1\u5207\u201d\u547d\u4ee4\u53ef\u4ee5\u57fa\u4e8e\u50cf\u7d20\u7684\u989c\u8272\u6765\u88c1\u5207\u56fe\u50cf\u3002\u6267\u884c\u201c\u56fe\u50cf > \u88c1\u5207\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u88c1\u5207\u201d\u5bf9\u8bdd\u6846","title":"\u88c1\u5207\u56fe\u50cf"},{"location":"PS/PS1/#_12","text":"\u6267\u884c\u201c\u56fe\u50cf > \u56fe\u50cf\u65cb\u8f6c\u201d\u547d\u4ee4\uff0c\u5728\u8be5\u83dc\u5355\u4e0b\u63d0\u4f9b\u4e86 6 \u79cd\u65cb\u8f6c\u753b\u5e03\u7684\u547d\u4ee4\uff0c\u5305\u62ec\u201c180 \u5ea6\u201d\u3001\u201c90 \u5ea6\uff08\u987a\u65f6\u9488\uff09\u201d\u3001\u201c90 \u5ea6\uff08\u9006\u65f6\u9488\uff09\u201d\u3001\u201c\u4efb\u610f\u89d2\u5ea6\u201d\u3001\u201c\u6c34\u5e73\u7ffb\u8f6c\u753b\u5e03\u201d\u548c\u201c\u5782\u76f4\u7ffb\u8f6c\u753b\u5e03\u201d\u3002\u5728\u6267\u884c\u8fd9\u4e9b\u547d\u4ee4\u65f6\uff0c\u53ef\u4ee5\u65cb\u8f6c\u6216\u7ffb\u8f6c\u6574\u4e2a\u56fe\u50cf\u3002","title":"\u65cb\u8f6c\u753b\u5e03"},{"location":"PS/PS1/#_13","text":"","title":"\u64a4\u9500/\u8fd4\u56de/\u6062\u590d\u6587\u4ef6"},{"location":"PS/PS1/#_14","text":"\u6267\u884c\u201c\u7f16\u8f91 > \u8fd8\u539f\u201d\u547d\u4ee4\u6216\u6309 Ctrl+Z \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u64a4\u9500\u6700\u8fd1\u4e00\u6b21\u7684\u64cd\u4f5c\uff0c\u5c06\u56fe\u50cf\u8fd8\u539f\u5230\u4e0a\u4e00\u6b65\u7684\u64cd\u4f5c\u72b6\u6001\u3002\u5982\u679c\u60f3\u8981\u53d6\u6d88\u8fd8\u539f\u64cd\u4f5c\uff0c\u53ef\u4ee5\u6267\u884c\u201c\u7f16\u8f91 > \u91cd\u505a\u201d\u547d\u4ee4\u3002","title":"\u8fd8\u539f\u4e0e\u91cd\u505a"},{"location":"PS/PS1/#_15","text":"\u7531\u4e8e\u201c\u8fd8\u539f\u201d\u547d\u4ee4\u53ea\u53ef\u4ee5\u8fd8\u539f\u4e00\u6b65\u64cd\u4f5c\uff0c\u800c\u5b9e\u9645\u64cd\u4f5c\u4e2d\u7ecf\u5e38\u9700\u8981\u8fd8\u539f\u591a\u4e2a\u64cd\u4f5c\uff0c\u5c31\u9700\u8981\u8fde\u7eed\u6267\u884c\u201c\u7f16\u8f91 > \u540e\u9000\u4e00\u6b65\u201d\u547d\u4ee4\uff0c\u6216\u8fde\u7eed\u6309 Alt+Ctrl+Z \u7ec4\u5408\u952e\u6765\u9010\u6b65\u64a4\u9500\u64cd\u4f5c\uff1b\u5982\u679c\u8981\u53d6\u6d88\u8fd8\u539f\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u8fde\u7eed\u6267\u884c\u201c\u7f16\u8f91 > \u524d\u8fdb\u4e00\u6b65\u201d\u547d\u4ee4\uff0c\u6216\u8fde\u7eed\u6309 Shift+Ctrl+Z \u7ec4\u5408\u952e\u6765\u9010\u6b65\u6062\u590d\u88ab\u64a4\u9500\u7684\u64cd\u4f5c\u3002","title":"\u524d\u8fdb\u4e00\u6b65\u4e0e\u540e\u9000\u4e00\u6b65"},{"location":"PS/PS1/#_16","text":"\u6267\u884c\u201c\u6587\u4ef6 > \u6062\u590d\u201d\u547d\u4ee4\u6216\u6309 F12 \u952e\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u6587\u4ef6\u6062\u590d\u5230\u6700\u540e\u4e00\u6b21\u4fdd\u5b58\u65f6\u7684\u72b6\u6001\uff0c\u6216\u8fd4\u56de\u5230\u521a\u6253\u5f00\u6587\u4ef6\u65f6\u7684\u72b6\u6001\u3002","title":"\u6062\u590d\u6587\u4ef6\u5230\u521d\u59cb\u72b6\u6001"},{"location":"PS/PS1/#_17","text":"\u6267\u884c\u201c\u7a97\u53e3 > \u5386\u53f2\u8bb0\u5f55\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u5386\u53f2\u8bb0\u5f55\u201d\u9762\u677f\u3002","title":"\u4f7f\u7528\u201c\u5386\u53f2\u8bb0\u5f55\u201d"},{"location":"PS/PS1/#_18","text":"","title":"\u526a\u5207/\u62f7\u8d1d/\u7c98\u8d34\u56fe\u50cf"},{"location":"PS/PS1/#_19","text":"\u521b\u5efa\u9009\u533a\u540e\uff0c\u6267\u884c\u201c\u7f16\u8f91 > \u526a\u5207\u201d\u547d\u4ee4\u6216\u6309 Ctrl+X \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u5c06\u9009\u533a\u4e2d\u7684\u5185\u5bb9\u526a\u5207\u5230\u526a\u8d34\u677f\u4e0a\u3002\u7136\u540e\u6267\u884c\u201c\u7f16\u8f91 > \u7c98\u8d34\u201d\u547d\u4ee4\u6216\u6309 Ctrl+V \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u5c06\u526a\u5207\u7684\u56fe\u50cf\u7c98\u8d34\u5230\u753b\u5e03\u4e2d\uff0c\u5e76\u53ef\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u56fe\u5c42\u3002","title":"\u526a\u5207\u4e0e\u7c98\u8d34"},{"location":"PS/PS1/#_20","text":"\u521b\u5efa\u9009\u533a\u540e\uff0c\u6267\u884c\u201c\u7f16\u8f91 > \u62f7\u8d1d\u201d\u547d\u4ee4\u6216\u6309 Ctrl+C \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u5c06\u9009\u533a\u4e2d\u7684\u56fe\u50cf\u590d\u5236\u5230\u526a\u8d34\u677f\u4e2d\uff0c\u7136\u540e\u6267\u884c\u201c\u7f16\u8f91 > \u7c98\u8d34\u201d\u547d\u4ee4\u6216\u6309 Ctrl+V \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u5c06\u590d\u5236\u7684\u56fe\u50cf\u7c98\u8d34\u5230\u753b\u5e03\u4e2d\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u56fe\u5c42\u3002","title":"\u62f7\u8d1d"},{"location":"PS/PS1/#_21","text":"\u5f53\u6587\u6863\u4e2d\u5305\u542b\u5f88\u591a\u56fe\u5c42\u65f6\uff0c\u6267\u884c\u201c\u9009\u62e9 > \u5168\u9009\u201d\u547d\u4ee4\u6216\u6309 Ctrl+A \u7ec4\u5408\u952e\u5168\u9009\u5f53\u524d\u56fe\u50cf\uff0c\u7136\u540e\u6267\u884c\u201c\u7f16\u8f91 > \u5408\u5e76\u62f7 \u8d1d\u201d\u547d\u4ee4\u6216\u6309 Ctrl+Shift+C \u7ec4\u5408\u952e\uff0c\u53ef\u5c06\u6240\u6709\u53ef\u89c1\u56fe\u5c42\u590d\u5236\u5e76\u5408\u5e76\u5230\u526a\u8d34\u677f\u4e2d\u3002\u6700\u540e\u6309 Ctrl+V \u7ec4\u5408\u952e\u53ef\u4ee5\u5c06\u5408\u5e76\u590d\u5236\u7684\u56fe\u50cf\u7c98\u8d34\u5230\u5f53\u524d\u6587\u6863\u6216\u5176\u4ed6\u6587\u6863\u4e2d\u3002","title":"\u5408\u5e76\u62f7\u8d1d"},{"location":"PS/PS1/#_22","text":"\u5f53\u9009\u4e2d\u7684\u56fe\u5c42\u4e3a\u5305\u542b\u9009\u533a\u72b6\u6001\u4e0b\u7684\u666e\u901a\u56fe\u5c42\u65f6\uff0c\u6267\u884c\u201c\u7f16\u8f91 > \u6e05\u9664\u201d\u547d\u4ee4\u53ef\u4ee5\u6e05\u9664\u9009\u533a\u4e2d\u7684\u56fe\u50cf\u3002\u9009\u4e2d\u56fe\u5c42\u4e3a\u201c\u80cc\u666f\u201d\u56fe\u5c42\u65f6\uff0c\u88ab\u6e05\u9664\u7684\u533a\u57df\u5c06\u586b\u5145\u80cc\u666f\u8272\u3002","title":"\u6e05\u9664\u56fe\u50cf"},{"location":"PS/PS1/#_23","text":"","title":"\u9009\u62e9\u4e0e\u79fb\u52a8\u5bf9\u8c61"},{"location":"PS/PS1/#_24","text":"\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u9009\u62e9\u8981\u79fb\u52a8\u7684\u5bf9\u8c61\u6240\u5728\u7684\u56fe\u5c42\u3002\u7136\u540e\u5728\u5de5\u5177\u7bb1\u4e2d\u5355\u51fb\u201c\u79fb\u52a8\u5de5\u5177\u201d\u6309\u94ae \uff0c\u63a5\u7740\u5728\u753b\u5e03\u4e2d\u5355\u51fb \u9f20\u6807\u5de6\u952e\u5e76\u62d6\u66f3\u5373\u53ef\u79fb\u52a8\u9009\u4e2d\u7684\u5bf9\u8c61\u3002","title":"\u5728\u540c\u4e00\u4e2a\u6587\u6863\u4e2d\u79fb\u52a8\u56fe\u50cf"},{"location":"PS/PS1/#_25","text":"\u82e5\u8981\u5728\u4e0d\u540c\u7684\u6587\u6863\u95f4\u79fb\u52a8\u56fe\u50cf\uff0c\u9996\u5148\u9700\u8981\u4f7f\u7528\u201c\u79fb\u52a8\u5de5 \u5177\u201d\u5c06\u5149\u6807\u653e\u7f6e\u5728\u5176\u4e2d\u4e00\u4e2a\u753b\u5e03\u4e2d\uff0c\u5355\u51fb\u5e76\u62d6\u66f3\u5230\u53e6\u5916\u4e00\u4e2a\u6587\u6863\u7684\u6807\u9898\u680f\u4e0a\uff0c\u505c\u7559\u7247\u523b\u540e\u5373\u53ef\u5207\u6362\u5230\u76ee\u6807\u6587\u6863\uff0c\u63a5\u7740\u5c06\u56fe\u50cf\u79fb\u52a8\u5230\u753b\u9762\u4e2d\u91ca\u653e\u9f20\u6807\u5373\u53ef\u5c06\u56fe\u50cf\u62d6\u66f3\u5230\u6587\u6863\u4e2d\uff0c\u540c\u65f6Photoshop \u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u56fe\u5c42\u3002","title":"\u5728\u4e0d\u540c\u7684\u6587\u6863\u95f4\u79fb\u52a8\u56fe\u50cf"},{"location":"PS/PS1/#_26","text":"\u79fb\u52a8\u3001\u65cb\u8f6c\u3001\u7f29\u653e\u3001\u626d\u66f2\u3001\u659c\u5207\u7b49\u662f\u5904\u7406\u56fe\u50cf\u7684\u57fa\u672c\u65b9\u6cd5\u3002\u5176\u4e2d\u79fb\u52a8\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u79f0\u4e3a\u53d8\u6362\u64cd\u4f5c\uff0c\u800c\u626d\u66f2\u548c\u659c\u5207\u79f0\u4e3a\u53d8\u5f62\u64cd\u4f5c\u3002\u901a\u8fc7\u6267\u884c\u201c\u7f16\u8f91\u201d\u83dc\u5355\u4e0b\u7684 \u201c\u81ea\u7531\u53d8\u6362\u201d\u548c\u201c\u53d8\u6362\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6539\u53d8\u56fe\u50cf\u7684\u5f62\u72b6\u3002","title":"\u56fe\u50cf\u53d8\u6362"},{"location":"PS/PS1/#_27","text":"\u5728\u6267\u884c\u201c\u81ea\u7531\u53d8\u6362\u201d\u6216\u201c\u53d8\u6362\u201d\u64cd\u4f5c\u65f6\uff0c\u5f53\u524d\u5bf9\u8c61\u7684\u5468\u56f4\u4f1a\u51fa\u73b0\u4e00\u4e2a\u5b9a\u754c\u6846\uff0c\u5b9a\u754c\u6846\u7684\u4e2d\u95f4\u6709\u4e00\u4e2a\u4e2d\u5fc3\u70b9\uff0c\u56db\u5468\u8fd8\u6709\u63a7\u5236\u70b9\u3002\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e2d\u5fc3\u70b9\u4f4d\u4e8e\u53d8\u6362\u5bf9\u8c61\u7684\u4e2d\u5fc3\uff0c\u7528\u4e8e\u5b9a\u4e49\u5bf9\u8c61\u7684\u53d8\u6362\u4e2d\u5fc3\uff0c\u62d6\u66f3\u4e2d\u5fc3\u70b9\u53ef\u4ee5\u79fb\u52a8\u5b83\u7684\u4f4d\u7f6e\uff1b\u63a7\u5236\u70b9\u4e3b\u8981\u7528\u6765\u53d8\u6362\u56fe\u50cf\u3002","title":"\u5b9a\u754c\u6846\u3001\u4e2d\u5fc3\u70b9\u548c\u63a7\u5236\u70b9"},{"location":"PS/PS1/#_28","text":"\u5728\u201c\u7f16\u8f91 > \u53d8\u6362\u201d\u83dc\u5355\u4e2d\u63d0\u4f9b\u4e86\u591a\u79cd\u53d8\u6362\u547d\u4ee4\u3002\u4f7f\u7528\u8fd9\u4e9b\u547d\u4ee4\u53ef\u4ee5\u5bf9\u56fe\u5c42\u3001\u8def\u5f84\u3001\u77e2\u91cf\u56fe\u5f62\uff0c\u4ee5\u53ca\u9009\u533a\u4e2d\u7684\u56fe\u50cf\u8fdb\u884c\u53d8\u6362\u64cd\u4f5c\u3002\u53e6\u5916\uff0c\u8fd8\u53ef\u4ee5\u5bf9\u77e2\u91cf\u8499\u7248\u548c Alpha \u5e94\u7528\u53d8\u6362\u3002\u6267\u884c\u201c\u7f16\u8f91 > \u81ea\u7531\u53d8\u6362\u201d\u547d\u4ee4\uff0c\u540c\u6837\u53ef\u4ee5\u4f7f\u5bf9\u8c61\u8fdb\u5165\u53d8\u6362\u72b6\u6001\uff0c\u5982\u679c\u60f3\u8981\u5207\u6362\u53d8\u6362\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5728\u81ea\u7531\u53d8\u6362\u72b6\u6001\u4e0b\u5728\u753b\u9762\u4e2d\u5355\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u8fdb\u884c\u9009\u62e9\u3002","title":"\u53d8\u6362\u4e0e\u81ea\u7531\u53d8\u6362\u547d\u4ee4"},{"location":"PS/PS1/#_29","text":"\u7f29\u653e\uff1a \u4e0d\u6309\u4f4f\u4efb\u4f55\u5feb\u6377\u952e\uff0c\u53ef\u4ee5\u4efb\u610f\u7f29\u653e\u56fe\u50cf\uff1b\u5982\u679c\u6309\u4f4f Shift \u952e\uff0c\u53ef\u4ee5\u7b49\u6bd4\u4f8b\u7f29\u653e\u56fe\u50cf\uff1b\u5982\u679c\u6309\u4f4f Shift+Alt \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u4ee5\u4e2d\u5fc3\u70b9\u4e3a\u57fa\u51c6\u7b49\u6bd4\u4f8b\u7f29\u653e\u56fe\u50cf\u3002 \u65cb\u8f6c\uff1a \u5982\u679c\u4e0d\u6309\u4f4f\u4efb\u4f55\u5feb\u6377\u952e\uff0c\u53ef\u4ee5\u4ee5\u4efb\u610f\u89d2\u5ea6\u65cb\u8f6c\u56fe\u50cf\uff1b\u5982\u679c\u6309\u4f4f Shift \u952e\uff0c\u53ef\u4ee5\u4ee5 15\u00b0\u4e3a\u5355\u4f4d\u65cb\u8f6c\u56fe\u50cf\u3002 \u659c\u5207\uff1a \u4f7f\u7528\u201c\u659c\u5207\u201d\u547d\u4ee4\u53ef\u4ee5\u5728\u4efb\u610f\u65b9\u5411\u3001\u5782\u76f4\u65b9\u5411\u6216\u6c34\u5e73\u65b9\u5411\u4e0a\u503e\u659c\u56fe\u50cf\u3002\u5982\u679c\u4e0d\u6309\u4f4f\u4efb\u4f55\u5feb\u6377\u952e\uff0c\u53ef\u4ee5\u5728\u4efb\u610f\u65b9\u5411\u4e0a\u503e\u659c\u56fe\u50cf\uff1b\u5982\u679c\u6309\u4f4f Shift \u952e\uff0c\u53ef\u4ee5\u5728\u5782\u76f4\u6216\u6c34\u5e73\u65b9\u5411\u4e0a\u503e\u659c\u56fe\u50cf\u3002 \u626d\u66f2\uff1a \u4f7f\u7528\u201c\u626d\u66f2\u201d\u547d\u4ee4\u53ef\u4ee5\u5728\u5404\u4e2a\u65b9\u5411\u4e0a\u4f38\u5c55\u53d8\u6362\u5bf9\u8c61\u3002\u5982\u679c\u4e0d\u6309\u4f4f\u4efb\u4f55\u5feb\u6377\u952e\uff0c\u53ef\u4ee5\u5728\u4efb\u610f\u65b9\u5411\u4e0a\u626d\u66f2\u56fe\u50cf\uff1b\u5982\u679c\u6309\u4f4f Shift \u952e\uff0c\u53ef\u4ee5\u5728\u5782\u76f4\u6216\u6c34\u5e73\u65b9\u5411\u4e0a\u626d\u66f2\u56fe\u50cf\u3002 \u900f\u89c6\uff1a \u4f7f\u7528\u201c\u900f\u89c6\u201d\u547d\u4ee4\u53ef\u4ee5\u5bf9\u53d8\u6362\u5bf9\u8c61\u5e94\u7528\u5355\u70b9\u900f\u89c6\u3002\u62d6\u66f3\u5b9a\u754c\u6846 4 \u4e2a\u89d2\u4e0a\u7684\u63a7\u5236\u70b9\uff0c\u53ef\u4ee5\u5728\u6c34\u5e73\u6216\u5782\u76f4\u65b9\u5411\u4e0a\u5bf9\u56fe\u50cf\u5e94\u7528\u900f\u89c6\u3002 \u53d8\u5f62\uff1a \u5982\u679c\u8981\u5bf9\u56fe\u50cf\u7684\u5c40\u90e8\u5185\u5bb9\u8fdb\u884c\u626d\u66f2\uff0c\u53ef\u4ee5\u4f7f\u7528\u201c\u53d8\u5f62\u201d\u547d\u4ee4\u6765\u64cd\u4f5c\u3002\u6267\u884c\u8be5\u547d\u4ee4\u65f6\uff0c\u56fe\u50cf\u4e0a\u5c06\u4f1a\u51fa\u73b0\u53d8\u5f62\u7f51\u683c\u548c\u951a\u70b9\uff0c\u62d6\u66f3\u951a\u70b9\u6216\u8c03\u6574\u951a\u70b9\u7684\u65b9\u5411\u7ebf\u53ef\u4ee5\u5bf9\u56fe\u50cf\u8fdb\u884c\u66f4\u52a0\u81ea\u7531\u548c\u7075\u6d3b\u7684\u53d8\u5f62\u5904\u7406\u3002 \u65cb\u8f6c 180 \u5ea6 / \u65cb\u8f6c 90 \u5ea6\uff08\u987a\u65f6\u9488\uff09/ \u65cb\u8f6c 90 \u5ea6\uff08\u9006\u65f6\u9488\uff09\uff1a \u8fd9 3 \u4e2a\u547d\u4ee4\u975e\u5e38\u7b80\u5355\uff0c\u4ee5\u56fe 4-107 \u6240\u793a\u56fe\u50cf\u4e3a\u4f8b\uff0c\u6267\u884c\u201c\u65cb\u8f6c 180 \u5ea6\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u56fe\u50cf\u65cb\u8f6c 180\u00b0\uff1b\u6267\u884c\u201c\u65cb\u8f6c 90 \u5ea6\uff08\u987a\u65f6\u9488\uff09\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u56fe\u50cf\u987a\u65f6\u9488\u65cb\u8f6c 90\u00b0\uff1b\u6267\u884c\u201c\u65cb\u8f6c 90 \u5ea6\uff08\u9006\u65f6\u9488\uff09\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u56fe\u50cf\u9006\u65f6\u9488\u65cb\u8f6c 90\u00b0\u3002 \u6c34\u5e73\u7ffb\u8f6c / \u5782\u76f4\u7ffb\u8f6c\uff1a \u8fd9\u4e24\u4e2a\u547d\u4ee4\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u6267\u884c\u201c\u6c34\u5e73\u7ffb\u8f6c\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u56fe\u50cf\u5728\u6c34\u5e73\u65b9\u5411\u4e0a\u8fdb\u884c\u7ffb\u8f6c\uff1b\u6267\u884c\u201c\u5782\u76f4\u7ffb\u8f6c\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u56fe\u50cf\u5728\u5782\u76f4\u65b9\u5411\u4e0a\u8fdb\u884c\u7ffb\u8f6c\u3002","title":"\u81ea\u7531\u53d8\u6362\u64cd\u4f5c"},{"location":"PS/PS1/#_30","text":"\u5728 Photoshop \u4e2d\uff0c\u53ef\u4ee5\u8fb9\u53d8\u6362\u56fe\u50cf\uff0c\u8fb9\u590d\u5236\u56fe\u50cf\u3002\u8fd9\u4e2a\u529f\u80fd\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u7684\u4f7f\u7528\u9891\u7387\u975e\u5e38\u9ad8\u3002\u9009\u4e2d\u5706\u5f62\u6309\u94ae\u56fe\u5c42\uff0c\u6309 Ctrl+Alt+T \u7ec4\u5408\u952e\u8fdb\u5165\u81ea\u7531\u53d8\u6362\u5e76\u590d\u5236\u72b6\u6001\uff0c\u5c06\u4e2d\u5fc3\u70b9\u5b9a\u4f4d\u5728\u53f3\u4e0a\u89d2\uff0c\u7136\u540e\u5c06\u5176\u7f29\u5c0f\u5e76\u5411\u53f3\u79fb\u52a8\u4e00\u6bb5\u8ddd\u79bb\uff0c\u63a5\u7740\u6309 Enter \u952e\u786e\u8ba4\u64cd\u4f5c\u3002\u8fd9\u4e00\u7cfb\u5217\u7684\u64cd\u4f5c\u5960\u5b9a\u4e86\u4e00\u4e2a\u53d8\u6362\u89c4\u5f8b\uff0c\u540c\u65f6 Photoshop\u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u56fe\u5c42\u3002 \u786e \u5b9a \u53d8 \u6362 \u89c4 \u5f8b \u4ee5 \u540e\uff0c \u5c31 \u53ef \u4ee5 \u6309 \u7167 \u8fd9 \u4e2a \u89c4 \u5f8b \u7ee7 \u7eed \u53d8 \u6362 \u5e76 \u590d \u5236 \u56fe \u50cf\u3002 \u5982 \u679c \u8981 \u7ee7 \u7eed \u53d8 \u6362 \u5e76 \u590d \u5236 \u56fe \u50cf\uff0c \u53ef \u4ee5 \u8fde \u7eed \u6309 Shift+Ctrl+Alt+T \u7ec4\u5408\u952e\uff0c\u76f4\u5230\u8fbe\u5230\u8981\u6c42\u4e3a\u6b62\u3002","title":"\u81ea\u7531\u53d8\u6362\u5e76\u590d\u5236\u56fe\u50cf"},{"location":"PS/PS1/#_31","text":"\u201c\u64cd\u63a7\u53d8\u5f62\u201d\u662f\u4e00\u79cd\u53ef\u89c6\u7f51\u683c\u3002\u501f\u52a9\u8be5\u7f51\u683c\uff0c\u53ef\u4ee5\u968f\u610f\u5730\u626d\u66f2\u7279\u5b9a\u56fe\u50cf\u533a\u57df\uff0c\u5e76\u4fdd\u6301\u5176\u4ed6\u533a\u57df\u4e0d\u53d8\u3002\u201c\u64cd\u63a7\u53d8\u5f62\u201d\u901a\u5e38\u7528\u6765\u4fee\u6539\u4eba\u7269\u7684\u52a8\u4f5c\u3001\u53d1\u578b\u7b49\u3002\u6267\u884c\u201c\u7f16\u8f91 > \u64cd\u63a7\u53d8\u5f62\u201d\u547d\u4ee4\uff0c\u56fe\u50cf\u4e0a\u5c06\u4f1a\u5e03\u6ee1\u7f51\u683c\uff0c\u901a\u8fc7\u5728\u56fe\u50cf\u4e2d\u7684\u5173\u952e\u70b9\u4e0a\u6dfb\u52a0\u201c\u56fe\u9489\u201d\uff0c\u53ef\u4ee5\u4fee\u6539\u4eba\u7269\u7684\u4e00\u4e9b\u52a8\u4f5c\u3002","title":"\u64cd\u63a7\u53d8\u5f62"},{"location":"PS/PS1/#_32","text":"\u62cd\u6444\u5168\u666f\u56fe\u50cf\u65f6\u7ecf\u5e38\u9700\u8981\u62cd\u6444\u591a\u5f20\u540e\u5728\u540e\u671f\u8f6f\u4ef6\u4e2d\u8fdb\u884c\u62fc\u63a5\u3002\u4f7f\u7528\u201c\u81ea\u52a8\u5bf9\u9f50\u56fe\u5c42\u201d\u547d\u4ee4\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u56fe\u5c42\u4e2d\u7684\u76f8\u4f3c\u5185\u5bb9\uff08\u5982\u89d2\u548c\u8fb9\uff09\u81ea\u52a8\u5bf9\u9f50\u56fe\u5c42\u3002\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u56fe\u5c42\u4f5c\u4e3a\u53c2\u8003\u56fe\u5c42\uff0c\u4e5f\u53ef\u4ee5\u8ba9 Photoshop \u81ea\u52a8\u9009\u62e9\u53c2\u8003\u56fe\u5c42\uff0c\u5176\u4ed6\u56fe\u5c42\u5c06\u4e0e\u53c2\u8003\u56fe\u5c42\u5bf9\u9f50\uff0c\u4ee5\u4fbf\u4f7f\u5339\u914d\u7684\u5185\u5bb9\u80fd\u591f\u81ea\u52a8\u8fdb\u884c\u53e0\u52a0\u3002","title":"\u81ea\u52a8\u5bf9\u9f50\u56fe\u5c42"},{"location":"PS/PS1/#_33","text":"\u4f7f\u7528\u201c\u81ea\u52a8\u6df7\u5408\u56fe\u5c42\u201d\u547d\u4ee4\u53ef\u4ee5\u7f1d\u5408\u6216\u8005\u7ec4\u5408\u56fe\u50cf\uff0c\u4ece\u800c\u5728\u6700\u7ec8\u56fe\u50cf\u4e2d\u83b7\u5f97\u5e73\u6ed1\u7684\u8fc7\u6e21\u6548\u679c\u3002\u201c\u7f16\u8f91 > \u81ea\u52a8\u6df7\u5408\u56fe\u5c42\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u81ea\u52a8\u6df7\u5408\u56fe\u5c42\u201d\u5bf9\u8bdd\u6846\u3002","title":"\u81ea\u52a8\u6df7\u5408\u56fe\u5c42"},{"location":"PS/PS1/#_34","text":"\u4f7f\u7528\u53d8\u6362\u5236\u4f5c\u5f62\u6001\u5404\u5f02\u7684\u8774\u8776 \u4f7f\u7528\u64cd\u63a7\u53d8\u5f62\u6539\u53d8\u7f8e\u5973\u59ff\u52bf \u5229\u7528\u81ea\u7531\u53d8\u6362\u5c06\u7167\u7247\u653e\u5230\u76f8\u6846\u4e2d \u8c03\u6574\u753b\u9762\u6784\u56fe","title":"\u7ec3\u4e60"},{"location":"PS/PS2/","text":"\u8ba4\u8bc6\u9009\u533a \u9009\u533a\u7684\u57fa\u672c\u529f\u80fd \u5728 Photoshop \u4e2d\u5904\u7406\u56fe\u50cf\u65f6\uff0c\u7ecf\u5e38\u9700\u8981\u9488\u5bf9\u5c40\u90e8\u6548\u679c\u8fdb\u884c\u8c03\u6574\uff0c\u901a\u8fc7\u9009\u62e9\u7279\u5b9a\u533a\u57df\uff0c\u53ef\u4ee5\u5bf9\u8be5\u533a\u57df\u8fdb\u884c\u7f16\u8f91\u5e76\u4fdd\u6301\u672a\u9009\u5b9a\u533a\u57df\u4e0d\u4f1a\u88ab\u6539\u52a8\u3002\u8fd9\u65f6\u5c31\u9700\u8981\u4e3a\u56fe\u50cf\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684\u7f16\u8f91\u533a\u57df\u2014\u2014\u9009\u533a\u3002 \u82e5\u53ea\u9700\u8981\u6539\u53d8\u5361\u7247\u7684\u989c\u8272\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u201c\u78c1\u6027\u5957\u7d22\u5de5\u5177\u201d\u6216\u201c\u94a2\u7b14\u5de5\u5177\u201d\u7ed8\u5236\u51fa\u9700\u8981\u8c03\u8272\u7684\u533a\u57df\u9009\u533a\uff0c\u7136\u540e\u5bf9\u8fd9\u4e9b\u533a\u57df\u8fdb\u884c\u5355\u72ec\u8c03\u8272\u5373\u53ef\u3002 \u9009\u533a\u7684\u53e6\u5916\u4e00\u9879\u91cd\u8981\u529f\u80fd\u662f\u56fe\u50cf\u5c40\u90e8\u7684\u5206\u79bb\uff0c\u4e5f\u5c31\u662f\u62a0\u56fe\u3002\u8981\u5c06\u56fe\u4e2d\u7684\u4e3b\u4f53\u7269\u5206\u79bb\u51fa\u6765\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u201c\u5feb\u901f\u9009\u62e9\u5de5\u5177\u201d\u6216\u201c\u78c1\u6027\u5957\u7d22\u5de5\u5177\u201d\u5236\u4f5c\u4e3b\u4f53\u90e8\u5206\u9009\u533a\uff0c\u63a5\u7740\u5c06\u9009\u533a\u4e2d\u7684\u5185\u5bb9\u590d\u5236\u3001\u7c98\u8d34\u5230\u5176\u4ed6\u5408\u9002\u7684\u80cc\u666f\u6587\u4ef6\u4e2d\uff0c\u5e76\u6dfb\u52a0\u5176\u4ed6\u5408\u6210\u5143\u7d20\uff0c\u5373\u53ef\u5b8c\u6210\u4e00\u4e2a\u5408\u6210\u4f5c\u54c1\u3002 \u5236\u4f5c\u9009\u533a\u5e38\u7528\u65b9\u6cd5 \u9009\u533a\u5de5\u5177\u9009\u62e9\u6cd5 \u5bf9\u4e8e\u6bd4\u8f83\u89c4\u5219\u7684\u5706\u5f62\u6216\u65b9\u5f62\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528\u9009\u6846\u5de5\u5177\u7ec4\u3002\u9009\u6846\u5de5\u5177\u7ec4\u662f Photoshop \u4e2d\u6700\u5e38\u7528\u7684\u9009\u533a\u5de5\u5177\uff0c\u9002\u5408\u4e8e\u5f62\u72b6\u6bd4\u8f83\u89c4\u5219\u7684\u56fe\u6848\uff08\u5982\u5706\u5f62\u3001\u692d\u5706\u5f62\u3001\u6b63\u65b9\u5f62\u3001\u957f\u65b9\u5f62\uff09\u3002 \u5bf9\u4e8e\u4e0d\u89c4\u5219\u9009\u533a\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u5957\u7d22\u5de5\u5177\u7ec4\u3002\u5bf9\u4e8e\u8f6c\u6298\u5904\u6bd4\u8f83\u5f3a\u70c8\u7684\u56fe\u6848\uff0c\u53ef\u4ee5\u4f7f\u7528\u201c\u591a\u8fb9\u5f62\u5957\u7d22\u5de5\u5177\u201d\u6765\u8fdb\u884c\u9009\u62e9\uff1b\u5bf9\u4e8e\u8f6c\u6298\u6bd4\u8f83\u67d4\u548c\u7684\u56fe\u6848\uff0c\u53ef\u4ee5\u4f7f\u7528\u201c\u5957\u7d22\u5de5\u5177\u201d\u3002 \u8def\u5f84\u9009\u62e9\u6cd5 Photoshop \u4e2d\u7684\u201c\u94a2\u7b14\u5de5\u5177\u201d\u5c5e\u4e8e\u5178\u578b\u7684\u77e2\u91cf\u5de5\u5177\uff0c\u901a\u8fc7\u201c\u94a2\u7b14\u5de5\u5177\u201d\u53ef\u4ee5\u7ed8\u5236\u51fa\u5e73\u6ed1\u6216\u8005\u5c16\u9510\u7684\u4efb\u4f55\u5f62\u72b6\u8def\u5f84\uff0c\u7ed8\u5236\u5b8c\u6210\u540e\u53ef\u4ee5\u5c06\u5176\u8f6c\u6362\u4e3a\u76f8\u540c\u5f62\u72b6\u7684\u9009\u533a\uff0c\u4ece\u800c\u9009\u51fa\u5bf9\u8c61\u3002 \u8272\u8c03\u9009\u62e9\u6cd5 \u201c\u9b54\u68d2\u5de5\u5177\u201d\u3001\u201c\u5feb\u901f\u9009\u62e9\u5de5\u5177\u201d\u3001\u201c\u78c1\u6027\u5957\u7d22\u5de5\u5177\u201d\u548c\u201c\u8272\u5f69\u8303\u56f4\u201d\u547d\u4ee4\u90fd\u53ef\u4ee5\u57fa\u4e8e\u8272\u8c03\u4e4b\u95f4\u7684\u5dee\u5f02\u6765\u521b\u5efa\u9009\u533a\u3002\u5982\u679c\u9700\u8981\u9009\u62e9\u7684\u5bf9\u8c61\u4e0e\u80cc\u666f\u4e4b\u95f4\u7684\u8272\u8c03\u5dee\u5f02\u6bd4\u8f83\u660e\u663e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\u548c\u547d\u4ee4\u6765\u8fdb\u884c\u9009\u62e9\u3002 \u901a\u9053\u9009\u62e9\u6cd5 \u901a\u9053\u62a0\u56fe\u4e3b\u8981\u5229\u7528\u5177\u4f53\u56fe\u50cf\u7684\u8272\u76f8\u5dee\u522b\u6216\u8005\u660e\u5ea6\u5dee\u522b\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u5efa\u7acb\u9009\u533a\u3002\u901a\u9053\u62a0\u56fe\u6cd5\u975e\u5e38\u9002\u5408\u4e8e\u534a\u900f\u660e\u548c\u6bdb\u53d1\u7c7b\u5bf9\u8c61\u9009\u533a\u7684\u5236\u4f5c\uff0c\u5982\u679c\u8981\u62a0\u53d6\u6bdb\u53d1\u3001\u5a5a\u7eb1\u3001\u70df\u96fe\u3001\u73bb\u7483\u4ee5\u53ca\u5177\u6709\u8fd0\u52a8\u6a21\u7cca\u7684\u7269\u4f53\uff0c\u4f7f\u7528\u524d\u9762\u4ecb\u7ecd\u7684\u5de5\u5177\u5c31\u5f88\u96be\u4fdd\u7559\u7cbe\u7ec6\u7684\u534a\u900f\u660e\u9009\u533a\uff0c\u8fd9\u65f6\u5c31\u9700\u8981\u4f7f\u7528\u901a\u9053\u6765\u8fdb\u884c\u62a0\u50cf\u3002 \u901a\u9053\u62a0\u56fe\u7ec3\u4e60 \u901a\u9053\u62a0\u56fe\u4e3a\u957f\u53d1\u7f8e\u5973\u6362\u80cc\u666f \u5feb\u901f\u8499\u7248\u9009\u62e9\u6cd5 \u5728\u5feb\u901f\u8499\u7248\u72b6\u6001\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u7ed8\u753b\u5de5\u5177\u548c\u6ee4\u955c\u5bf9\u9009\u533a\u8fdb\u884c\u7ec6\u81f4\u7684\u5904\u7406\u3002\u6bd4\u5982\uff0c\u5982\u679c\u8981\u5c06\u56fe\u4e2d\u7684\u524d\u666f\u5bf9\u8c61\u62a0\u9009\u51fa\u6765\uff0c\u5c31\u53ef\u4ee5\u8fdb\u5165\u5feb\u901f\u8499\u7248\u72b6\u6001\uff0c\u7136\u540e\u4f7f\u7528\u201c\u753b\u7b14\u5de5\u5177\u201d\u5728\u5feb\u901f\u8499\u7248\u4e2d\u7684\u80cc\u666f\u90e8\u5206\u4e0a\u8fdb\u884c\u7ed8\u5236\uff08\u7ed8\u5236\u51fa\u7684\u9009\u533a\u4e3a\u7ea2\u8272\u72b6\u6001\uff09\uff0c\u7ed8\u5236\u5b8c\u6210\u540e\u6309 Q \u952e\u9000\u51fa\u5feb\u901f\u8499\u7248\u72b6\u6001\uff0cPhotoshop \u4f1a\u81ea\u52a8\u521b\u5efa\u9009\u533a\uff0c\u8fd9\u65f6\u5c31\u53ef\u4ee5\u5220\u9664\u80cc\u666f\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u524d\u666f\u5bf9\u8c61\u91cd\u65b0\u6dfb\u52a0\u80cc\u666f\u3002 \u4ece\u5f53\u524d\u56fe\u50cf\u521b\u5efa\u8499\u7248 \u6ca1\u6709\u9009\u533a\u7684\u72b6\u6001\u4e0b\uff0c\u5728\u5de5\u5177\u7bb1\u4e2d\u5355\u51fb\u201c\u4ee5\u5feb\u901f\u8499\u7248\u6a21\u5f0f\u7f16\u8f91\u201d\u6309\u94ae\uff0c\u63a5\u7740\u4f7f\u7528\u7ed8\u753b\u5de5\u5177\u5728\u5feb\u901f\u8499\u7248\u72b6\u6001\u4e0b\u8fdb\u884c\u7ed8\u5236\uff0c\u6309 Q \u952e\u9000\u51fa\u5feb\u901f\u8499\u7248\u6a21\u5f0f\u4ee5\u540e\uff0c\u7ea2\u8272\u4ee5\u5916\u7684\u533a\u57df\u5c31\u4f1a\u88ab\u9009\u4e2d\u3002 \u4f7f\u7528\u9009\u6846\u5de5\u5177 \u77e9\u5f62\u9009\u6846\u5de5\u5177 \u77e9\u5f62\u9009\u6846\u5de5\u5177\u201d\u4e3b\u8981\u7528\u4e8e\u521b\u5efa\u77e9\u5f62\u9009\u533a\u4e0e\u6b63\u65b9\u5f62\u9009\u533a\uff0c\u5728\u753b\u9762\u4e2d\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u5e76\u62d6\u52a8\uff0c\u677e\u5f00\u9f20\u6807\u540e\u5373\u53ef\u5f97\u5230\u9009\u533a\u3002\u6309\u4f4f Shift \u952e\u53ef\u4ee5\u521b\u5efa\u6b63\u65b9\u5f62\u9009\u533a\u3002 \u692d\u5706\u9009\u6846\u5de5\u5177 \u201c\u692d\u5706\u9009\u6846\u5de5\u5177\u201d\u4e3b\u8981\u7528\u6765\u5236\u4f5c\u692d\u5706\u9009\u533a\u548c\u6b63\u5706\u9009\u533a\uff0c\u6309\u4f4f Shift \u952e\u53ef\u4ee5\u521b\u5efa\u6b63\u5706\u9009\u533a\u3002 \u5355\u884c/\u5355\u5217\u9009\u6846\u5de5\u5177 \u201c\u5355\u884c\u9009\u6846\u5de5\u5177\u201d\u548c\u201c\u5355\u5217\u9009\u6846\u5de5\u5177\u201d\u4e3b\u8981\u7528\u6765\u521b\u5efa\u9ad8\u5ea6\u6216\u5bbd\u5ea6\u4e3a 1 \u50cf\u7d20\u7684\u9009\u533a\uff0c\u5e38\u7528\u6765\u5236\u4f5c\u7f51\u683c\u6548\u679c\u3002\u8fd9\u4e24\u79cd\u5de5\u5177\u4f7f\u7528\u65b9\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u5728\u753b\u9762\u4e2d\u5355\u51fb\u5373\u53ef\u5f97\u5230\u9009\u533a\u3002 \u9009\u533a\u7684\u57fa\u672c\u64cd\u4f5c \u79fb\u52a8\u9009\u533a \u4f7f\u7528\u9009\u6846\u5de5\u5177\u521b\u5efa\u9009\u533a\u65f6\uff0c\u5728\u677e\u5f00\u9f20\u6807\u5de6\u952e\u4e4b\u524d\uff0c\u6309\u4f4f Space \u952e\uff08\u5373\u7a7a\u683c\u952e\uff09\u62d6\u62fd\u5149\u6807\uff0c\u53ef\u4ee5\u79fb\u52a8\u9009\u533a\u3002 \u53d8\u6362\u9009\u533a \u9996\u5148\u4f7f\u7528\u201c\u77e9\u5f62\u9009\u6846\u5de5\u5177\u201d\u7ed8\u5236\u4e00\u4e2a\u957f\u65b9\u5f62\u9009\u533a\u3002\u5bf9\u521b\u5efa\u597d\u7684\u9009\u533a\u6267\u884c\u201c\u9009\u62e9>\u53d8\u6362\u9009\u533a\u201d\u547d\u4ee4\u6216\u6309 Alt+S+T \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u5bf9\u9009\u533a\u8fdb\u884c\u79fb\u52a8\u3002 \u5728\u9009\u533a\u53d8\u6362\u72b6\u6001\u4e0b\uff0c\u5728\u753b\u5e03\u4e2d\u53f3\u51fb\uff0c\u8fd8\u53ef\u4ee5\u9009\u62e9\u5176\u4ed6\u53d8\u6362\u65b9\u5f0f\u3002 \u5168\u9009\u4e0e\u53cd\u9009 \u5168\u9009\uff1a\u5168\u9009\u56fe\u50cf\u5e38\u7528\u4e8e\u590d\u5236\u6574\u4e2a\u6587\u6863\u4e2d\u7684\u56fe\u50cf\u3002\u6267\u884c\u201c \u9009 \u62e9 > \u5168 \u90e8 \u201d \u547d \u4ee4 \u6216 \u6309 Ctrl+A \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u9009\u62e9\u5f53\u524d\u6587\u6863\u8fb9\u754c\u5185\u7684\u6240\u6709\u56fe\u50cf\u793a\u3002 \u53cd\u9009\uff1a\u521b\u5efa\u9009\u533a\u4ee5\u540e\uff0c\u6267\u884c\u201c\u9009\u62e9 > \u53cd\u5411\u9009\u62e9\u201d\u547d\u4ee4\u6216\u6309 Shift+Ctrl+I \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u9009\u62e9\u53cd\u76f8\u7684\u9009\u533a\uff0c\u4e5f\u5c31\u662f\u9009\u62e9\u56fe\u50cf\u4e2d\u6ca1\u6709\u88ab\u9009\u62e9\u7684\u90e8\u5206\u3002 \u53d6\u6d88\u9009\u62e9\u4e0e\u91cd\u65b0\u9009\u62e9 \u6267\u884c\u201c\u9009\u62e9 > \u53d6\u6d88\u9009\u62e9\u201d\u547d\u4ee4\u6216\u6309 Ctrl+D \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u53d6\u6d88\u9009\u533a\u72b6\u6001\u3002 \u91cd\u65b0\u9009\u62e9 \u5982\u679c\u8981\u6062\u590d\u88ab\u53d6\u6d88\u7684\u9009\u533a\uff0c\u53ef\u4ee5\u6267\u884c\u201c\u9009\u62e9 > \u91cd\u65b0\u9009\u62e9\u201d\u547d\u4ee4\u793a\u3002 \u9690\u85cf\u4e0e\u663e\u793a\u9009\u533a \u6267\u884c\u201c\u89c6\u56fe > \u663e\u793a > \u9009\u533a\u8fb9\u7f18\u201d\u547d\u4ee4\u53ef\u4ee5\u5207\u6362\u9009\u533a\u7684\u663e\u793a\u4e0e\u9690\u85cf\u3002\u521b\u5efa\u9009\u533a\u540e\uff0c\u6267\u884c\u201c\u89c6\u56fe > \u663e\u793a > \u9009\u533a\u8fb9\u7f18\u201d\u547d\u4ee4\u6216\u6309 Ctrl+H \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u9690\u85cf\u9009\u533a\uff08\u6ce8\u610f\uff0c\u9690\u85cf\u9009\u533a\u540e\uff0c\u9009\u533a\u4ecd\u7136\u5b58\u5728\uff09\uff1b\u5982\u679c\u8981\u5c06\u9690\u85cf\u7684\u9009\u533a\u663e\u793a\u51fa\u6765\uff0c\u53ef\u4ee5\u518d\u6b21\u6267\u884c\u201c\u89c6\u56fe > \u663e\u793a > \u9009\u533a\u8fb9\u7f18\u201d\u547d\u4ee4\u6216\u6309 Ctrl+H \u7ec4\u5408\u952e\u3002 \u9009\u533a\u7684\u8fd0\u7b97 \u5982\u679c\u5f53\u524d\u56fe\u50cf\u4e2d\u5305\u542b\u9009\u533a\uff0c\u5728\u4f7f\u7528\u4efb\u4f55\u9009\u6846\u5de5\u5177\u3001\u5957\u7d22\u5de5\u5177\u6216\u9b54\u68d2\u5de5\u5177\u521b\u5efa\u9009\u533a\u65f6\uff0c\u9009\u9879\u680f\u4e2d\u5c31\u4f1a\u51fa\u73b0\u9009\u533a\u8fd0\u7b97\u7684\u76f8\u5173\u5de5\u5177\u3002 \u6253\u5f00\u56fe\u7247\u6587\u4ef6\uff0c\u7136\u540e\u4f7f\u7528\u201c\u77e9\u5f62\u9009\u6846\u5de5\u5177\u201d\u7ed8\u5236\u4e00\u4e2a\u77e9\u5f62\u9009\u6846\uff0c\u521b\u5efa\u65b0\u9009\u533a\u3002 \u5728\u9009\u9879\u680f\u4e2d\u5355\u51fb\u201c\u6dfb\u52a0\u5230\u9009\u533a\u201d\u6309\u94ae\uff0c\u53ef\u4ee5\u5c06\u5f53\u524d\u521b\u5efa\u7684\u9009\u533a\u6dfb\u52a0\u5230\u539f\u6765\u7684\u9009\u533a\u4e2d\uff08\u6309\u4f4f Shift \u952e\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u76f8\u540c\u7684\u64cd\u4f5c\uff09\u3002 \u5355\u51fb\u201c\u4ece\u9009\u533a\u51cf\u53bb\u201d\u6309\u94ae\uff0c\u53ef\u4ee5\u5c06\u5f53\u524d\u5efa\u9009\u533a\u4ece\u539f\u6765\u7684\u9009\u533a\u4e2d\u51cf\u53bb\uff08\u6309\u4f4f Alt \u952e\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u76f8\u540c\u7684\u64cd\u4f5c\uff09\u3002 \u5355\u51fb\u201c\u4e0e\u9009\u533a\u4ea4\u53c9\u201d\u6309\u94ae\uff0c\u65b0\u5efa\u9009\u533a\u65f6\u53ea\u4fdd\u7559\u539f\u6709\u9009\u533a\u4e0e\u65b0\u5efa\u9009\u533a\u76f8\u4ea4\u7684\u90e8\u5206\uff08\u6309\u4f4f Alt+Shift \u7ec4\u5408\u952e\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u76f8\u540c\u7684\u64cd\u4f5c\uff09\u3002 \u9009\u533a\u8fd0\u7b97\u7ec3\u4e60 \u4f7f\u7528\u9009\u533a\u5236\u4f5c\u5965\u8fd0\u4e94\u73af \u5b58\u50a8\u9009\u533a \u5728 Photoshop \u4e2d\uff0c\u9009\u533a\u53ef\u4ee5\u4f5c\u4e3a\u901a\u9053\u8fdb\u884c\u5b58\u50a8\u3002\u6267\u884c\u201c\u9009\u62e9 > \u5b58\u50a8\u9009\u533a\u201d\u547d\u4ee4\uff0c\u6216\u5728\u201c\u901a\u9053\u201d\u9762\u677f\u4e2d\u5355\u51fb\u201c\u5c06\u9009\u533a\u5b58\u50a8\u4e3a\u901a\u9053\u201d\u6309\u94ae\uff0c\u53ef\u4ee5\u5c06\u9009\u533a\u5b58\u50a8\u4e3aAlpha \u901a\u9053\u8499\u7248\u3002\u6267\u884c\u201c\u9009\u62e9 > \u5b58\u50a8\u9009\u533a\u201d\u547d\u4ee4\uff0cPhotoshop \u4f1a\u5f39\u51fa\u201c\u5b58\u50a8\u9009\u533a\u201d\u5bf9\u8bdd\u6846\u3002 \u8f7d\u5165\u9009\u533a \u6267\u884c\u201c\u9009\u62e9 > \u8f7d\u5165\u9009\u533a\u201d\u547d\u4ee4\uff0c\u6216\u5728\u201c\u901a\u9053\u201d\u9762\u677f\u4e2d\u6309\u4f4f Ctrl \u952e\u7684\u540c\u65f6\u5355\u51fb\u5b58\u50a8\u9009\u533a\u7684\u901a\u9053\u8499\u7248\u7f29\u7565\u56fe\uff0c\u5373\u53ef\u91cd\u65b0\u8f7d\u5165\u5b58\u50a8\u8d77\u6765\u7684\u9009\u533a\u3002\u5f53\u6267\u884c\u201c\u9009\u62e9 > \u8f7d\u5165\u9009\u533a\u201d\u547d\u4ee4\u65f6\uff0cPhotoshop \u4f1a\u5f39\u51fa\u201c\u8f7d\u5165\u9009\u533a\u201d\u5bf9\u8bdd\u6846\u3002 \u5957\u7d22\u5de5\u5177\u7ec4 \u5957\u7d22\u5de5\u5177 \u4f7f\u7528\u201c\u5957\u7d22\u5de5\u5177\u201d\u53ef\u4ee5\u975e\u5e38\u81ea\u7531\u5730\u7ed8\u5236\u51fa\u5f62\u72b6\u4e0d\u89c4\u5219\u7684\u9009\u533a\u3002\u9009\u62e9 \u201c\u5957\u7d22\u5de5\u5177\u201d\u540e\uff0c\u5728\u56fe\u50cf\u4e0a\u62d6\u62fd\u5149\u6807\u7ed8\u5236\u9009\u533a\u8fb9\u754c\uff0c\u5f53\u91ca\u653e\u9f20\u6807\u65f6\uff0c\u9009\u533a\u5c06\u81ea\u52a8\u95ed\u5408\u3002 \u591a\u8fb9\u5f62\u5957\u7d22\u5de5\u5177 \u201c\u591a\u8fb9\u5f62\u5957\u7d22\u5de5\u5177\u201d\u4e0e\u201c\u5957\u7d22\u5de5\u5177\u201d\u7684\u4f7f\u7528\u65b9\u6cd5\u7c7b\u4f3c\u3002\u201c\u591a\u8fb9\u5f62\u5957\u7d22\u5de5\u5177\u201d\u9002\u5408\u4e8e\u521b\u5efa\u4e00\u4e9b\u8f6c\u89d2\u6bd4\u8f83\u5f3a\u70c8\u7684\u9009\u533a\u3002\u5728\u753b\u9762\u4e2d\u5355\u51fb\u786e\u5b9a\u9009\u533a\u7684\u8d77\u70b9\uff0c\u63a5\u7740\u79fb\u52a8\u5149\u6807\u5230\u5176\u4ed6\u4f4d\u7f6e\u518d\u6b21\u5355\u51fb\uff0c\u6700\u540e\u5c06\u5149\u6807\u5b9a\u4f4d\u5230\u8d77\u70b9\u5904\uff0c\u5355\u51fb\u5373\u53ef\u5f97\u5230\u9009\u533a\u3002 \u591a\u8fb9\u5f62\u5957\u7d22\u7ec3\u4e60 \u5229\u7528\u591a\u8fb9\u5f62\u5957\u7d22\u5de5\u5177\u9009\u62e9\u7167\u7247 \u78c1\u6027\u5957\u7d22\u5de5\u5177 \u201c\u78c1\u6027\u5957\u7d22\u5de5\u5177\u201d\u80fd\u591f\u4ee5\u989c\u8272\u4e0a\u7684\u5dee\u5f02\u81ea\u52a8\u8bc6\u522b\u5bf9\u8c61\u7684\u8fb9\u754c\uff0c\u7279\u522b\u9002\u5408\u4e8e\u5feb\u901f\u9009\u62e9\u4e0e\u80cc\u666f\u5bf9\u6bd4\u5f3a\u70c8\u4e14\u8fb9\u7f18\u590d\u6742\u7684\u5bf9\u8c61\u3002\u4f7f\u7528\u201c\u78c1\u6027\u5957\u7d22\u5de5\u5177\u201d\uff0c\u5728\u8981\u9009\u53d6\u7684\u8fb9\u754c\u5904\u5355\u51fb\uff0c\u786e\u5b9a\u9009\u533a\u7684\u8d77\u70b9\uff0c\u63a5\u7740\u62d6\u52a8\u5149\u6807\uff0c\u5957\u7d22\u8fb9\u754c\u4f1a\u81ea\u52a8\u5bf9\u9f50\u56fe\u50cf\u7684\u8fb9\u7f18\u5e76\u7ed8\u5236\u9009\u533a\uff0c\u6700\u540e\u5c06\u5149\u6807\u5b9a\u4f4d\u5230\u9009\u533a\u8d77\u70b9\u5904\uff0c\u5355\u51fb\u5373\u53ef\u5f97\u5230\u9009\u533a\u3002\u8fd8\u53ef\u4ee5\u6309\u4f4f Alt \u952e\u5207\u6362\u5230\u201c\u591a\u8fb9\u5f62\u5957\u7d22\u5de5\u5177\u201d\uff0c\u4ee5\u52fe\u9009\u8f6c\u89d2\u6bd4\u8f83\u5f3a\u70c8\u7684\u8fb9\u7f18\u3002 \u78c1\u6027\u5957\u7d22\u7ec3\u4e60 \u5229\u7528\u78c1\u6027\u5957\u7d22\u5de5\u5177\u66f4\u6362\u80cc\u666f \u5feb\u901f\u9009\u62e9\u5de5\u5177\u7ec4 \u5feb\u901f\u9009\u62e9\u5de5\u5177 \u4f7f\u7528\u201c\u5feb\u901f\u9009\u62e9\u5de5\u5177\u201d\u53ef\u4ee5\u5229\u7528\u53ef\u8c03\u6574\u7684\u5706\u5f62\u7b14\u5c16\u8fc5\u901f\u5730\u7ed8\u5236\u51fa\u9009\u533a\u3002\u4f7f\u7528\u8be5\u5de5\u5177\u5728\u9700\u8981\u9009\u62e9\u7684\u533a\u57df\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u5e76\u62d6\u62fd\uff0c\u5f53\u62d6\u62fd\u7b14\u5c16\u65f6\u9009\u53d6\u8303\u56f4\u4e0d\u4f46\u4f1a\u5411\u5916\u6269\u5f20\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u81ea\u52a8\u5bfb\u627e\u5e76\u6cbf\u7740\u56fe\u50cf\u7684\u8fb9\u7f18\u6765\u63cf\u7ed8\u9009\u533a\u3002 \u9b54\u68d2\u5de5\u5177 \u201c\u9b54\u68d2\u5de5\u5177\u201d\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u7684\u4f7f\u7528\u9891\u7387\u76f8\u5f53\u9ad8\uff0c\u4f7f\u7528\u201c\u9b54\u68d2\u5de5\u5177\u201d\u5728\u56fe\u50cf\u4e2d\u5355\u51fb\u5c31\u80fd\u9009\u53d6\u989c\u8272\u5dee\u522b\u5728\u5bb9\u5dee\u503c\u8303\u56f4\u4e4b\u5185\u7684\u533a\u57df\u3002 \u9b54\u68d2\u5de5\u5177\u7ec3\u4e60 \u4f7f\u7528\u9b54\u68d2\u66f4\u6362\u80cc\u666f \u4f7f\u7528 \u201c\u8272\u5f69\u8303\u56f4\u201d\u547d\u4ee4 \u201c\u8272\u5f69\u8303\u56f4\u201d\u547d\u4ee4\u4e0e\u201c\u9b54\u68d2\u5de5\u5177\u201d\u76f8\u4f3c\uff0c\u53ef\u6839\u636e\u56fe\u50cf\u7684\u989c\u8272\u8303\u56f4\u521b\u5efa\u9009\u533a\uff0c\u4f46\u662f\u8be5\u547d\u4ee4\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u63a7\u5236\u9009\u9879\uff0c\u56e0\u6b64\u8be5\u547d\u4ee4\u7684\u9009\u62e9\u7cbe\u5ea6\u4e5f\u8981\u9ad8\u4e00\u4e9b\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u201c\u8272\u5f69\u8303\u56f4\u201d\u547d\u4ee4\u4e0d\u53ef\u7528\u4e8e 32 \u4f4d / \u901a\u9053\u7684\u56fe\u50cf\u3002\u6267\u884c\u201c\u9009\u62e9 > \u8272\u5f69\u8303\u56f4\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u8272\u5f69\u8303\u56f4\u201d\u5bf9\u8bdd\u6846\u3002 \u9009\u533a\u7684\u7f16\u8f91 \u521b\u5efa\u8fb9\u754c\u9009\u533a \u521b\u5efa\u9009\u533a\u4ee5\u540e\uff0c\u6267\u884c\u201c\u9009\u62e9 > \u4fee\u6539 > \u8fb9\u754c\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u9009\u533a\u7684\u8fb9\u754c\u5411\u5185\u6216\u5411\u5916\u8fdb\u884c\u6269\u5c55\uff0c\u6269\u5c55\u540e\u7684\u9009\u533a\u8fb9\u754c\u5c06\u4e0e\u539f\u6765\u7684\u9009\u533a\u8fb9\u754c\u5f62\u6210\u65b0\u7684\u9009\u533a\u3002 \u5e73\u6ed1\u9009\u533a \u5bf9\u9009\u533a\u6267\u884c\u201c\u9009\u62e9 > \u4fee\u6539 > \u5e73\u6ed1\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u9009\u533a\u8fdb\u884c\u5e73\u6ed1\u5904\u7406\u3002 \u6269\u5c55\u9009\u533a \u7ed8\u5236\u9009\u533a\uff0c\u6267\u884c\u201c\u9009\u62e9 > \u4fee\u6539 > \u6269\u5c55\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u9009\u533a\u5411\u5916\u8fdb\u884c\u6269\u5c55\u3002 \u6536\u7f29\u9009\u533a \u5982\u679c\u8981\u5411\u5185\u6536\u7f29\u9009\u533a\uff0c\u53ef\u4ee5\u6267\u884c\u201c\u9009\u62e9 > \u4fee\u6539 > \u6536\u7f29\u201d\u547d\u4ee4\u3002 \u7fbd\u5316\u9009\u533a \u7fbd\u5316\u9009\u533a\u662f\u901a\u8fc7\u5efa\u7acb\u9009\u533a\u548c\u9009\u533a\u5468\u56f4\u50cf\u7d20\u4e4b\u95f4\u7684\u8f6c\u6362\u8fb9\u754c\u6765\u6a21\u7cca\u8fb9\u7f18\uff0c\u8fd9\u79cd\u6a21\u7cca\u65b9\u5f0f\u5c06\u4e22\u5931\u9009\u533a\u8fb9\u7f18\u7684\u4e00\u4e9b\u7ec6\u8282\u3002\u5bf9\u9009\u533a\u6267\u884c\u201c\u9009\u62e9 > \u4fee\u6539 > \u7fbd\u5316\u201d\u547d\u4ee4\u6216\u6309 Shift+F6 \u7ec4\u5408\u952e\uff0c\u63a5\u7740\u5728\u5f39\u51fa\u7684\u201c\u7fbd\u5316\u9009\u533a\u201d\u5bf9\u8bdd\u6846\u4e2d\u5b9a\u4e49\u9009\u533a\u7684\u201c\u7fbd\u5316\u534a\u5f84\u201d\u5373\u53ef\u3002 \u6269\u5927\u9009\u53d6 \u201c\u6269\u5927\u9009\u53d6\u201d\u547d\u4ee4\u662f\u57fa\u4e8e\u201c\u9b54\u68d2\u5de5\u5177\u201d\u9009\u9879\u680f\u4e2d\u6307\u5b9a\u7684\u201c\u5bb9\u5dee\u201d\u8303\u56f4\u6765\u51b3\u5b9a\u9009\u533a\u7684\u6269\u5c55\u8303\u56f4\u3002\u6bd4\u5982\u4e0b\u56fe \u4e2d\u53ea\u9009\u62e9\u4e86\u4e00\u90e8\u5206\u7c89\u8272\u80cc\u666f\uff0c\u6267\u884c\u201c\u9009\u62e9 > \u6269\u5927\u9009\u53d6\u201d\u547d\u4ee4\u540e\uff0cPhotoshop \u4f1a\u67e5\u627e\u5e76\u9009\u62e9\u90a3\u4e9b\u4e0e\u5f53\u524d\u9009\u533a\u4e2d\u50cf\u7d20\u8272\u8c03\u76f8\u8fd1\u7684\u50cf\u7d20\uff0c\u4ece\u800c\u6269\u5927\u9009\u62e9\u533a\u57df\u3002 \u9009\u53d6\u76f8\u4f3c \u201c\u9009\u53d6\u76f8\u4f3c\u201d\u547d\u4ee4\u4e0e\u201c\u6269\u5927\u9009\u53d6\u201d\u547d\u4ee4\u76f8\u4f3c\uff0c\u90fd\u662f\u57fa\u4e8e\u201c\u9b54\u68d2\u5de5\u5177\u201d\u9009\u9879\u680f\u4e2d\u6307\u5b9a\u7684\u201c\u5bb9\u5dee\u201d\u8303\u56f4\u6765\u51b3\u5b9a\u9009\u533a\u7684\u6269\u5c55\u8303\u56f4\u3002\u6bd4\u5982\uff0c\u4e0b\u56fe\u4e2d\u53ea\u9009\u62e9\u4e86\u4e00\u90e8\u5206\u7c89\u8272\u80cc\u666f\uff0c\u6267\u884c\u201c\u9009\u62e9 > \u9009\u53d6\u76f8\u4f3c\u201d\u547d\u4ee4\u540e\uff0cPhotoshop \u540c\u6837\u4f1a\u67e5\u627e\u5e76\u9009\u62e9\u90a3\u4e9b\u4e0e\u5f53\u524d\u9009\u533a\u4e2d\u50cf\u7d20\u8272\u8c03\u76f8\u8fd1\u7684\u50cf\u7d20\uff0c\u4ece\u800c\u6269\u5927\u9009\u62e9\u533a\u57df\u3002 \u586b\u5145\u4e0e\u63cf\u8fb9 \u586b\u5145 \u5229\u7528\u201c\u586b\u5145\u201d\u547d\u4ee4\u53ef\u4ee5\u5728\u5f53\u524d\u56fe\u5c42\u6216\u9009\u533a\u5185\u586b\u5145\u989c\u8272\u6216\u56fe\u6848\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u586b\u5145\u65f6\u7684\u4e0d\u900f\u660e\u5ea6\u548c\u6df7\u5408\u6a21\u5f0f\u3002\u6267\u884c\u201c\u7f16\u8f91 > \u586b\u5145\u201d\u547d\u4ee4\u6216\u6309 Shift+F4 \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u586b\u5145\u201d\u5bf9\u8bdd\u6846\u3002 \u63cf\u8fb9\u9009\u533a \u4f7f\u7528\u201c\u63cf\u8fb9\u201d\u547d\u4ee4\u53ef\u4ee5\u5728\u9009\u533a\u3001\u8def\u5f84\u6216\u56fe\u5c42\u5468\u56f4\u521b\u5efa\u5f69\u8272\u6216\u8005\u82b1\u7eb9\u7684\u8fb9\u6846\u6548\u679c\u3002\u521b\u5efa\u51fa\u9009\u533a\uff0c\u7136\u540e\u6267\u884c\u201c\u7f16\u8f91 > \u63cf\u8fb9\u201d\u547d\u4ee4\u6216\u6309 Alt+E+S \u7ec4\u5408\u952e\uff0c\u6253\u5f00\u201c\u63cf\u8fb9\u201d\u5bf9\u8bdd\u6846\u3002 \u7ec3\u4e60 \u5229\u7528\u9009\u533a\u5236\u4f5c\u592a\u6781 \u5236\u4f5c\u5fae\u4fe1\u56fe\u6807","title":"\u9009\u533a\u4e0e\u62a0\u56fe"},{"location":"PS/PS2/#_1","text":"","title":"\u8ba4\u8bc6\u9009\u533a"},{"location":"PS/PS2/#_2","text":"\u5728 Photoshop \u4e2d\u5904\u7406\u56fe\u50cf\u65f6\uff0c\u7ecf\u5e38\u9700\u8981\u9488\u5bf9\u5c40\u90e8\u6548\u679c\u8fdb\u884c\u8c03\u6574\uff0c\u901a\u8fc7\u9009\u62e9\u7279\u5b9a\u533a\u57df\uff0c\u53ef\u4ee5\u5bf9\u8be5\u533a\u57df\u8fdb\u884c\u7f16\u8f91\u5e76\u4fdd\u6301\u672a\u9009\u5b9a\u533a\u57df\u4e0d\u4f1a\u88ab\u6539\u52a8\u3002\u8fd9\u65f6\u5c31\u9700\u8981\u4e3a\u56fe\u50cf\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684\u7f16\u8f91\u533a\u57df\u2014\u2014\u9009\u533a\u3002 \u82e5\u53ea\u9700\u8981\u6539\u53d8\u5361\u7247\u7684\u989c\u8272\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u201c\u78c1\u6027\u5957\u7d22\u5de5\u5177\u201d\u6216\u201c\u94a2\u7b14\u5de5\u5177\u201d\u7ed8\u5236\u51fa\u9700\u8981\u8c03\u8272\u7684\u533a\u57df\u9009\u533a\uff0c\u7136\u540e\u5bf9\u8fd9\u4e9b\u533a\u57df\u8fdb\u884c\u5355\u72ec\u8c03\u8272\u5373\u53ef\u3002 \u9009\u533a\u7684\u53e6\u5916\u4e00\u9879\u91cd\u8981\u529f\u80fd\u662f\u56fe\u50cf\u5c40\u90e8\u7684\u5206\u79bb\uff0c\u4e5f\u5c31\u662f\u62a0\u56fe\u3002\u8981\u5c06\u56fe\u4e2d\u7684\u4e3b\u4f53\u7269\u5206\u79bb\u51fa\u6765\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u201c\u5feb\u901f\u9009\u62e9\u5de5\u5177\u201d\u6216\u201c\u78c1\u6027\u5957\u7d22\u5de5\u5177\u201d\u5236\u4f5c\u4e3b\u4f53\u90e8\u5206\u9009\u533a\uff0c\u63a5\u7740\u5c06\u9009\u533a\u4e2d\u7684\u5185\u5bb9\u590d\u5236\u3001\u7c98\u8d34\u5230\u5176\u4ed6\u5408\u9002\u7684\u80cc\u666f\u6587\u4ef6\u4e2d\uff0c\u5e76\u6dfb\u52a0\u5176\u4ed6\u5408\u6210\u5143\u7d20\uff0c\u5373\u53ef\u5b8c\u6210\u4e00\u4e2a\u5408\u6210\u4f5c\u54c1\u3002","title":"\u9009\u533a\u7684\u57fa\u672c\u529f\u80fd"},{"location":"PS/PS2/#_3","text":"","title":"\u5236\u4f5c\u9009\u533a\u5e38\u7528\u65b9\u6cd5"},{"location":"PS/PS2/#_4","text":"\u5bf9\u4e8e\u6bd4\u8f83\u89c4\u5219\u7684\u5706\u5f62\u6216\u65b9\u5f62\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528\u9009\u6846\u5de5\u5177\u7ec4\u3002\u9009\u6846\u5de5\u5177\u7ec4\u662f Photoshop \u4e2d\u6700\u5e38\u7528\u7684\u9009\u533a\u5de5\u5177\uff0c\u9002\u5408\u4e8e\u5f62\u72b6\u6bd4\u8f83\u89c4\u5219\u7684\u56fe\u6848\uff08\u5982\u5706\u5f62\u3001\u692d\u5706\u5f62\u3001\u6b63\u65b9\u5f62\u3001\u957f\u65b9\u5f62\uff09\u3002 \u5bf9\u4e8e\u4e0d\u89c4\u5219\u9009\u533a\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u5957\u7d22\u5de5\u5177\u7ec4\u3002\u5bf9\u4e8e\u8f6c\u6298\u5904\u6bd4\u8f83\u5f3a\u70c8\u7684\u56fe\u6848\uff0c\u53ef\u4ee5\u4f7f\u7528\u201c\u591a\u8fb9\u5f62\u5957\u7d22\u5de5\u5177\u201d\u6765\u8fdb\u884c\u9009\u62e9\uff1b\u5bf9\u4e8e\u8f6c\u6298\u6bd4\u8f83\u67d4\u548c\u7684\u56fe\u6848\uff0c\u53ef\u4ee5\u4f7f\u7528\u201c\u5957\u7d22\u5de5\u5177\u201d\u3002","title":"\u9009\u533a\u5de5\u5177\u9009\u62e9\u6cd5"},{"location":"PS/PS2/#_5","text":"Photoshop \u4e2d\u7684\u201c\u94a2\u7b14\u5de5\u5177\u201d\u5c5e\u4e8e\u5178\u578b\u7684\u77e2\u91cf\u5de5\u5177\uff0c\u901a\u8fc7\u201c\u94a2\u7b14\u5de5\u5177\u201d\u53ef\u4ee5\u7ed8\u5236\u51fa\u5e73\u6ed1\u6216\u8005\u5c16\u9510\u7684\u4efb\u4f55\u5f62\u72b6\u8def\u5f84\uff0c\u7ed8\u5236\u5b8c\u6210\u540e\u53ef\u4ee5\u5c06\u5176\u8f6c\u6362\u4e3a\u76f8\u540c\u5f62\u72b6\u7684\u9009\u533a\uff0c\u4ece\u800c\u9009\u51fa\u5bf9\u8c61\u3002","title":"\u8def\u5f84\u9009\u62e9\u6cd5"},{"location":"PS/PS2/#_6","text":"\u201c\u9b54\u68d2\u5de5\u5177\u201d\u3001\u201c\u5feb\u901f\u9009\u62e9\u5de5\u5177\u201d\u3001\u201c\u78c1\u6027\u5957\u7d22\u5de5\u5177\u201d\u548c\u201c\u8272\u5f69\u8303\u56f4\u201d\u547d\u4ee4\u90fd\u53ef\u4ee5\u57fa\u4e8e\u8272\u8c03\u4e4b\u95f4\u7684\u5dee\u5f02\u6765\u521b\u5efa\u9009\u533a\u3002\u5982\u679c\u9700\u8981\u9009\u62e9\u7684\u5bf9\u8c61\u4e0e\u80cc\u666f\u4e4b\u95f4\u7684\u8272\u8c03\u5dee\u5f02\u6bd4\u8f83\u660e\u663e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\u548c\u547d\u4ee4\u6765\u8fdb\u884c\u9009\u62e9\u3002","title":"\u8272\u8c03\u9009\u62e9\u6cd5"},{"location":"PS/PS2/#_7","text":"\u901a\u9053\u62a0\u56fe\u4e3b\u8981\u5229\u7528\u5177\u4f53\u56fe\u50cf\u7684\u8272\u76f8\u5dee\u522b\u6216\u8005\u660e\u5ea6\u5dee\u522b\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u5efa\u7acb\u9009\u533a\u3002\u901a\u9053\u62a0\u56fe\u6cd5\u975e\u5e38\u9002\u5408\u4e8e\u534a\u900f\u660e\u548c\u6bdb\u53d1\u7c7b\u5bf9\u8c61\u9009\u533a\u7684\u5236\u4f5c\uff0c\u5982\u679c\u8981\u62a0\u53d6\u6bdb\u53d1\u3001\u5a5a\u7eb1\u3001\u70df\u96fe\u3001\u73bb\u7483\u4ee5\u53ca\u5177\u6709\u8fd0\u52a8\u6a21\u7cca\u7684\u7269\u4f53\uff0c\u4f7f\u7528\u524d\u9762\u4ecb\u7ecd\u7684\u5de5\u5177\u5c31\u5f88\u96be\u4fdd\u7559\u7cbe\u7ec6\u7684\u534a\u900f\u660e\u9009\u533a\uff0c\u8fd9\u65f6\u5c31\u9700\u8981\u4f7f\u7528\u901a\u9053\u6765\u8fdb\u884c\u62a0\u50cf\u3002","title":"\u901a\u9053\u9009\u62e9\u6cd5"},{"location":"PS/PS2/#_8","text":"\u901a\u9053\u62a0\u56fe\u4e3a\u957f\u53d1\u7f8e\u5973\u6362\u80cc\u666f","title":"\u901a\u9053\u62a0\u56fe\u7ec3\u4e60"},{"location":"PS/PS2/#_9","text":"\u5728\u5feb\u901f\u8499\u7248\u72b6\u6001\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u7ed8\u753b\u5de5\u5177\u548c\u6ee4\u955c\u5bf9\u9009\u533a\u8fdb\u884c\u7ec6\u81f4\u7684\u5904\u7406\u3002\u6bd4\u5982\uff0c\u5982\u679c\u8981\u5c06\u56fe\u4e2d\u7684\u524d\u666f\u5bf9\u8c61\u62a0\u9009\u51fa\u6765\uff0c\u5c31\u53ef\u4ee5\u8fdb\u5165\u5feb\u901f\u8499\u7248\u72b6\u6001\uff0c\u7136\u540e\u4f7f\u7528\u201c\u753b\u7b14\u5de5\u5177\u201d\u5728\u5feb\u901f\u8499\u7248\u4e2d\u7684\u80cc\u666f\u90e8\u5206\u4e0a\u8fdb\u884c\u7ed8\u5236\uff08\u7ed8\u5236\u51fa\u7684\u9009\u533a\u4e3a\u7ea2\u8272\u72b6\u6001\uff09\uff0c\u7ed8\u5236\u5b8c\u6210\u540e\u6309 Q \u952e\u9000\u51fa\u5feb\u901f\u8499\u7248\u72b6\u6001\uff0cPhotoshop \u4f1a\u81ea\u52a8\u521b\u5efa\u9009\u533a\uff0c\u8fd9\u65f6\u5c31\u53ef\u4ee5\u5220\u9664\u80cc\u666f\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u524d\u666f\u5bf9\u8c61\u91cd\u65b0\u6dfb\u52a0\u80cc\u666f\u3002 \u4ece\u5f53\u524d\u56fe\u50cf\u521b\u5efa\u8499\u7248 \u6ca1\u6709\u9009\u533a\u7684\u72b6\u6001\u4e0b\uff0c\u5728\u5de5\u5177\u7bb1\u4e2d\u5355\u51fb\u201c\u4ee5\u5feb\u901f\u8499\u7248\u6a21\u5f0f\u7f16\u8f91\u201d\u6309\u94ae\uff0c\u63a5\u7740\u4f7f\u7528\u7ed8\u753b\u5de5\u5177\u5728\u5feb\u901f\u8499\u7248\u72b6\u6001\u4e0b\u8fdb\u884c\u7ed8\u5236\uff0c\u6309 Q \u952e\u9000\u51fa\u5feb\u901f\u8499\u7248\u6a21\u5f0f\u4ee5\u540e\uff0c\u7ea2\u8272\u4ee5\u5916\u7684\u533a\u57df\u5c31\u4f1a\u88ab\u9009\u4e2d\u3002","title":"\u5feb\u901f\u8499\u7248\u9009\u62e9\u6cd5"},{"location":"PS/PS2/#_10","text":"","title":"\u4f7f\u7528\u9009\u6846\u5de5\u5177"},{"location":"PS/PS2/#_11","text":"\u77e9\u5f62\u9009\u6846\u5de5\u5177\u201d\u4e3b\u8981\u7528\u4e8e\u521b\u5efa\u77e9\u5f62\u9009\u533a\u4e0e\u6b63\u65b9\u5f62\u9009\u533a\uff0c\u5728\u753b\u9762\u4e2d\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u5e76\u62d6\u52a8\uff0c\u677e\u5f00\u9f20\u6807\u540e\u5373\u53ef\u5f97\u5230\u9009\u533a\u3002\u6309\u4f4f Shift \u952e\u53ef\u4ee5\u521b\u5efa\u6b63\u65b9\u5f62\u9009\u533a\u3002","title":"\u77e9\u5f62\u9009\u6846\u5de5\u5177"},{"location":"PS/PS2/#_12","text":"\u201c\u692d\u5706\u9009\u6846\u5de5\u5177\u201d\u4e3b\u8981\u7528\u6765\u5236\u4f5c\u692d\u5706\u9009\u533a\u548c\u6b63\u5706\u9009\u533a\uff0c\u6309\u4f4f Shift \u952e\u53ef\u4ee5\u521b\u5efa\u6b63\u5706\u9009\u533a\u3002","title":"\u692d\u5706\u9009\u6846\u5de5\u5177"},{"location":"PS/PS2/#_13","text":"\u201c\u5355\u884c\u9009\u6846\u5de5\u5177\u201d\u548c\u201c\u5355\u5217\u9009\u6846\u5de5\u5177\u201d\u4e3b\u8981\u7528\u6765\u521b\u5efa\u9ad8\u5ea6\u6216\u5bbd\u5ea6\u4e3a 1 \u50cf\u7d20\u7684\u9009\u533a\uff0c\u5e38\u7528\u6765\u5236\u4f5c\u7f51\u683c\u6548\u679c\u3002\u8fd9\u4e24\u79cd\u5de5\u5177\u4f7f\u7528\u65b9\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u5728\u753b\u9762\u4e2d\u5355\u51fb\u5373\u53ef\u5f97\u5230\u9009\u533a\u3002","title":"\u5355\u884c/\u5355\u5217\u9009\u6846\u5de5\u5177"},{"location":"PS/PS2/#_14","text":"","title":"\u9009\u533a\u7684\u57fa\u672c\u64cd\u4f5c"},{"location":"PS/PS2/#_15","text":"\u4f7f\u7528\u9009\u6846\u5de5\u5177\u521b\u5efa\u9009\u533a\u65f6\uff0c\u5728\u677e\u5f00\u9f20\u6807\u5de6\u952e\u4e4b\u524d\uff0c\u6309\u4f4f Space \u952e\uff08\u5373\u7a7a\u683c\u952e\uff09\u62d6\u62fd\u5149\u6807\uff0c\u53ef\u4ee5\u79fb\u52a8\u9009\u533a\u3002","title":"\u79fb\u52a8\u9009\u533a"},{"location":"PS/PS2/#_16","text":"\u9996\u5148\u4f7f\u7528\u201c\u77e9\u5f62\u9009\u6846\u5de5\u5177\u201d\u7ed8\u5236\u4e00\u4e2a\u957f\u65b9\u5f62\u9009\u533a\u3002\u5bf9\u521b\u5efa\u597d\u7684\u9009\u533a\u6267\u884c\u201c\u9009\u62e9>\u53d8\u6362\u9009\u533a\u201d\u547d\u4ee4\u6216\u6309 Alt+S+T \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u5bf9\u9009\u533a\u8fdb\u884c\u79fb\u52a8\u3002 \u5728\u9009\u533a\u53d8\u6362\u72b6\u6001\u4e0b\uff0c\u5728\u753b\u5e03\u4e2d\u53f3\u51fb\uff0c\u8fd8\u53ef\u4ee5\u9009\u62e9\u5176\u4ed6\u53d8\u6362\u65b9\u5f0f\u3002","title":"\u53d8\u6362\u9009\u533a"},{"location":"PS/PS2/#_17","text":"\u5168\u9009\uff1a\u5168\u9009\u56fe\u50cf\u5e38\u7528\u4e8e\u590d\u5236\u6574\u4e2a\u6587\u6863\u4e2d\u7684\u56fe\u50cf\u3002\u6267\u884c\u201c \u9009 \u62e9 > \u5168 \u90e8 \u201d \u547d \u4ee4 \u6216 \u6309 Ctrl+A \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u9009\u62e9\u5f53\u524d\u6587\u6863\u8fb9\u754c\u5185\u7684\u6240\u6709\u56fe\u50cf\u793a\u3002 \u53cd\u9009\uff1a\u521b\u5efa\u9009\u533a\u4ee5\u540e\uff0c\u6267\u884c\u201c\u9009\u62e9 > \u53cd\u5411\u9009\u62e9\u201d\u547d\u4ee4\u6216\u6309 Shift+Ctrl+I \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u9009\u62e9\u53cd\u76f8\u7684\u9009\u533a\uff0c\u4e5f\u5c31\u662f\u9009\u62e9\u56fe\u50cf\u4e2d\u6ca1\u6709\u88ab\u9009\u62e9\u7684\u90e8\u5206\u3002","title":"\u5168\u9009\u4e0e\u53cd\u9009"},{"location":"PS/PS2/#_18","text":"\u6267\u884c\u201c\u9009\u62e9 > \u53d6\u6d88\u9009\u62e9\u201d\u547d\u4ee4\u6216\u6309 Ctrl+D \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u53d6\u6d88\u9009\u533a\u72b6\u6001\u3002","title":"\u53d6\u6d88\u9009\u62e9\u4e0e\u91cd\u65b0\u9009\u62e9"},{"location":"PS/PS2/#_19","text":"\u5982\u679c\u8981\u6062\u590d\u88ab\u53d6\u6d88\u7684\u9009\u533a\uff0c\u53ef\u4ee5\u6267\u884c\u201c\u9009\u62e9 > \u91cd\u65b0\u9009\u62e9\u201d\u547d\u4ee4\u793a\u3002","title":"\u91cd\u65b0\u9009\u62e9"},{"location":"PS/PS2/#_20","text":"\u6267\u884c\u201c\u89c6\u56fe > \u663e\u793a > \u9009\u533a\u8fb9\u7f18\u201d\u547d\u4ee4\u53ef\u4ee5\u5207\u6362\u9009\u533a\u7684\u663e\u793a\u4e0e\u9690\u85cf\u3002\u521b\u5efa\u9009\u533a\u540e\uff0c\u6267\u884c\u201c\u89c6\u56fe > \u663e\u793a > \u9009\u533a\u8fb9\u7f18\u201d\u547d\u4ee4\u6216\u6309 Ctrl+H \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u9690\u85cf\u9009\u533a\uff08\u6ce8\u610f\uff0c\u9690\u85cf\u9009\u533a\u540e\uff0c\u9009\u533a\u4ecd\u7136\u5b58\u5728\uff09\uff1b\u5982\u679c\u8981\u5c06\u9690\u85cf\u7684\u9009\u533a\u663e\u793a\u51fa\u6765\uff0c\u53ef\u4ee5\u518d\u6b21\u6267\u884c\u201c\u89c6\u56fe > \u663e\u793a > \u9009\u533a\u8fb9\u7f18\u201d\u547d\u4ee4\u6216\u6309 Ctrl+H \u7ec4\u5408\u952e\u3002","title":"\u9690\u85cf\u4e0e\u663e\u793a\u9009\u533a"},{"location":"PS/PS2/#_21","text":"\u5982\u679c\u5f53\u524d\u56fe\u50cf\u4e2d\u5305\u542b\u9009\u533a\uff0c\u5728\u4f7f\u7528\u4efb\u4f55\u9009\u6846\u5de5\u5177\u3001\u5957\u7d22\u5de5\u5177\u6216\u9b54\u68d2\u5de5\u5177\u521b\u5efa\u9009\u533a\u65f6\uff0c\u9009\u9879\u680f\u4e2d\u5c31\u4f1a\u51fa\u73b0\u9009\u533a\u8fd0\u7b97\u7684\u76f8\u5173\u5de5\u5177\u3002 \u6253\u5f00\u56fe\u7247\u6587\u4ef6\uff0c\u7136\u540e\u4f7f\u7528\u201c\u77e9\u5f62\u9009\u6846\u5de5\u5177\u201d\u7ed8\u5236\u4e00\u4e2a\u77e9\u5f62\u9009\u6846\uff0c\u521b\u5efa\u65b0\u9009\u533a\u3002 \u5728\u9009\u9879\u680f\u4e2d\u5355\u51fb\u201c\u6dfb\u52a0\u5230\u9009\u533a\u201d\u6309\u94ae\uff0c\u53ef\u4ee5\u5c06\u5f53\u524d\u521b\u5efa\u7684\u9009\u533a\u6dfb\u52a0\u5230\u539f\u6765\u7684\u9009\u533a\u4e2d\uff08\u6309\u4f4f Shift \u952e\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u76f8\u540c\u7684\u64cd\u4f5c\uff09\u3002 \u5355\u51fb\u201c\u4ece\u9009\u533a\u51cf\u53bb\u201d\u6309\u94ae\uff0c\u53ef\u4ee5\u5c06\u5f53\u524d\u5efa\u9009\u533a\u4ece\u539f\u6765\u7684\u9009\u533a\u4e2d\u51cf\u53bb\uff08\u6309\u4f4f Alt \u952e\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u76f8\u540c\u7684\u64cd\u4f5c\uff09\u3002 \u5355\u51fb\u201c\u4e0e\u9009\u533a\u4ea4\u53c9\u201d\u6309\u94ae\uff0c\u65b0\u5efa\u9009\u533a\u65f6\u53ea\u4fdd\u7559\u539f\u6709\u9009\u533a\u4e0e\u65b0\u5efa\u9009\u533a\u76f8\u4ea4\u7684\u90e8\u5206\uff08\u6309\u4f4f Alt+Shift \u7ec4\u5408\u952e\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u76f8\u540c\u7684\u64cd\u4f5c\uff09\u3002","title":"\u9009\u533a\u7684\u8fd0\u7b97"},{"location":"PS/PS2/#_22","text":"\u4f7f\u7528\u9009\u533a\u5236\u4f5c\u5965\u8fd0\u4e94\u73af","title":"\u9009\u533a\u8fd0\u7b97\u7ec3\u4e60"},{"location":"PS/PS2/#_23","text":"\u5728 Photoshop \u4e2d\uff0c\u9009\u533a\u53ef\u4ee5\u4f5c\u4e3a\u901a\u9053\u8fdb\u884c\u5b58\u50a8\u3002\u6267\u884c\u201c\u9009\u62e9 > \u5b58\u50a8\u9009\u533a\u201d\u547d\u4ee4\uff0c\u6216\u5728\u201c\u901a\u9053\u201d\u9762\u677f\u4e2d\u5355\u51fb\u201c\u5c06\u9009\u533a\u5b58\u50a8\u4e3a\u901a\u9053\u201d\u6309\u94ae\uff0c\u53ef\u4ee5\u5c06\u9009\u533a\u5b58\u50a8\u4e3aAlpha \u901a\u9053\u8499\u7248\u3002\u6267\u884c\u201c\u9009\u62e9 > \u5b58\u50a8\u9009\u533a\u201d\u547d\u4ee4\uff0cPhotoshop \u4f1a\u5f39\u51fa\u201c\u5b58\u50a8\u9009\u533a\u201d\u5bf9\u8bdd\u6846\u3002","title":"\u5b58\u50a8\u9009\u533a"},{"location":"PS/PS2/#_24","text":"\u6267\u884c\u201c\u9009\u62e9 > \u8f7d\u5165\u9009\u533a\u201d\u547d\u4ee4\uff0c\u6216\u5728\u201c\u901a\u9053\u201d\u9762\u677f\u4e2d\u6309\u4f4f Ctrl \u952e\u7684\u540c\u65f6\u5355\u51fb\u5b58\u50a8\u9009\u533a\u7684\u901a\u9053\u8499\u7248\u7f29\u7565\u56fe\uff0c\u5373\u53ef\u91cd\u65b0\u8f7d\u5165\u5b58\u50a8\u8d77\u6765\u7684\u9009\u533a\u3002\u5f53\u6267\u884c\u201c\u9009\u62e9 > \u8f7d\u5165\u9009\u533a\u201d\u547d\u4ee4\u65f6\uff0cPhotoshop \u4f1a\u5f39\u51fa\u201c\u8f7d\u5165\u9009\u533a\u201d\u5bf9\u8bdd\u6846\u3002","title":"\u8f7d\u5165\u9009\u533a"},{"location":"PS/PS2/#_25","text":"","title":"\u5957\u7d22\u5de5\u5177\u7ec4"},{"location":"PS/PS2/#_26","text":"\u4f7f\u7528\u201c\u5957\u7d22\u5de5\u5177\u201d\u53ef\u4ee5\u975e\u5e38\u81ea\u7531\u5730\u7ed8\u5236\u51fa\u5f62\u72b6\u4e0d\u89c4\u5219\u7684\u9009\u533a\u3002\u9009\u62e9 \u201c\u5957\u7d22\u5de5\u5177\u201d\u540e\uff0c\u5728\u56fe\u50cf\u4e0a\u62d6\u62fd\u5149\u6807\u7ed8\u5236\u9009\u533a\u8fb9\u754c\uff0c\u5f53\u91ca\u653e\u9f20\u6807\u65f6\uff0c\u9009\u533a\u5c06\u81ea\u52a8\u95ed\u5408\u3002","title":"\u5957\u7d22\u5de5\u5177"},{"location":"PS/PS2/#_27","text":"\u201c\u591a\u8fb9\u5f62\u5957\u7d22\u5de5\u5177\u201d\u4e0e\u201c\u5957\u7d22\u5de5\u5177\u201d\u7684\u4f7f\u7528\u65b9\u6cd5\u7c7b\u4f3c\u3002\u201c\u591a\u8fb9\u5f62\u5957\u7d22\u5de5\u5177\u201d\u9002\u5408\u4e8e\u521b\u5efa\u4e00\u4e9b\u8f6c\u89d2\u6bd4\u8f83\u5f3a\u70c8\u7684\u9009\u533a\u3002\u5728\u753b\u9762\u4e2d\u5355\u51fb\u786e\u5b9a\u9009\u533a\u7684\u8d77\u70b9\uff0c\u63a5\u7740\u79fb\u52a8\u5149\u6807\u5230\u5176\u4ed6\u4f4d\u7f6e\u518d\u6b21\u5355\u51fb\uff0c\u6700\u540e\u5c06\u5149\u6807\u5b9a\u4f4d\u5230\u8d77\u70b9\u5904\uff0c\u5355\u51fb\u5373\u53ef\u5f97\u5230\u9009\u533a\u3002","title":"\u591a\u8fb9\u5f62\u5957\u7d22\u5de5\u5177"},{"location":"PS/PS2/#_28","text":"\u5229\u7528\u591a\u8fb9\u5f62\u5957\u7d22\u5de5\u5177\u9009\u62e9\u7167\u7247","title":"\u591a\u8fb9\u5f62\u5957\u7d22\u7ec3\u4e60"},{"location":"PS/PS2/#_29","text":"\u201c\u78c1\u6027\u5957\u7d22\u5de5\u5177\u201d\u80fd\u591f\u4ee5\u989c\u8272\u4e0a\u7684\u5dee\u5f02\u81ea\u52a8\u8bc6\u522b\u5bf9\u8c61\u7684\u8fb9\u754c\uff0c\u7279\u522b\u9002\u5408\u4e8e\u5feb\u901f\u9009\u62e9\u4e0e\u80cc\u666f\u5bf9\u6bd4\u5f3a\u70c8\u4e14\u8fb9\u7f18\u590d\u6742\u7684\u5bf9\u8c61\u3002\u4f7f\u7528\u201c\u78c1\u6027\u5957\u7d22\u5de5\u5177\u201d\uff0c\u5728\u8981\u9009\u53d6\u7684\u8fb9\u754c\u5904\u5355\u51fb\uff0c\u786e\u5b9a\u9009\u533a\u7684\u8d77\u70b9\uff0c\u63a5\u7740\u62d6\u52a8\u5149\u6807\uff0c\u5957\u7d22\u8fb9\u754c\u4f1a\u81ea\u52a8\u5bf9\u9f50\u56fe\u50cf\u7684\u8fb9\u7f18\u5e76\u7ed8\u5236\u9009\u533a\uff0c\u6700\u540e\u5c06\u5149\u6807\u5b9a\u4f4d\u5230\u9009\u533a\u8d77\u70b9\u5904\uff0c\u5355\u51fb\u5373\u53ef\u5f97\u5230\u9009\u533a\u3002\u8fd8\u53ef\u4ee5\u6309\u4f4f Alt \u952e\u5207\u6362\u5230\u201c\u591a\u8fb9\u5f62\u5957\u7d22\u5de5\u5177\u201d\uff0c\u4ee5\u52fe\u9009\u8f6c\u89d2\u6bd4\u8f83\u5f3a\u70c8\u7684\u8fb9\u7f18\u3002","title":"\u78c1\u6027\u5957\u7d22\u5de5\u5177"},{"location":"PS/PS2/#_30","text":"\u5229\u7528\u78c1\u6027\u5957\u7d22\u5de5\u5177\u66f4\u6362\u80cc\u666f","title":"\u78c1\u6027\u5957\u7d22\u7ec3\u4e60"},{"location":"PS/PS2/#_31","text":"","title":"\u5feb\u901f\u9009\u62e9\u5de5\u5177\u7ec4"},{"location":"PS/PS2/#_32","text":"\u4f7f\u7528\u201c\u5feb\u901f\u9009\u62e9\u5de5\u5177\u201d\u53ef\u4ee5\u5229\u7528\u53ef\u8c03\u6574\u7684\u5706\u5f62\u7b14\u5c16\u8fc5\u901f\u5730\u7ed8\u5236\u51fa\u9009\u533a\u3002\u4f7f\u7528\u8be5\u5de5\u5177\u5728\u9700\u8981\u9009\u62e9\u7684\u533a\u57df\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u5e76\u62d6\u62fd\uff0c\u5f53\u62d6\u62fd\u7b14\u5c16\u65f6\u9009\u53d6\u8303\u56f4\u4e0d\u4f46\u4f1a\u5411\u5916\u6269\u5f20\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u81ea\u52a8\u5bfb\u627e\u5e76\u6cbf\u7740\u56fe\u50cf\u7684\u8fb9\u7f18\u6765\u63cf\u7ed8\u9009\u533a\u3002","title":"\u5feb\u901f\u9009\u62e9\u5de5\u5177"},{"location":"PS/PS2/#_33","text":"\u201c\u9b54\u68d2\u5de5\u5177\u201d\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u7684\u4f7f\u7528\u9891\u7387\u76f8\u5f53\u9ad8\uff0c\u4f7f\u7528\u201c\u9b54\u68d2\u5de5\u5177\u201d\u5728\u56fe\u50cf\u4e2d\u5355\u51fb\u5c31\u80fd\u9009\u53d6\u989c\u8272\u5dee\u522b\u5728\u5bb9\u5dee\u503c\u8303\u56f4\u4e4b\u5185\u7684\u533a\u57df\u3002","title":"\u9b54\u68d2\u5de5\u5177"},{"location":"PS/PS2/#_34","text":"\u4f7f\u7528\u9b54\u68d2\u66f4\u6362\u80cc\u666f","title":"\u9b54\u68d2\u5de5\u5177\u7ec3\u4e60"},{"location":"PS/PS2/#_35","text":"\u201c\u8272\u5f69\u8303\u56f4\u201d\u547d\u4ee4\u4e0e\u201c\u9b54\u68d2\u5de5\u5177\u201d\u76f8\u4f3c\uff0c\u53ef\u6839\u636e\u56fe\u50cf\u7684\u989c\u8272\u8303\u56f4\u521b\u5efa\u9009\u533a\uff0c\u4f46\u662f\u8be5\u547d\u4ee4\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u63a7\u5236\u9009\u9879\uff0c\u56e0\u6b64\u8be5\u547d\u4ee4\u7684\u9009\u62e9\u7cbe\u5ea6\u4e5f\u8981\u9ad8\u4e00\u4e9b\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u201c\u8272\u5f69\u8303\u56f4\u201d\u547d\u4ee4\u4e0d\u53ef\u7528\u4e8e 32 \u4f4d / \u901a\u9053\u7684\u56fe\u50cf\u3002\u6267\u884c\u201c\u9009\u62e9 > \u8272\u5f69\u8303\u56f4\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u8272\u5f69\u8303\u56f4\u201d\u5bf9\u8bdd\u6846\u3002","title":"\u4f7f\u7528 \u201c\u8272\u5f69\u8303\u56f4\u201d\u547d\u4ee4"},{"location":"PS/PS2/#_36","text":"","title":"\u9009\u533a\u7684\u7f16\u8f91"},{"location":"PS/PS2/#_37","text":"\u521b\u5efa\u9009\u533a\u4ee5\u540e\uff0c\u6267\u884c\u201c\u9009\u62e9 > \u4fee\u6539 > \u8fb9\u754c\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u9009\u533a\u7684\u8fb9\u754c\u5411\u5185\u6216\u5411\u5916\u8fdb\u884c\u6269\u5c55\uff0c\u6269\u5c55\u540e\u7684\u9009\u533a\u8fb9\u754c\u5c06\u4e0e\u539f\u6765\u7684\u9009\u533a\u8fb9\u754c\u5f62\u6210\u65b0\u7684\u9009\u533a\u3002","title":"\u521b\u5efa\u8fb9\u754c\u9009\u533a"},{"location":"PS/PS2/#_38","text":"\u5bf9\u9009\u533a\u6267\u884c\u201c\u9009\u62e9 > \u4fee\u6539 > \u5e73\u6ed1\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u9009\u533a\u8fdb\u884c\u5e73\u6ed1\u5904\u7406\u3002","title":"\u5e73\u6ed1\u9009\u533a"},{"location":"PS/PS2/#_39","text":"\u7ed8\u5236\u9009\u533a\uff0c\u6267\u884c\u201c\u9009\u62e9 > \u4fee\u6539 > \u6269\u5c55\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u9009\u533a\u5411\u5916\u8fdb\u884c\u6269\u5c55\u3002","title":"\u6269\u5c55\u9009\u533a"},{"location":"PS/PS2/#_40","text":"\u5982\u679c\u8981\u5411\u5185\u6536\u7f29\u9009\u533a\uff0c\u53ef\u4ee5\u6267\u884c\u201c\u9009\u62e9 > \u4fee\u6539 > \u6536\u7f29\u201d\u547d\u4ee4\u3002","title":"\u6536\u7f29\u9009\u533a"},{"location":"PS/PS2/#_41","text":"\u7fbd\u5316\u9009\u533a\u662f\u901a\u8fc7\u5efa\u7acb\u9009\u533a\u548c\u9009\u533a\u5468\u56f4\u50cf\u7d20\u4e4b\u95f4\u7684\u8f6c\u6362\u8fb9\u754c\u6765\u6a21\u7cca\u8fb9\u7f18\uff0c\u8fd9\u79cd\u6a21\u7cca\u65b9\u5f0f\u5c06\u4e22\u5931\u9009\u533a\u8fb9\u7f18\u7684\u4e00\u4e9b\u7ec6\u8282\u3002\u5bf9\u9009\u533a\u6267\u884c\u201c\u9009\u62e9 > \u4fee\u6539 > \u7fbd\u5316\u201d\u547d\u4ee4\u6216\u6309 Shift+F6 \u7ec4\u5408\u952e\uff0c\u63a5\u7740\u5728\u5f39\u51fa\u7684\u201c\u7fbd\u5316\u9009\u533a\u201d\u5bf9\u8bdd\u6846\u4e2d\u5b9a\u4e49\u9009\u533a\u7684\u201c\u7fbd\u5316\u534a\u5f84\u201d\u5373\u53ef\u3002","title":"\u7fbd\u5316\u9009\u533a"},{"location":"PS/PS2/#_42","text":"\u201c\u6269\u5927\u9009\u53d6\u201d\u547d\u4ee4\u662f\u57fa\u4e8e\u201c\u9b54\u68d2\u5de5\u5177\u201d\u9009\u9879\u680f\u4e2d\u6307\u5b9a\u7684\u201c\u5bb9\u5dee\u201d\u8303\u56f4\u6765\u51b3\u5b9a\u9009\u533a\u7684\u6269\u5c55\u8303\u56f4\u3002\u6bd4\u5982\u4e0b\u56fe \u4e2d\u53ea\u9009\u62e9\u4e86\u4e00\u90e8\u5206\u7c89\u8272\u80cc\u666f\uff0c\u6267\u884c\u201c\u9009\u62e9 > \u6269\u5927\u9009\u53d6\u201d\u547d\u4ee4\u540e\uff0cPhotoshop \u4f1a\u67e5\u627e\u5e76\u9009\u62e9\u90a3\u4e9b\u4e0e\u5f53\u524d\u9009\u533a\u4e2d\u50cf\u7d20\u8272\u8c03\u76f8\u8fd1\u7684\u50cf\u7d20\uff0c\u4ece\u800c\u6269\u5927\u9009\u62e9\u533a\u57df\u3002","title":"\u6269\u5927\u9009\u53d6"},{"location":"PS/PS2/#_43","text":"\u201c\u9009\u53d6\u76f8\u4f3c\u201d\u547d\u4ee4\u4e0e\u201c\u6269\u5927\u9009\u53d6\u201d\u547d\u4ee4\u76f8\u4f3c\uff0c\u90fd\u662f\u57fa\u4e8e\u201c\u9b54\u68d2\u5de5\u5177\u201d\u9009\u9879\u680f\u4e2d\u6307\u5b9a\u7684\u201c\u5bb9\u5dee\u201d\u8303\u56f4\u6765\u51b3\u5b9a\u9009\u533a\u7684\u6269\u5c55\u8303\u56f4\u3002\u6bd4\u5982\uff0c\u4e0b\u56fe\u4e2d\u53ea\u9009\u62e9\u4e86\u4e00\u90e8\u5206\u7c89\u8272\u80cc\u666f\uff0c\u6267\u884c\u201c\u9009\u62e9 > \u9009\u53d6\u76f8\u4f3c\u201d\u547d\u4ee4\u540e\uff0cPhotoshop \u540c\u6837\u4f1a\u67e5\u627e\u5e76\u9009\u62e9\u90a3\u4e9b\u4e0e\u5f53\u524d\u9009\u533a\u4e2d\u50cf\u7d20\u8272\u8c03\u76f8\u8fd1\u7684\u50cf\u7d20\uff0c\u4ece\u800c\u6269\u5927\u9009\u62e9\u533a\u57df\u3002","title":"\u9009\u53d6\u76f8\u4f3c"},{"location":"PS/PS2/#_44","text":"","title":"\u586b\u5145\u4e0e\u63cf\u8fb9"},{"location":"PS/PS2/#_45","text":"\u5229\u7528\u201c\u586b\u5145\u201d\u547d\u4ee4\u53ef\u4ee5\u5728\u5f53\u524d\u56fe\u5c42\u6216\u9009\u533a\u5185\u586b\u5145\u989c\u8272\u6216\u56fe\u6848\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u586b\u5145\u65f6\u7684\u4e0d\u900f\u660e\u5ea6\u548c\u6df7\u5408\u6a21\u5f0f\u3002\u6267\u884c\u201c\u7f16\u8f91 > \u586b\u5145\u201d\u547d\u4ee4\u6216\u6309 Shift+F4 \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u586b\u5145\u201d\u5bf9\u8bdd\u6846\u3002","title":"\u586b\u5145"},{"location":"PS/PS2/#_46","text":"\u4f7f\u7528\u201c\u63cf\u8fb9\u201d\u547d\u4ee4\u53ef\u4ee5\u5728\u9009\u533a\u3001\u8def\u5f84\u6216\u56fe\u5c42\u5468\u56f4\u521b\u5efa\u5f69\u8272\u6216\u8005\u82b1\u7eb9\u7684\u8fb9\u6846\u6548\u679c\u3002\u521b\u5efa\u51fa\u9009\u533a\uff0c\u7136\u540e\u6267\u884c\u201c\u7f16\u8f91 > \u63cf\u8fb9\u201d\u547d\u4ee4\u6216\u6309 Alt+E+S \u7ec4\u5408\u952e\uff0c\u6253\u5f00\u201c\u63cf\u8fb9\u201d\u5bf9\u8bdd\u6846\u3002","title":"\u63cf\u8fb9\u9009\u533a"},{"location":"PS/PS2/#_47","text":"\u5229\u7528\u9009\u533a\u5236\u4f5c\u592a\u6781 \u5236\u4f5c\u5fae\u4fe1\u56fe\u6807","title":"\u7ec3\u4e60"},{"location":"PS/PS3/","text":"\u989c\u8272\u8bbe\u7f6e \u524d\u666f\u8272\u4e0e\u80cc\u666f\u8272 \u524d\u666f\u901a\u5e38\u7528\u4e8e\u7ed8\u5236\u56fe\u50cf\u3001\u586b\u5145\u548c\u63cf\u8fb9\u9009\u533a\u7b49\uff1b\u80cc\u666f\u8272\u5e38\u7528\u4e8e\u751f\u6210\u6e10\u53d8\u586b\u5145\u548c\u586b\u5145\u56fe\u50cf\u4e2d\u5df2\u62b9\u9664\u7684\u533a\u57df\u3002\u5728 Photoshop \u5de5\u5177\u7bb1\u7684\u5e95\u90e8\u6709\u4e00\u7ec4\u524d\u666f\u8272\u548c\u80cc\u666f\u8272\u8bbe\u7f6e\u6309\u94ae\u3002\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u524d\u666f\u8272\u4e3a\u9ed1\u8272\uff0c\u80cc\u666f\u8272\u4e3a\u767d\u8272\u3002 \u524d\u666f\u8272\uff1a\u5355\u51fb\u524d\u666f\u8272\u56fe\u6807\uff0c\u53ef\u4ee5\u5728\u5f39\u51fa\u7684\u201c\u62fe\u8272\u5668\u201d\u5bf9\u8bdd\u6846\u4e2d\u9009\u53d6\u4e00\u79cd\u989c\u8272\u4f5c\u4e3a\u524d\u666f\u8272\u3002 \u80cc\u666f\u8272\uff1a\u5355\u51fb\u80cc\u666f\u8272\u56fe\u6807\uff0c\u53ef\u4ee5\u5728\u5f39\u51fa\u7684\u201c\u62fe\u8272\u5668\u201d\u5bf9\u8bdd\u6846\u4e2d\u9009\u53d6\u4e00\u79cd\u989c\u8272\u4f5c\u4e3a\u80cc\u666f\u8272\u3002 \u5207\u6362\u524d\u666f\u8272\u548c\u80cc\u666f\u8272\uff1a\u5feb\u6377\u952e\u4e3a X \u952e\u3002 \u9ed8\u8ba4\u524d\u666f\u8272\u548c\u80cc\u666f\u8272\uff1a\u5feb\u6377\u952e\u4e3a D \u952e\u3002 \u4f7f\u7528\u201c\u5438\u7ba1\u5de5\u5177\u201d\u9009\u53d6\u989c\u8272 \u4f7f\u7528\u201c\u5438\u7ba1\u5de5\u5177\u201d\u53ef\u4ee5\u62fe\u53d6\u56fe\u50cf\u4e2d\u7684\u4efb\u610f\u989c\u8272\u4f5c\u4e3a\u524d\u666f\u8272\u3002\u6309\u4f4f Alt \u952e\u8fdb\u884c\u62fe\u53d6\u53ef\u5c06\u5f53\u524d\u62fe\u53d6\u7684\u989c\u8272\u4f5c\u4e3a\u80cc\u666f\u8272\u3002 \u201c\u989c\u8272\u201d\u9762\u677f \u201c\u989c\u8272\u201d\u9762\u677f\u4e2d\u663e\u793a\u4e86\u5f53\u524d\u8bbe\u7f6e\u7684\u524d\u666f\u8272\u548c\u80cc\u666f\u8272\uff0c\u53ef\u4ee5\u5728\u8be5\u9762\u677f\u4e2d\u8bbe\u7f6e\u524d\u666f\u8272\u548c\u80cc\u666f\u8272\u3002\u6267\u884c\u201c\u7a97\u53e3 > \u989c\u8272\u201d\u547d \u4ee4\uff0c\u53ef\u53d1\u4ee5\u6253\u5f00\u201c\u989c\u8272\u201d\u9762\u677f\u3002 \u201c\u8272\u677f\u201d\u9762\u677f \u201c\u8272\u677f\u201d\u9762\u677f\u4e2d\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5305\u542b\u4e00\u4e9b\u7cfb\u7edf\u9884\u8bbe\u7684\u989c\u8272\uff0c\u5355\u51fb\u76f8\u5e94\u7684\u989c\u8272\u5373\u53ef\u5c06\u5176\u8bbe\u7f6e\u4e3a\u524d\u666f\u8272\u3002\u6267\u884c\u201c\u7a97\u53e3 > \u8272\u677f\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u8272\u677f\u201d\u9762\u677f\u3002 \u753b\u7b14\u9762\u677f \u8ba4\u8bc6\u201c\u753b\u7b14\u201d\u9762\u677f \u5728\u8ba4\u8bc6\u5176\u4ed6\u7ed8\u5236\u53ca\u4fee\u9970\u5de5\u5177\u4e4b\u524d\u9996\u5148\u9700\u8981\u638c\u63e1\u201c\u753b\u7b14\u201d\u9762\u677f\u3002\u201c\u753b\u7b14\u201d\u9762\u677f\u662f\u6700\u91cd\u8981\u7684\u9762\u677f\u4e4b\u4e00\uff0c\u5b83\u53ef\u4ee5\u8bbe\u7f6e\u7ed8\u753b\u5de5\u5177\u548c\u4fee\u9970\u5de5\u5177\u7684\u7b14\u5237\u79cd\u7c7b\u3001\u753b\u7b14\u5927\u5c0f\u548c\u786c\u5ea6\u7b49\u5c5e\u6027\u3002 \u7b14\u5c16\u5f62\u72b6\u8bbe\u7f6e\uff1a\u5728\u201c\u753b\u7b14\u7b14\u5c16\u5f62\u72b6\u201d\u9009\u9879\u9762\u677f\u4e2d\u53ef\u4ee5\u8bbe\u7f6e\u753b\u7b14\u7684\u5f62\u72b6\u3001\u5927\u5c0f\u3001\u786c\u5ea6\u548c\u95f4\u8ddd\u7b49\u5c5e\u6027 \u201c\u5f62\u72b6\u52a8\u6001\u201d\u9009\u9879\u7684\u8bbe\u7f6e\uff1a\u201c\u5f62\u72b6\u52a8\u6001\u201d\u53ef\u4ee5\u51b3\u5b9a\u63cf\u8fb9\u4e2d\u753b\u7b14\u7b14\u8ff9\u7684\u53d8\u5316\u3002\u5b83\u53ef\u4ee5\u4f7f\u753b\u7b14\u7684\u5927\u5c0f\u3001\u5706\u5ea6\u7b49\u4ea7\u751f\u968f\u673a\u53d8\u5316\u7684\u6548\u679c\u3002 \u201c\u6563\u5e03\u201d\u9009\u9879\u7684\u8bbe\u7f6e\uff1a\u5728\u201c\u6563\u5e03\u201d\u9009\u9879\u9762\u677f\u4e2d\u53ef\u4ee5\u8bbe\u7f6e\u63cf\u8fb9\u4e2d\u7b14\u8ff9\u7684\u6570\u76ee\u548c\u4f4d\u7f6e\u3002\u4f7f\u753b\u7b14\u7b14\u8ff9\u6cbf\u7740\u7ed8\u5236\u7684\u7ebf\u6761\u6269\u6563\u3002 \u201c\u989c\u8272\u52a8\u6001\u201d\u9009\u9879\u7684\u8bbe\u7f6e\uff1a\u9009\u4e2d\u201c\u989c\u8272\u52a8\u6001\u201d\u9009\u9879\u3002\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u9009\u9879\u7ed8\u5236\u51fa\u989c\u8272\u53d8\u5316\u7684\u6548\u679c\u3002 \u201c\u7eb9\u7406\u201d\u9009\u9879\u7684\u8bbe\u7f6e\uff1a\u4f7f\u7528\u201c\u7eb9\u7406\u201d\u9009\u9879\u53ef\u4ee5\u7ed8\u5236\u51fa\u5e26\u6709\u7eb9\u7406\u8d28\u611f\u7684\u7b14\u89e6\uff0c\u4f8b\u5982\u53ef\u4ee5\u5728\u5e26\u7eb9\u7406\u7684\u753b\u5e03\u4e0a\u7ed8\u5236\u6548\u679c\u7b49\u3002 \u201c\u53cc\u91cd\u753b\u7b14\u201d\u9009\u9879\u7684\u8bbe\u7f6e\uff1a\u9996\u9009\u8bbe\u7f6e\u201c\u753b\u7b14\u7b14\u5c16\u5f62\u72b6\u201d\u4e3b\u753b\u7b14\u53c2\u6570\u5c5e\u6027\uff0c\u7136\u540e\u9009\u62e9\u201c\u53cc\u91cd\u753b\u7b14\u201d\u9009\u9879\uff0c\u5e76\u4ece\u5176 \u9762\u677f\u4e2d\u9009\u62e9\u53e6\u5916\u4e00\u4e2a\u7b14\u5c16\uff08\u5373\u53cc\u91cd\u7b14\u5c16\uff09\u3002 \u201c\u4f20\u9012\u201d\u9009\u9879\u7684\u8bbe\u7f6e\uff1a\u201c\u4f20\u9012\u201d\u9009\u9879\u4e2d\u5305\u542b\u4e0d\u900f\u660e\u5ea6\u3001\u6d41\u91cf\u3001\u6e7f\u5ea6\u3001\u6df7\u5408\u7b49\u6296\u52a8\u7684\u63a7\u5236\u3002\u53ef\u4ee5\u7528\u6765\u786e\u5b9a\u6cb9\u5f69\u5728\u63cf\u8fb9\u8def\u7ebf\u4e2d\u7684\u6539\u53d8\u65b9\u5f0f\u3002 \u201c\u753b\u7b14\u7b14\u52bf\u201d\u9009\u9879\u7684\u8bbe\u7f6e\uff1a\u201c\u753b\u7b14\u7b14\u52bf\u201d\u9009\u9879\u7528\u4e8e\u8c03\u6574\u6bdb\u5237\u753b\u7b14\u7b14\u5c16\u3001\u4fb5\u8680\u753b\u7b14\u7b14\u5c16\u7684\u89d2\u5ea6\u3002 \u753b\u7b14\u7ec3\u4e60 \u7ed8\u5236\u7eb7\u98de\u7684\u82b1\u6735 \u7ed8\u5236\u5de5\u5177 \u753b\u7b14\u5de5\u5177 \u201c\u753b\u7b14\u5de5\u5177\u201d\u662f\u4f7f\u7528\u9891\u7387\u6700\u9ad8\u7684\u5de5\u5177\u4e4b\u4e00\uff0c\u5b83\u53ef\u4ee5\u4f7f\u7528\u524d\u666f\u8272\u7ed8\u5236\u51fa\u5404\u79cd\u7ebf\u6761\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u5229\u7528\u5b83\u6765\u4fee\u6539\u901a\u9053\u548c\u8499\u7248\u3002\u5355\u51fb\u8be5\u5de5\u5177\uff0c\u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u5408\u9002\u7684\u753b\u7b14\u5927\u5c0f\u548c\u753b\u7b14\u6837\u5f0f\uff0c\u5728\u753b\u9762\u4e2d\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u5e76\u62d6\u52a8\u5373\u53ef\u4ee5\u524d\u666f\u8272\u8fdb\u884c\u7ed8\u5236\u3002 \u94c5\u7b14\u5de5\u5177 \u4f7f\u7528\u65b9\u6cd5\u4e0e\u753b\u7b14\u7c7b\u4f3c\u3002\u53ef\u4ee5\u7ed8\u5236\u51fa\u786c\u8fb9\u7ebf\u6761\uff0c\u4f8b\u5982\u8fd1\u5e74\u6765 \u6bd4\u8f83\u6d41\u884c\u7684\u50cf\u7d20\u753b\uff0c\u4ee5\u53ca\u50cf\u7d20\u6e38\u620f\u3002 \u989c\u8272\u66ff\u6362\u5de5\u5177 \u201c\u989c\u8272\u66ff\u6362\u5de5\u5177\u201d\u53ef\u4ee5\u5c06\u9009\u5b9a\u7684\u989c\u8272\u66ff\u6362\u4e3a\u5176\u4ed6\u989c\u8272\u3002\u5355\u51fb\u8be5\u5de5\u5177\uff0c\u8bbe\u7f6e\u76ee\u6807\u989c\u8272\u4e3a\u524d\u666f\u8272\uff0c\u7136\u540e\u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u66ff\u6362\u6a21\u5f0f\u3001\u53d6\u6837\u7b49\u53c2\u6570\uff0c\u7136\u540e\u5728\u753b\u9762\u4e2d\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u6d82\u62b9\uff0c\u88ab\u6d82\u62b9\u7684\u533a\u57df\u53d1\u751f\u989c\u8272\u53d8\u5316\u3002 \u56fe\u50cf\u64e6\u9664\u5de5\u5177 \u6a61\u76ae\u64e6\u5de5\u5177 \u201c\u6a61\u76ae\u64e6\u5de5\u5177\u201d\u53ef\u4ee5\u5c06\u50cf\u7684\u50cf\u7d20\u5c06\u53d8\u6210\u900f\u660e\u7d20\u66f4\u6539\u4e3a\u80cc\u666f\u8272\u6216\u900f\u660e\u3002\u4f7f\u7528\u8be5\u5de5\u5177\u5728\u56fe\u5c42\u4e2d\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u5e76\u62d6\u52a8\u5373\u53ef\u8fdb\u884c\u64e6\u9664\uff0c\u5728\u666e\u901a\u56fe\u5c42\u4e2d\u64e6\u9664\uff0c\u5728\u201c\u80cc\u666f\u201d\u56fe\u5c42\u6216\u9501\u5b9a\u4e86\u900f\u660e\u50cf\u7d20\u7684\u56fe\u5c42\u4e2d\u8fdb\u884c\u64e6\u9664\uff0c\u5219\u64e6\u9664\u7684\u50cf\u7d20\u5c06\u53d8\u6210\u80cc\u666f\u8272\u3002 \u80cc\u666f\u6a61\u76ae\u64e6\u5de5\u5177 \u201c\u80cc\u666f\u6a61\u76ae\u64e6\u5de5\u5177\u201d\u662f\u4e00\u79cd\u57fa\u4e8e\u8272\u5f69\u5dee\u5f02\u7684\u667a\u80fd\u5316\u64e6\u9664\u5de5\u5177\u3002\u5176\u529f\u80fd\u975e\u5e38\u5f3a\u5927\uff0c\u9664\u4e86\u53ef\u4ee5\u7528\u6765\u64e6\u9664\u56fe\u50cf\u4ee5\u5916\uff0c\u6700\u91cd\u8981\u7684\u65b9\u9762\u662f\u8fd0\u7528\u5728\u62a0\u56fe\u4e2d\u3002\u8bbe\u7f6e\u597d\u80cc\u666f\u8272\u4ee5\u540e\uff0c\u4f7f\u7528\u8be5\u5de5\u5177\u53ef\u4ee5\u5728\u62b9\u9664\u80cc\u666f\u7684\u540c\u65f6\u4fdd\u7559\u524d\u666f\u5bf9\u8c61\u7684\u8fb9\u7f18\u3002 \u9b54\u672f\u6a61\u76ae\u64e6\u5de5\u5177 \u4f7f\u7528\u201c\u9b54\u672f\u6a61\u76ae\u64e6\u5de5\u5177\u201d\u5728\u56fe\u50cf\u4e2d\u5355\u51fb\u65f6\uff0c\u53ef\u4ee5\u5c06\u6240\u6709\u76f8\u4f3c\u7684\u50cf\u7d20\u66f4\u6539\u4e3a\u900f\u660e\uff08\u5982\u679c\u5728\u5df2\u9501\u5b9a\u4e86\u900f\u660e\u50cf\u7d20\u7684\u56fe\u5c42 \u4e2d\u5de5\u4f5c\uff0c\u8fd9\u4e9b\u50cf\u7d20\u5c06\u66f4\u6539\u4e3a\u80cc\u666f\u8272\uff09\u3002 \u6a61\u76ae\u64e6\u7ec3\u4e60 \u4f7f\u7528\u9b54\u672f\u6a61\u76ae\u64e6\u4e3a\u5a5a\u7eb1\u7167\u6362\u80cc\u666f \u7528\u591a\u79cd\u64e6\u9664\u5de5\u5177\u53bb\u9664\u80cc\u666f \u56fe\u50cf\u586b\u5145\u5de5\u5177 \u6e10\u53d8\u5de5\u5177 \u201c\u6e10\u53d8\u5de5\u5177\u201d\u53ef\u4ee5\u5728\u6574\u4e2a\u6587\u6863\u6216\u9009\u533a\u5185\u586b\u5145\u6e10\u53d8\u8272\uff0c\u5e76\u4e14\u53ef\u4ee5\u521b\u5efa\u591a\u79cd\u989c\u8272\u95f4\u7684\u6df7\u5408\u6548\u679c\u3002\u5355\u51fb\u5de5\u5177\u7bb1\u4e2d\u7684\u201c\u6e10\u53d8\u5de5\u5177\u201d\u6309\u94ae\uff0c\u5728\u9009\u9879\u680f\u4e2d\u5355\u51fb\u201c\u6e10\u53d8\u989c\u8272\u6761\u201d\uff0c\u5728\u5f39\u51fa\u7684\u201c\u6e10\u53d8\u7f16\u8f91\u5668\u201d\u4e2d\u7f16\u8f91\u6e10\u53d8\u989c\u8272\uff0c\u63a5\u7740\u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u5408\u9002\u7684\u6e10\u53d8\u7c7b\u578b\u4ee5\u53ca\u6a21\u5f0f\u3001\u4e0d\u900f\u660e\u5ea6\u7b49\u53c2\u6570\uff0c\u8bbe\u7f6e\u5b8c\u6bd5\u540e\u5728\u753b\u9762\u4e2d\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u5e76\u62d6\u62fd\uff0c\u677e\u5f00\u5149\u6807\u540e\u5373\u53ef\u5728\u753b\u9762\u4e2d\u586b\u5145\u6e10\u53d8\u3002 \u6cb9\u6f06\u6876\u5de5\u5177 \u201c\u6cb9\u6f06\u6876\u5de5\u5177\u201d\u53ef\u4ee5\u5728\u56fe\u50cf\u4e2d\u586b\u5145\u524d\u666f\u8272\u6216\u56fe\u6848\uff0c\u5982\u679c\u521b\u5efa\u4e86\u9009\u533a\uff0c\u586b\u5145\u7684\u533a\u57df\u4e3a\u5f53\u524d\u9009\u533a\uff1b\u5982\u679c\u6ca1\u6709\u521b\u5efa\u9009\u533a\uff0c\u586b\u5145\u7684\u662f\u4e0e\u9f20\u6807\u5355\u51fb\u5904\u989c\u8272\u76f8\u8fd1\u7684\u533a\u57df\u3002 \u586b\u5145\u7ec3\u4e60 \u7528\u586b\u5145\u5236\u4f5c\u7c89\u7d2b\u8272\u68a6\u5e7b\u6548\u679c","title":"\u56fe\u50cf\u7ed8\u5236"},{"location":"PS/PS3/#_1","text":"","title":"\u989c\u8272\u8bbe\u7f6e"},{"location":"PS/PS3/#_2","text":"\u524d\u666f\u901a\u5e38\u7528\u4e8e\u7ed8\u5236\u56fe\u50cf\u3001\u586b\u5145\u548c\u63cf\u8fb9\u9009\u533a\u7b49\uff1b\u80cc\u666f\u8272\u5e38\u7528\u4e8e\u751f\u6210\u6e10\u53d8\u586b\u5145\u548c\u586b\u5145\u56fe\u50cf\u4e2d\u5df2\u62b9\u9664\u7684\u533a\u57df\u3002\u5728 Photoshop \u5de5\u5177\u7bb1\u7684\u5e95\u90e8\u6709\u4e00\u7ec4\u524d\u666f\u8272\u548c\u80cc\u666f\u8272\u8bbe\u7f6e\u6309\u94ae\u3002\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u524d\u666f\u8272\u4e3a\u9ed1\u8272\uff0c\u80cc\u666f\u8272\u4e3a\u767d\u8272\u3002 \u524d\u666f\u8272\uff1a\u5355\u51fb\u524d\u666f\u8272\u56fe\u6807\uff0c\u53ef\u4ee5\u5728\u5f39\u51fa\u7684\u201c\u62fe\u8272\u5668\u201d\u5bf9\u8bdd\u6846\u4e2d\u9009\u53d6\u4e00\u79cd\u989c\u8272\u4f5c\u4e3a\u524d\u666f\u8272\u3002 \u80cc\u666f\u8272\uff1a\u5355\u51fb\u80cc\u666f\u8272\u56fe\u6807\uff0c\u53ef\u4ee5\u5728\u5f39\u51fa\u7684\u201c\u62fe\u8272\u5668\u201d\u5bf9\u8bdd\u6846\u4e2d\u9009\u53d6\u4e00\u79cd\u989c\u8272\u4f5c\u4e3a\u80cc\u666f\u8272\u3002 \u5207\u6362\u524d\u666f\u8272\u548c\u80cc\u666f\u8272\uff1a\u5feb\u6377\u952e\u4e3a X \u952e\u3002 \u9ed8\u8ba4\u524d\u666f\u8272\u548c\u80cc\u666f\u8272\uff1a\u5feb\u6377\u952e\u4e3a D \u952e\u3002","title":"\u524d\u666f\u8272\u4e0e\u80cc\u666f\u8272"},{"location":"PS/PS3/#_3","text":"\u4f7f\u7528\u201c\u5438\u7ba1\u5de5\u5177\u201d\u53ef\u4ee5\u62fe\u53d6\u56fe\u50cf\u4e2d\u7684\u4efb\u610f\u989c\u8272\u4f5c\u4e3a\u524d\u666f\u8272\u3002\u6309\u4f4f Alt \u952e\u8fdb\u884c\u62fe\u53d6\u53ef\u5c06\u5f53\u524d\u62fe\u53d6\u7684\u989c\u8272\u4f5c\u4e3a\u80cc\u666f\u8272\u3002","title":"\u4f7f\u7528\u201c\u5438\u7ba1\u5de5\u5177\u201d\u9009\u53d6\u989c\u8272"},{"location":"PS/PS3/#_4","text":"\u201c\u989c\u8272\u201d\u9762\u677f\u4e2d\u663e\u793a\u4e86\u5f53\u524d\u8bbe\u7f6e\u7684\u524d\u666f\u8272\u548c\u80cc\u666f\u8272\uff0c\u53ef\u4ee5\u5728\u8be5\u9762\u677f\u4e2d\u8bbe\u7f6e\u524d\u666f\u8272\u548c\u80cc\u666f\u8272\u3002\u6267\u884c\u201c\u7a97\u53e3 > \u989c\u8272\u201d\u547d \u4ee4\uff0c\u53ef\u53d1\u4ee5\u6253\u5f00\u201c\u989c\u8272\u201d\u9762\u677f\u3002","title":"\u201c\u989c\u8272\u201d\u9762\u677f"},{"location":"PS/PS3/#_5","text":"\u201c\u8272\u677f\u201d\u9762\u677f\u4e2d\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5305\u542b\u4e00\u4e9b\u7cfb\u7edf\u9884\u8bbe\u7684\u989c\u8272\uff0c\u5355\u51fb\u76f8\u5e94\u7684\u989c\u8272\u5373\u53ef\u5c06\u5176\u8bbe\u7f6e\u4e3a\u524d\u666f\u8272\u3002\u6267\u884c\u201c\u7a97\u53e3 > \u8272\u677f\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u8272\u677f\u201d\u9762\u677f\u3002","title":"\u201c\u8272\u677f\u201d\u9762\u677f"},{"location":"PS/PS3/#_6","text":"","title":"\u753b\u7b14\u9762\u677f"},{"location":"PS/PS3/#_7","text":"\u5728\u8ba4\u8bc6\u5176\u4ed6\u7ed8\u5236\u53ca\u4fee\u9970\u5de5\u5177\u4e4b\u524d\u9996\u5148\u9700\u8981\u638c\u63e1\u201c\u753b\u7b14\u201d\u9762\u677f\u3002\u201c\u753b\u7b14\u201d\u9762\u677f\u662f\u6700\u91cd\u8981\u7684\u9762\u677f\u4e4b\u4e00\uff0c\u5b83\u53ef\u4ee5\u8bbe\u7f6e\u7ed8\u753b\u5de5\u5177\u548c\u4fee\u9970\u5de5\u5177\u7684\u7b14\u5237\u79cd\u7c7b\u3001\u753b\u7b14\u5927\u5c0f\u548c\u786c\u5ea6\u7b49\u5c5e\u6027\u3002 \u7b14\u5c16\u5f62\u72b6\u8bbe\u7f6e\uff1a\u5728\u201c\u753b\u7b14\u7b14\u5c16\u5f62\u72b6\u201d\u9009\u9879\u9762\u677f\u4e2d\u53ef\u4ee5\u8bbe\u7f6e\u753b\u7b14\u7684\u5f62\u72b6\u3001\u5927\u5c0f\u3001\u786c\u5ea6\u548c\u95f4\u8ddd\u7b49\u5c5e\u6027 \u201c\u5f62\u72b6\u52a8\u6001\u201d\u9009\u9879\u7684\u8bbe\u7f6e\uff1a\u201c\u5f62\u72b6\u52a8\u6001\u201d\u53ef\u4ee5\u51b3\u5b9a\u63cf\u8fb9\u4e2d\u753b\u7b14\u7b14\u8ff9\u7684\u53d8\u5316\u3002\u5b83\u53ef\u4ee5\u4f7f\u753b\u7b14\u7684\u5927\u5c0f\u3001\u5706\u5ea6\u7b49\u4ea7\u751f\u968f\u673a\u53d8\u5316\u7684\u6548\u679c\u3002 \u201c\u6563\u5e03\u201d\u9009\u9879\u7684\u8bbe\u7f6e\uff1a\u5728\u201c\u6563\u5e03\u201d\u9009\u9879\u9762\u677f\u4e2d\u53ef\u4ee5\u8bbe\u7f6e\u63cf\u8fb9\u4e2d\u7b14\u8ff9\u7684\u6570\u76ee\u548c\u4f4d\u7f6e\u3002\u4f7f\u753b\u7b14\u7b14\u8ff9\u6cbf\u7740\u7ed8\u5236\u7684\u7ebf\u6761\u6269\u6563\u3002 \u201c\u989c\u8272\u52a8\u6001\u201d\u9009\u9879\u7684\u8bbe\u7f6e\uff1a\u9009\u4e2d\u201c\u989c\u8272\u52a8\u6001\u201d\u9009\u9879\u3002\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u9009\u9879\u7ed8\u5236\u51fa\u989c\u8272\u53d8\u5316\u7684\u6548\u679c\u3002 \u201c\u7eb9\u7406\u201d\u9009\u9879\u7684\u8bbe\u7f6e\uff1a\u4f7f\u7528\u201c\u7eb9\u7406\u201d\u9009\u9879\u53ef\u4ee5\u7ed8\u5236\u51fa\u5e26\u6709\u7eb9\u7406\u8d28\u611f\u7684\u7b14\u89e6\uff0c\u4f8b\u5982\u53ef\u4ee5\u5728\u5e26\u7eb9\u7406\u7684\u753b\u5e03\u4e0a\u7ed8\u5236\u6548\u679c\u7b49\u3002 \u201c\u53cc\u91cd\u753b\u7b14\u201d\u9009\u9879\u7684\u8bbe\u7f6e\uff1a\u9996\u9009\u8bbe\u7f6e\u201c\u753b\u7b14\u7b14\u5c16\u5f62\u72b6\u201d\u4e3b\u753b\u7b14\u53c2\u6570\u5c5e\u6027\uff0c\u7136\u540e\u9009\u62e9\u201c\u53cc\u91cd\u753b\u7b14\u201d\u9009\u9879\uff0c\u5e76\u4ece\u5176 \u9762\u677f\u4e2d\u9009\u62e9\u53e6\u5916\u4e00\u4e2a\u7b14\u5c16\uff08\u5373\u53cc\u91cd\u7b14\u5c16\uff09\u3002 \u201c\u4f20\u9012\u201d\u9009\u9879\u7684\u8bbe\u7f6e\uff1a\u201c\u4f20\u9012\u201d\u9009\u9879\u4e2d\u5305\u542b\u4e0d\u900f\u660e\u5ea6\u3001\u6d41\u91cf\u3001\u6e7f\u5ea6\u3001\u6df7\u5408\u7b49\u6296\u52a8\u7684\u63a7\u5236\u3002\u53ef\u4ee5\u7528\u6765\u786e\u5b9a\u6cb9\u5f69\u5728\u63cf\u8fb9\u8def\u7ebf\u4e2d\u7684\u6539\u53d8\u65b9\u5f0f\u3002 \u201c\u753b\u7b14\u7b14\u52bf\u201d\u9009\u9879\u7684\u8bbe\u7f6e\uff1a\u201c\u753b\u7b14\u7b14\u52bf\u201d\u9009\u9879\u7528\u4e8e\u8c03\u6574\u6bdb\u5237\u753b\u7b14\u7b14\u5c16\u3001\u4fb5\u8680\u753b\u7b14\u7b14\u5c16\u7684\u89d2\u5ea6\u3002","title":"\u8ba4\u8bc6\u201c\u753b\u7b14\u201d\u9762\u677f"},{"location":"PS/PS3/#_8","text":"\u7ed8\u5236\u7eb7\u98de\u7684\u82b1\u6735","title":"\u753b\u7b14\u7ec3\u4e60"},{"location":"PS/PS3/#_9","text":"","title":"\u7ed8\u5236\u5de5\u5177"},{"location":"PS/PS3/#_10","text":"\u201c\u753b\u7b14\u5de5\u5177\u201d\u662f\u4f7f\u7528\u9891\u7387\u6700\u9ad8\u7684\u5de5\u5177\u4e4b\u4e00\uff0c\u5b83\u53ef\u4ee5\u4f7f\u7528\u524d\u666f\u8272\u7ed8\u5236\u51fa\u5404\u79cd\u7ebf\u6761\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u5229\u7528\u5b83\u6765\u4fee\u6539\u901a\u9053\u548c\u8499\u7248\u3002\u5355\u51fb\u8be5\u5de5\u5177\uff0c\u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u5408\u9002\u7684\u753b\u7b14\u5927\u5c0f\u548c\u753b\u7b14\u6837\u5f0f\uff0c\u5728\u753b\u9762\u4e2d\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u5e76\u62d6\u52a8\u5373\u53ef\u4ee5\u524d\u666f\u8272\u8fdb\u884c\u7ed8\u5236\u3002","title":"\u753b\u7b14\u5de5\u5177"},{"location":"PS/PS3/#_11","text":"\u4f7f\u7528\u65b9\u6cd5\u4e0e\u753b\u7b14\u7c7b\u4f3c\u3002\u53ef\u4ee5\u7ed8\u5236\u51fa\u786c\u8fb9\u7ebf\u6761\uff0c\u4f8b\u5982\u8fd1\u5e74\u6765 \u6bd4\u8f83\u6d41\u884c\u7684\u50cf\u7d20\u753b\uff0c\u4ee5\u53ca\u50cf\u7d20\u6e38\u620f\u3002","title":"\u94c5\u7b14\u5de5\u5177"},{"location":"PS/PS3/#_12","text":"\u201c\u989c\u8272\u66ff\u6362\u5de5\u5177\u201d\u53ef\u4ee5\u5c06\u9009\u5b9a\u7684\u989c\u8272\u66ff\u6362\u4e3a\u5176\u4ed6\u989c\u8272\u3002\u5355\u51fb\u8be5\u5de5\u5177\uff0c\u8bbe\u7f6e\u76ee\u6807\u989c\u8272\u4e3a\u524d\u666f\u8272\uff0c\u7136\u540e\u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u66ff\u6362\u6a21\u5f0f\u3001\u53d6\u6837\u7b49\u53c2\u6570\uff0c\u7136\u540e\u5728\u753b\u9762\u4e2d\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u6d82\u62b9\uff0c\u88ab\u6d82\u62b9\u7684\u533a\u57df\u53d1\u751f\u989c\u8272\u53d8\u5316\u3002","title":"\u989c\u8272\u66ff\u6362\u5de5\u5177"},{"location":"PS/PS3/#_13","text":"","title":"\u56fe\u50cf\u64e6\u9664\u5de5\u5177"},{"location":"PS/PS3/#_14","text":"\u201c\u6a61\u76ae\u64e6\u5de5\u5177\u201d\u53ef\u4ee5\u5c06\u50cf\u7684\u50cf\u7d20\u5c06\u53d8\u6210\u900f\u660e\u7d20\u66f4\u6539\u4e3a\u80cc\u666f\u8272\u6216\u900f\u660e\u3002\u4f7f\u7528\u8be5\u5de5\u5177\u5728\u56fe\u5c42\u4e2d\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u5e76\u62d6\u52a8\u5373\u53ef\u8fdb\u884c\u64e6\u9664\uff0c\u5728\u666e\u901a\u56fe\u5c42\u4e2d\u64e6\u9664\uff0c\u5728\u201c\u80cc\u666f\u201d\u56fe\u5c42\u6216\u9501\u5b9a\u4e86\u900f\u660e\u50cf\u7d20\u7684\u56fe\u5c42\u4e2d\u8fdb\u884c\u64e6\u9664\uff0c\u5219\u64e6\u9664\u7684\u50cf\u7d20\u5c06\u53d8\u6210\u80cc\u666f\u8272\u3002","title":"\u6a61\u76ae\u64e6\u5de5\u5177"},{"location":"PS/PS3/#_15","text":"\u201c\u80cc\u666f\u6a61\u76ae\u64e6\u5de5\u5177\u201d\u662f\u4e00\u79cd\u57fa\u4e8e\u8272\u5f69\u5dee\u5f02\u7684\u667a\u80fd\u5316\u64e6\u9664\u5de5\u5177\u3002\u5176\u529f\u80fd\u975e\u5e38\u5f3a\u5927\uff0c\u9664\u4e86\u53ef\u4ee5\u7528\u6765\u64e6\u9664\u56fe\u50cf\u4ee5\u5916\uff0c\u6700\u91cd\u8981\u7684\u65b9\u9762\u662f\u8fd0\u7528\u5728\u62a0\u56fe\u4e2d\u3002\u8bbe\u7f6e\u597d\u80cc\u666f\u8272\u4ee5\u540e\uff0c\u4f7f\u7528\u8be5\u5de5\u5177\u53ef\u4ee5\u5728\u62b9\u9664\u80cc\u666f\u7684\u540c\u65f6\u4fdd\u7559\u524d\u666f\u5bf9\u8c61\u7684\u8fb9\u7f18\u3002","title":"\u80cc\u666f\u6a61\u76ae\u64e6\u5de5\u5177"},{"location":"PS/PS3/#_16","text":"\u4f7f\u7528\u201c\u9b54\u672f\u6a61\u76ae\u64e6\u5de5\u5177\u201d\u5728\u56fe\u50cf\u4e2d\u5355\u51fb\u65f6\uff0c\u53ef\u4ee5\u5c06\u6240\u6709\u76f8\u4f3c\u7684\u50cf\u7d20\u66f4\u6539\u4e3a\u900f\u660e\uff08\u5982\u679c\u5728\u5df2\u9501\u5b9a\u4e86\u900f\u660e\u50cf\u7d20\u7684\u56fe\u5c42 \u4e2d\u5de5\u4f5c\uff0c\u8fd9\u4e9b\u50cf\u7d20\u5c06\u66f4\u6539\u4e3a\u80cc\u666f\u8272\uff09\u3002","title":"\u9b54\u672f\u6a61\u76ae\u64e6\u5de5\u5177"},{"location":"PS/PS3/#_17","text":"\u4f7f\u7528\u9b54\u672f\u6a61\u76ae\u64e6\u4e3a\u5a5a\u7eb1\u7167\u6362\u80cc\u666f \u7528\u591a\u79cd\u64e6\u9664\u5de5\u5177\u53bb\u9664\u80cc\u666f","title":"\u6a61\u76ae\u64e6\u7ec3\u4e60"},{"location":"PS/PS3/#_18","text":"","title":"\u56fe\u50cf\u586b\u5145\u5de5\u5177"},{"location":"PS/PS3/#_19","text":"\u201c\u6e10\u53d8\u5de5\u5177\u201d\u53ef\u4ee5\u5728\u6574\u4e2a\u6587\u6863\u6216\u9009\u533a\u5185\u586b\u5145\u6e10\u53d8\u8272\uff0c\u5e76\u4e14\u53ef\u4ee5\u521b\u5efa\u591a\u79cd\u989c\u8272\u95f4\u7684\u6df7\u5408\u6548\u679c\u3002\u5355\u51fb\u5de5\u5177\u7bb1\u4e2d\u7684\u201c\u6e10\u53d8\u5de5\u5177\u201d\u6309\u94ae\uff0c\u5728\u9009\u9879\u680f\u4e2d\u5355\u51fb\u201c\u6e10\u53d8\u989c\u8272\u6761\u201d\uff0c\u5728\u5f39\u51fa\u7684\u201c\u6e10\u53d8\u7f16\u8f91\u5668\u201d\u4e2d\u7f16\u8f91\u6e10\u53d8\u989c\u8272\uff0c\u63a5\u7740\u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u5408\u9002\u7684\u6e10\u53d8\u7c7b\u578b\u4ee5\u53ca\u6a21\u5f0f\u3001\u4e0d\u900f\u660e\u5ea6\u7b49\u53c2\u6570\uff0c\u8bbe\u7f6e\u5b8c\u6bd5\u540e\u5728\u753b\u9762\u4e2d\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u5e76\u62d6\u62fd\uff0c\u677e\u5f00\u5149\u6807\u540e\u5373\u53ef\u5728\u753b\u9762\u4e2d\u586b\u5145\u6e10\u53d8\u3002","title":"\u6e10\u53d8\u5de5\u5177"},{"location":"PS/PS3/#_20","text":"\u201c\u6cb9\u6f06\u6876\u5de5\u5177\u201d\u53ef\u4ee5\u5728\u56fe\u50cf\u4e2d\u586b\u5145\u524d\u666f\u8272\u6216\u56fe\u6848\uff0c\u5982\u679c\u521b\u5efa\u4e86\u9009\u533a\uff0c\u586b\u5145\u7684\u533a\u57df\u4e3a\u5f53\u524d\u9009\u533a\uff1b\u5982\u679c\u6ca1\u6709\u521b\u5efa\u9009\u533a\uff0c\u586b\u5145\u7684\u662f\u4e0e\u9f20\u6807\u5355\u51fb\u5904\u989c\u8272\u76f8\u8fd1\u7684\u533a\u57df\u3002","title":"\u6cb9\u6f06\u6876\u5de5\u5177"},{"location":"PS/PS3/#_21","text":"\u7528\u586b\u5145\u5236\u4f5c\u7c89\u7d2b\u8272\u68a6\u5e7b\u6548\u679c","title":"\u586b\u5145\u7ec3\u4e60"},{"location":"PS/PS4/","text":"\u56fe\u7ae0\u5de5\u5177\u7ec4 \u4eff\u5236\u56fe\u7ae0\u5de5\u5177 \u201c\u4eff\u5236\u56fe\u7ae0\u5de5\u5177\u201d\u53ef\u4ee5\u5c06\u56fe\u50cf\u7684\u4e00\u90e8\u5206\u7ed8\u5236\u5230\u540c\u4e00\u56fe\u50cf\u7684\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u3002 \u201c\u4eff\u5236\u56fe\u7ae0\u5de5\u5177\u201d\u5bf9\u4e8e\u590d\u5236\u5bf9\u8c61\u6216\u4fee\u590d\u56fe\u50cf\u4e2d\u7684\u7f3a\u9677\u975e\u5e38\u6709\u7528\u3002\u5355\u51fb\u8be5\u5de5\u5177\uff0c\u5728\u4eff\u5236\u7684\u6837\u672c\u533a\u57df\u6309\u4f4f Alt \u952e\u5e76\u5355\u51fb\uff0c\u8fdb\u884c\u53d6\u6837\u3002\u7136\u540e\u5230\u9700\u8981\u7ed8\u5236\u7684\u533a\u57df\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u5e76\u62d6\u52a8\uff0c\u521a\u521a\u53d6\u6837\u533a\u57df\u7684\u50cf\u7d20\u4f1a\u88ab\u7ed8\u5236\u5230\u5f53\u524d\u4f4d\u7f6e\u3002 \u5355\u51fb\u201c\u4eff\u5236\u56fe\u7ae0\u5de5\u5177\u201d\u6309\u94ae\uff0c\u8bbe\u7f6e\u5408\u9002\u7684\u7b14\u5c16\uff0c\u7136\u540e\u5728\u53d6\u6837\u7684\u4f4d\u7f6e\u6309\u4f4f Alt \u952e\u5355\u51fb\u8fdb\u884c\u62fe\u53d6\u3002\u7136\u540e\u5728\u9700\u8981\u4fee\u8865\u7684\u4f4d\u7f6e\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u62d3\u5c55\u8fdb\u884c\u8986\u76d6\u3002 \u4eff\u5236\u56fe\u7ae0\u7ec3\u4e60 \u4f7f\u7528\u4eff\u5236\u6e90\u9762\u677f\u4e0e\u4eff\u5236\u56fe\u7ae0\u5de5\u5177 \u4f7f\u7528\u4eff\u5236\u56fe\u7ae0\u4fee\u8865\u5929\u7a7a \u56fe\u6848\u56fe\u7ae0\u5de5\u5177 \u201c\u56fe\u6848\u56fe\u7ae0\u5de5\u5177\u201d\u53ef\u4ee5\u4f7f\u7528\u9884\u8bbe\u56fe\u6848\u6216\u8f7d\u5165\u7684\u56fe\u6848\u8fdb\u884c\u7ed8\u753b\uff0c\u9996\u5148\u5728\u9009\u9879\u680f\u4e2d\u9009\u62e9\u4e00\u79cd\u5408\u9002\u7684\u56fe\u6848\uff0c\u5e76\u8bbe\u7f6e\u6df7\u5408\u6a21\u5f0f\u4ee5\u53ca\u753b\u7b14\u7684\u4e0d\u900f\u660e\u5ea6\uff0c\u63a5\u7740\u5728\u753b\u9762\u4e2d\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u5e76\u62d6\u52a8\u5373\u53ef\u7ed8\u5236\u51fa\u56fe\u6848\u3002 \u53ef\u901a\u8fc7\u81ea\u5b9a\u4e49\u56fe\u6848\u6765\u8fbe\u5230\u201c\u76d6\u7ae0\u201d\u7684\u76ee\u7684\u3002 \u4fee\u590d\u5de5\u5177\u7ec4 \u6c61\u70b9\u4fee\u590d\u753b\u7b14\u5de5\u5177 \u4f7f\u7528\u201c\u6c61\u70b9\u4fee\u590d\u753b\u7b14\u5de5\u5177\u201d\u53ef\u4ee5\u6d88\u9664\u56fe\u50cf\u4e2d\u7684\u6c61\u70b9\u548c\u67d0\u4e2a\u5bf9\u8c61\u3002\u201c\u6c61\u70b9\u4fee\u590d\u753b\u7b14\u5de5\u5177\u201d\u4e0d\u9700\u8981\u8bbe\u7f6e\u53d6\u6837\u70b9\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u5728\u7455\u75b5\u5904\u5355\u51fb\uff0c\u5e76\u81ea\u52a8\u4ece\u6240\u4fee\u9970\u533a\u57df\u7684\u5468\u56f4\u8fdb\u884c\u53d6\u6837\u6765\u4fee\u590d\u5355\u51fb\u7684\u533a\u57df. \u6c61\u70b9\u4fee\u590d\u5de5\u5177\u7ec3\u4e60 \u4f7f\u7528\u6c61\u70b9\u4fee\u590d\u5de5\u5177\u53bb\u9664\u7455\u75b5 \u4fee\u590d\u753b\u7b14\u5de5\u5177 \u4e0e\u201c\u4eff\u5236\u56fe\u7ae0\u5de5\u5177\u201d\u7684\u4f7f\u7528\u65b9\u6cd5\u76f8\u540c\uff0c\u201c\u4fee\u590d\u753b\u7b14\u5de5\u5177\u201d\u53ef\u4ee5\u4fee\u590d\u56fe\u50cf\u7684\u7455\u75b5\uff0c\u4e5f\u53ef\u4ee5\u7528\u56fe\u50cf\u4e2d\u7684\u50cf\u7d20\u4f5c\u4e3a\u6837\u672c\u8fdb\u884c\u7ed8\u5236\u3002\u4e0d\u540c\u7684\u662f\uff0c\u201c\u4fee\u590d\u753b\u7b14\u5de5\u5177\u201d\u8fd8\u53ef\u5c06\u6837\u672c\u50cf\u7d20\u7684\u7eb9\u7406\u3001\u5149\u7167\u3001\u900f\u660e\u5ea6\u548c\u9634\u5f71\u4e0e\u6240\u4fee\u590d\u7684\u50cf\u7d20\u8fdb\u884c\u5339\u914d\uff0c\u4ece\u800c\u4f7f\u4fee\u590d\u540e\u7684\u50cf\u7d20\u4e0d\u7559\u75d5\u8ff9\u5730\u878d\u5165\u56fe\u50cf\u7684\u5176\u4ed6\u90e8\u5206\u3002 \u4fee\u590d\u753b\u7b14\u5de5\u5177\u5728\u8fdb\u884c\u4eff\u5236\u5b9a\u4e49\u6e90\u7684\u540c\u65f6\uff0c\u6d82\u62b9\u7684\u533a\u57df\u4e0e\u5f53\u524d\u5149\u6807\u7ecf\u8fc7\u7684\u4f4d\u7f6e\u8fdb\u884c\u989c\u8272\u8ba1\u7b97\uff0c\u5b9e\u73b0\u989c\u8272\u7684\u81ea\u7136\u8fc7\u6e21\u3002\u5bf9\u4e8e\u56fe\u50cf\u4e2d\u591a\u4f59\u7684\u5185\u5bb9\u53ef\u4ee5\u5b9e\u73b0\u795e\u5947\u7684\u201c\u6d88\u5931\u201d\u3002 \u4fee\u590d\u753b\u7b14\u5de5\u5177\u7ec3\u4e60 \u4f7f\u7528\u4fee\u590d\u753b\u7b14\u53bb\u9664\u9762\u90e8\u7ec6\u7eb9 \u4fee\u8865\u5de5\u5177 \u4fee\u8865\u5de5\u5177\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u533a\u57df\u6216\u56fe\u6848\u4e2d\u7684\u50cf\u7d20\u6765\u4fee\u590d\u9009\u4e2d\u7684\u533a\u57df\u3002\u4fee\u8865\u5de5\u5177\u4f1a\u5c06\u9009\u533a\u5185\u50cf\u7d20\u7684\u7eb9\u7406\u3001\u5149\u7167\u548c\u9634\u5f71\u7b49\u5185\u5bb9\u4e0e\u6e90\u50cf\u7d20\u8fdb\u884c\u5339\u914d\uff0c\u8ba1\u7b97\u51fa\u6700\u4f73\u7684\u4fee\u590d\u6548\u679c\u3002 \u4fee\u8865\u5de5\u5177\u7ec3\u4e60 \u4f7f\u7528\u4fee\u8865\u5de5\u5177\u53bb\u9664\u6587\u5b57 \u5185\u5bb9\u611f\u77e5\u79fb\u52a8\u5de5\u5177 \u5185\u5bb9\u611f\u77e5\u79fb\u52a8\u5de5\u5177\u662fCS6\u7248\u672c\u4e2d\u65b0\u589e\u52a0\u7684\u667a\u80fd\u5de5\u5177\uff0c\u6839\u636e\u8bbe\u7f6e\u7684\u5c5e\u6027\u662f\u6269\u5c55\uff08\u590d\u5236\uff09\u6216\u79fb\u52a8\uff0c\u5b9e\u73b0\u9009\u62e9\u5185\u5bb9\u7684\u590d\u5236\u6216\u662f\u79fb\u52a8\u64cd\u4f5c\uff0c\u7531\u7cfb\u7edf\u81ea\u52a8\u5bf9\u9009\u533a\u7684\u8fb9\u7f18\u8fdb\u884c\u8ba1\u7b97\uff0c\u8f7b\u677e\u5b9e\u73b0\u201c\u4e7e\u5764\u5927\u632a\u79fb\u201d\u3002 \u4f7f\u7528\u201c\u5185\u5bb9\u611f\u77e5\u79fb\u52a8\u5de5\u5177\u201d\u53ef\u4ee5\u5728\u65e0\u9700\u590d\u6742\u56fe\u5c42\u6216\u6162\u901f\u7cbe\u786e\u7684\u9009\u62e9\u9009\u533a\u7684\u60c5\u51b5\u4e0b\u5feb\u901f\u5730\u91cd\u6784\u56fe\u50cf\u3002\u9996\u5148\u5355\u51fb\u5de5\u5177\u7bb1\u4e2d\u7684\u201c\u5185\u5bb9\u611f\u77e5\u79fb\u52a8\u5de5\u5177\u201d\uff0c\u5728\u56fe\u50cf\u4e0a\u7ed8\u5236\u533a\u57df\uff0c\u5e76\u5c06\u5f71\u50cf\u4efb\u610f\u5730\u79fb\u52a8\u5230\u6307\u5b9a\u7684\u533a\u5757\u4e2d\uff0c\u8fd9\u65f6 Photoshop \u5c31\u4f1a\u81ea\u52a8\u5c06\u5f71\u50cf\u4e0e\u56db\u5468\u7684\u666f\u7269\u878d\u5408\u5728\u4e00\u8d77\uff0c\u800c\u539f\u59cb\u7684\u533a\u57df\u5219\u4f1a\u8fdb\u884c\u667a\u80fd\u586b\u5145\u3002 \u7ea2\u773c\u5de5\u5177 \u5728\u5149\u7ebf\u8f83\u6697\u7684\u73af\u5883\u4e2d\u7167\u76f8\u65f6\uff0c\u7531\u4e8e\u4e3b\u4f53\u7684\u8679\u819c\u5f20\u5f00\u5f97\u5f88\u5bbd\uff0c\u7ecf\u5e38\u4f1a\u51fa\u73b0\u201c\u7ea2\u773c\u201d\u73b0\u8c61\u3002\u201c\u7ea2\u773c\u5de5\u5177\u201d\u53ef\u4ee5\u901a\u8fc7\u5728\u77b3\u5b54\u5904\u5355\u51fb\uff0c\u5feb\u901f\u53bb\u9664\u7531\u95ea\u5149\u706f\u5bfc\u81f4\u7684\u7ea2\u8272\u53cd\u5149\u3002 \u5386\u53f2\u8bb0\u5f55\u5de5\u5177\u7ec4 \u5386\u53f2\u8bb0\u5f55\u753b\u7b14\u5de5\u5177 \u201c\u5386\u53f2\u8bb0\u5f55\u753b\u7b14\u5de5\u5177\u201d\u53ef\u4ee5\u7406\u6027\u3001\u771f\u5b9e\u5730\u8fd8\u539f\u67d0\u4e00\u533a\u57df\u7684\u67d0\u4e00\u6b65\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5c06\u6807\u8bb0\u7684\u5386\u53f2\u8bb0\u5f55\u72b6\u6001\u6216\u5feb\u7167\u7528\u4f5c\u6e90\u6570\u636e\u5bf9\u56fe\u50cf\u8fdb\u884c\u4fee\u6539\u3002\u201c\u5386\u53f2\u8bb0\u5f55\u753b\u7b14\u5de5\u5177\u201d\u9700\u8981\u4e0e\u201c\u5386\u53f2\u8bb0\u5f55\u9762\u677f\u201d\u5171\u540c\u4f7f\u7528\uff0c\u9996\u5148\u9700\u8981\u5728\u201c\u5386\u53f2\u8bb0\u5f55\u9762\u677f\u201d\u4e2d\u6807\u8bb0\u4e00\u4e2a\u64cd\u4f5c\u6b65\u9aa4\uff0c\u7136\u540e\u4f7f\u7528\u201c\u5386\u53f2\u8bb0\u5f55\u753b\u7b14\u201d\u5728\u753b\u9762\u4e2d\u7ed8\u5236\uff0c\u88ab\u7ed8\u5236\u7684\u533a\u57df\u4f1a\u5448\u73b0\u51fa\u6807\u8bb0\u6b65\u9aa4\u7684\u72b6\u6001\u3002 \u5386\u53f2\u753b\u7b14\u5de5\u5177\u7ec3\u4e60 \u4f7f\u7528\u5386\u53f2\u8bb0\u5f55\u753b\u7b14\u8fd8\u539f\u5c40\u90e8\u6548\u679c \u5386\u53f2\u8bb0\u5f55\u827a\u672f\u753b\u7b14\u5de5\u5177 \u4e0e\u201c\u5386\u53f2\u8bb0\u5f55\u753b\u7b14\u5de5\u5177\u201d\u76f8\u4f3c\uff0c\u201c\u5386\u53f2\u8bb0\u5f55\u827a\u672f\u753b\u7b14\u5de5\u5177\u201d\u4e5f\u53ef\u4ee5\u5c06\u6807\u8bb0\u7684\u5386\u53f2\u8bb0\u5f55\u72b6\u6001\u6216\u5feb\u7167\u7528\u4f5c\u6e90\u6570\u636e\u5bf9\u56fe\u50cf\u8fdb\u884c\u4fee\u6539\u3002\u4e0d\u540c\u7684\u662f\uff0c\u201c\u5386\u53f2\u8bb0\u5f55\u827a\u672f\u753b\u7b14\u5de5\u5177\u201d\u5728\u4f7f\u7528\u539f\u59cb\u6570\u636e\u7684\u540c\u65f6\uff0c\u8fd8\u53ef\u4ee5\u4e3a\u56fe\u50cf\u521b\u5efa\u4e0d\u540c\u7684\u989c\u8272\u548c\u827a\u672f\u98ce\u683c\u3002 \u6a21\u7cca\u9510\u5316\u5de5\u5177\u7ec4 \u6a21\u7cca\u5de5\u5177 \u201c\u6a21\u7cca\u5de5\u5177\u201d\u53ef\u67d4\u5316\u786c\u8fb9\u7f18\u6216\u51cf\u5c11\u56fe\u50cf\u4e2d\u7684\u7ec6\u8282\u3002\u4f7f\u7528\u8be5\u5de5\u5177\u5728\u67d0\u4e2a\u533a\u57df\u4e0a\u65b9\u7ed8\u5236\u7684\u6b21\u6570\u8d8a\u591a\uff0c\u8be5\u533a\u57df\u5c31\u8d8a\u6a21 \u7cca\u3002 \u9510\u5316\u5de5\u5177 \u201c\u9510\u5316\u5de5\u5177\u201d\u4e0e\u201c\u6a21\u7cca\u5de5\u5177\u201d\u76f8\u53cd\uff0c\u53ef\u4ee5\u589e\u5f3a\u56fe\u50cf\u4e2d\u76f8\u90bb\u50cf\u7d20\u4e4b\u95f4\u7684\u5bf9\u6bd4\uff0c\u4ee5\u63d0\u9ad8\u56fe\u50cf\u7684\u6e05\u6670\u5ea6\u3002 \u6d82\u62b9\u5de5\u5177 \u201c\u6d82\u62b9\u5de5\u5177\u201d\u53ef\u4ee5\u6a21\u62df\u624b\u6307\u5212\u8fc7\u6e7f\u6cb9\u6f06\u65f6\u6240\u4ea7\u751f\u7684\u6548\u679c\u3002\u8be5\u5de5\u5177\u53ef\u4ee5\u62fe\u53d6\u9f20\u6807\u5355\u51fb\u5904\u7684\u989c\u8272\uff0c\u5e76\u6cbf\u7740\u62d6\u62fd\u7684\u65b9\u5411\u5c55\u5f00\u8fd9\u79cd\u989c\u8272\u3002 \u51cf\u6de1\u52a0\u6df1\u5de5\u5177\u7ec4 \u51cf\u6de1\u5de5\u5177 \u201c\u51cf\u6de1\u5de5\u5177\u201d\u53ef\u4ee5\u5bf9\u56fe\u50cf\u4eae\u90e8\u3001\u4e2d\u95f4\u8c03\u548c\u6697\u90e8\u5206\u522b\u8fdb\u884c\u51cf\u6de1\u5904\u7406\uff0c\u5728\u67d0\u4e2a\u533a\u57df\u4e0a\u65b9\u7ed8\u5236\u7684\u6b21\u6570\u8d8a\u591a\uff0c\u8be5\u533a\u57df\u5c31\u4f1a\u53d8\u5f97\u8d8a\u4eae\u3002 \u51cf\u6de1\u5de5\u5177\u7ec3\u4e60 \u4f7f\u7528\u51cf\u6de1\u5de5\u5177\u7f8e\u767d\u4eba\u50cf \u52a0\u6df1\u5de5\u5177 \u201c\u52a0\u6df1\u5de5\u5177\u201d\u53ef\u4ee5\u5bf9\u56fe\u50cf\u8fdb\u884c\u52a0\u6df1\u5904\u7406\uff0c\u5728\u67d0\u4e2a\u533a\u57df\u4e0a\u65b9\u7ed8\u5236\u7684\u6b21\u6570\u8d8a\u591a\uff0c\u8be5\u533a\u57df\u5c31\u4f1a\u53d8\u5f97\u8d8a\u6697\u3002 \u52a0\u6df1\u5de5\u5177\u7ec3\u4e60 \u5229\u7528\u52a0\u6df1\u51cf\u6de1\u5de5\u5177\u8fdb\u884c\u901a\u9053\u62a0\u56fe \u6d77\u7ef5\u5de5\u5177 \u201c\u6d77\u7ef5\u5de5\u5177\u201d\u53ef\u4ee5\u589e\u52a0\u6216\u964d\u4f4e\u56fe\u50cf\u4e2d\u67d0\u4e2a\u533a\u57df\u7684\u9971\u548c\u5ea6\u3002\u5982\u679c\u662f\u7070\u5ea6\u56fe\u50cf\uff0c\u8be5\u5de5\u5177\u5c06\u901a\u8fc7\u7070\u9636\u8fdc\u79bb\u6216\u9760\u8fd1\u4e2d\u95f4\u7070\u8272\u6765\u589e\u52a0\u6216\u964d\u4f4e\u5bf9\u6bd4\u5ea6\u3002 \u6d77\u7ef5\u5de5\u5177\u7ec3\u4e60 \u4f7f\u7528\u6d77\u7ef5\u5de5\u5177\u5236\u4f5c\u590d\u53e4\u6548\u679c \u7ec3\u4e60 \u53bb\u9664\u76b1\u7eb9\u8fd8\u539f\u5e74\u8f7b\u6001 \u4f7f\u7528\u6d82\u62b9\u5de5\u5177\u5236\u4f5c\u70ab\u5f69\u5986\u9762","title":"\u4fee\u590d\u5de5\u5177\u4e0e\u56fe\u50cf\u6da6\u8272\u5de5\u5177"},{"location":"PS/PS4/#_1","text":"","title":"\u56fe\u7ae0\u5de5\u5177\u7ec4"},{"location":"PS/PS4/#_2","text":"\u201c\u4eff\u5236\u56fe\u7ae0\u5de5\u5177\u201d\u53ef\u4ee5\u5c06\u56fe\u50cf\u7684\u4e00\u90e8\u5206\u7ed8\u5236\u5230\u540c\u4e00\u56fe\u50cf\u7684\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u3002 \u201c\u4eff\u5236\u56fe\u7ae0\u5de5\u5177\u201d\u5bf9\u4e8e\u590d\u5236\u5bf9\u8c61\u6216\u4fee\u590d\u56fe\u50cf\u4e2d\u7684\u7f3a\u9677\u975e\u5e38\u6709\u7528\u3002\u5355\u51fb\u8be5\u5de5\u5177\uff0c\u5728\u4eff\u5236\u7684\u6837\u672c\u533a\u57df\u6309\u4f4f Alt \u952e\u5e76\u5355\u51fb\uff0c\u8fdb\u884c\u53d6\u6837\u3002\u7136\u540e\u5230\u9700\u8981\u7ed8\u5236\u7684\u533a\u57df\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u5e76\u62d6\u52a8\uff0c\u521a\u521a\u53d6\u6837\u533a\u57df\u7684\u50cf\u7d20\u4f1a\u88ab\u7ed8\u5236\u5230\u5f53\u524d\u4f4d\u7f6e\u3002 \u5355\u51fb\u201c\u4eff\u5236\u56fe\u7ae0\u5de5\u5177\u201d\u6309\u94ae\uff0c\u8bbe\u7f6e\u5408\u9002\u7684\u7b14\u5c16\uff0c\u7136\u540e\u5728\u53d6\u6837\u7684\u4f4d\u7f6e\u6309\u4f4f Alt \u952e\u5355\u51fb\u8fdb\u884c\u62fe\u53d6\u3002\u7136\u540e\u5728\u9700\u8981\u4fee\u8865\u7684\u4f4d\u7f6e\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u62d3\u5c55\u8fdb\u884c\u8986\u76d6\u3002","title":"\u4eff\u5236\u56fe\u7ae0\u5de5\u5177"},{"location":"PS/PS4/#_3","text":"\u4f7f\u7528\u4eff\u5236\u6e90\u9762\u677f\u4e0e\u4eff\u5236\u56fe\u7ae0\u5de5\u5177 \u4f7f\u7528\u4eff\u5236\u56fe\u7ae0\u4fee\u8865\u5929\u7a7a","title":"\u4eff\u5236\u56fe\u7ae0\u7ec3\u4e60"},{"location":"PS/PS4/#_4","text":"\u201c\u56fe\u6848\u56fe\u7ae0\u5de5\u5177\u201d\u53ef\u4ee5\u4f7f\u7528\u9884\u8bbe\u56fe\u6848\u6216\u8f7d\u5165\u7684\u56fe\u6848\u8fdb\u884c\u7ed8\u753b\uff0c\u9996\u5148\u5728\u9009\u9879\u680f\u4e2d\u9009\u62e9\u4e00\u79cd\u5408\u9002\u7684\u56fe\u6848\uff0c\u5e76\u8bbe\u7f6e\u6df7\u5408\u6a21\u5f0f\u4ee5\u53ca\u753b\u7b14\u7684\u4e0d\u900f\u660e\u5ea6\uff0c\u63a5\u7740\u5728\u753b\u9762\u4e2d\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u5e76\u62d6\u52a8\u5373\u53ef\u7ed8\u5236\u51fa\u56fe\u6848\u3002 \u53ef\u901a\u8fc7\u81ea\u5b9a\u4e49\u56fe\u6848\u6765\u8fbe\u5230\u201c\u76d6\u7ae0\u201d\u7684\u76ee\u7684\u3002","title":"\u56fe\u6848\u56fe\u7ae0\u5de5\u5177"},{"location":"PS/PS4/#_5","text":"","title":"\u4fee\u590d\u5de5\u5177\u7ec4"},{"location":"PS/PS4/#_6","text":"\u4f7f\u7528\u201c\u6c61\u70b9\u4fee\u590d\u753b\u7b14\u5de5\u5177\u201d\u53ef\u4ee5\u6d88\u9664\u56fe\u50cf\u4e2d\u7684\u6c61\u70b9\u548c\u67d0\u4e2a\u5bf9\u8c61\u3002\u201c\u6c61\u70b9\u4fee\u590d\u753b\u7b14\u5de5\u5177\u201d\u4e0d\u9700\u8981\u8bbe\u7f6e\u53d6\u6837\u70b9\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u5728\u7455\u75b5\u5904\u5355\u51fb\uff0c\u5e76\u81ea\u52a8\u4ece\u6240\u4fee\u9970\u533a\u57df\u7684\u5468\u56f4\u8fdb\u884c\u53d6\u6837\u6765\u4fee\u590d\u5355\u51fb\u7684\u533a\u57df.","title":"\u6c61\u70b9\u4fee\u590d\u753b\u7b14\u5de5\u5177"},{"location":"PS/PS4/#_7","text":"\u4f7f\u7528\u6c61\u70b9\u4fee\u590d\u5de5\u5177\u53bb\u9664\u7455\u75b5","title":"\u6c61\u70b9\u4fee\u590d\u5de5\u5177\u7ec3\u4e60"},{"location":"PS/PS4/#_8","text":"\u4e0e\u201c\u4eff\u5236\u56fe\u7ae0\u5de5\u5177\u201d\u7684\u4f7f\u7528\u65b9\u6cd5\u76f8\u540c\uff0c\u201c\u4fee\u590d\u753b\u7b14\u5de5\u5177\u201d\u53ef\u4ee5\u4fee\u590d\u56fe\u50cf\u7684\u7455\u75b5\uff0c\u4e5f\u53ef\u4ee5\u7528\u56fe\u50cf\u4e2d\u7684\u50cf\u7d20\u4f5c\u4e3a\u6837\u672c\u8fdb\u884c\u7ed8\u5236\u3002\u4e0d\u540c\u7684\u662f\uff0c\u201c\u4fee\u590d\u753b\u7b14\u5de5\u5177\u201d\u8fd8\u53ef\u5c06\u6837\u672c\u50cf\u7d20\u7684\u7eb9\u7406\u3001\u5149\u7167\u3001\u900f\u660e\u5ea6\u548c\u9634\u5f71\u4e0e\u6240\u4fee\u590d\u7684\u50cf\u7d20\u8fdb\u884c\u5339\u914d\uff0c\u4ece\u800c\u4f7f\u4fee\u590d\u540e\u7684\u50cf\u7d20\u4e0d\u7559\u75d5\u8ff9\u5730\u878d\u5165\u56fe\u50cf\u7684\u5176\u4ed6\u90e8\u5206\u3002 \u4fee\u590d\u753b\u7b14\u5de5\u5177\u5728\u8fdb\u884c\u4eff\u5236\u5b9a\u4e49\u6e90\u7684\u540c\u65f6\uff0c\u6d82\u62b9\u7684\u533a\u57df\u4e0e\u5f53\u524d\u5149\u6807\u7ecf\u8fc7\u7684\u4f4d\u7f6e\u8fdb\u884c\u989c\u8272\u8ba1\u7b97\uff0c\u5b9e\u73b0\u989c\u8272\u7684\u81ea\u7136\u8fc7\u6e21\u3002\u5bf9\u4e8e\u56fe\u50cf\u4e2d\u591a\u4f59\u7684\u5185\u5bb9\u53ef\u4ee5\u5b9e\u73b0\u795e\u5947\u7684\u201c\u6d88\u5931\u201d\u3002","title":"\u4fee\u590d\u753b\u7b14\u5de5\u5177"},{"location":"PS/PS4/#_9","text":"\u4f7f\u7528\u4fee\u590d\u753b\u7b14\u53bb\u9664\u9762\u90e8\u7ec6\u7eb9","title":"\u4fee\u590d\u753b\u7b14\u5de5\u5177\u7ec3\u4e60"},{"location":"PS/PS4/#_10","text":"\u4fee\u8865\u5de5\u5177\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u533a\u57df\u6216\u56fe\u6848\u4e2d\u7684\u50cf\u7d20\u6765\u4fee\u590d\u9009\u4e2d\u7684\u533a\u57df\u3002\u4fee\u8865\u5de5\u5177\u4f1a\u5c06\u9009\u533a\u5185\u50cf\u7d20\u7684\u7eb9\u7406\u3001\u5149\u7167\u548c\u9634\u5f71\u7b49\u5185\u5bb9\u4e0e\u6e90\u50cf\u7d20\u8fdb\u884c\u5339\u914d\uff0c\u8ba1\u7b97\u51fa\u6700\u4f73\u7684\u4fee\u590d\u6548\u679c\u3002","title":"\u4fee\u8865\u5de5\u5177"},{"location":"PS/PS4/#_11","text":"\u4f7f\u7528\u4fee\u8865\u5de5\u5177\u53bb\u9664\u6587\u5b57","title":"\u4fee\u8865\u5de5\u5177\u7ec3\u4e60"},{"location":"PS/PS4/#_12","text":"\u5185\u5bb9\u611f\u77e5\u79fb\u52a8\u5de5\u5177\u662fCS6\u7248\u672c\u4e2d\u65b0\u589e\u52a0\u7684\u667a\u80fd\u5de5\u5177\uff0c\u6839\u636e\u8bbe\u7f6e\u7684\u5c5e\u6027\u662f\u6269\u5c55\uff08\u590d\u5236\uff09\u6216\u79fb\u52a8\uff0c\u5b9e\u73b0\u9009\u62e9\u5185\u5bb9\u7684\u590d\u5236\u6216\u662f\u79fb\u52a8\u64cd\u4f5c\uff0c\u7531\u7cfb\u7edf\u81ea\u52a8\u5bf9\u9009\u533a\u7684\u8fb9\u7f18\u8fdb\u884c\u8ba1\u7b97\uff0c\u8f7b\u677e\u5b9e\u73b0\u201c\u4e7e\u5764\u5927\u632a\u79fb\u201d\u3002 \u4f7f\u7528\u201c\u5185\u5bb9\u611f\u77e5\u79fb\u52a8\u5de5\u5177\u201d\u53ef\u4ee5\u5728\u65e0\u9700\u590d\u6742\u56fe\u5c42\u6216\u6162\u901f\u7cbe\u786e\u7684\u9009\u62e9\u9009\u533a\u7684\u60c5\u51b5\u4e0b\u5feb\u901f\u5730\u91cd\u6784\u56fe\u50cf\u3002\u9996\u5148\u5355\u51fb\u5de5\u5177\u7bb1\u4e2d\u7684\u201c\u5185\u5bb9\u611f\u77e5\u79fb\u52a8\u5de5\u5177\u201d\uff0c\u5728\u56fe\u50cf\u4e0a\u7ed8\u5236\u533a\u57df\uff0c\u5e76\u5c06\u5f71\u50cf\u4efb\u610f\u5730\u79fb\u52a8\u5230\u6307\u5b9a\u7684\u533a\u5757\u4e2d\uff0c\u8fd9\u65f6 Photoshop \u5c31\u4f1a\u81ea\u52a8\u5c06\u5f71\u50cf\u4e0e\u56db\u5468\u7684\u666f\u7269\u878d\u5408\u5728\u4e00\u8d77\uff0c\u800c\u539f\u59cb\u7684\u533a\u57df\u5219\u4f1a\u8fdb\u884c\u667a\u80fd\u586b\u5145\u3002","title":"\u5185\u5bb9\u611f\u77e5\u79fb\u52a8\u5de5\u5177"},{"location":"PS/PS4/#_13","text":"\u5728\u5149\u7ebf\u8f83\u6697\u7684\u73af\u5883\u4e2d\u7167\u76f8\u65f6\uff0c\u7531\u4e8e\u4e3b\u4f53\u7684\u8679\u819c\u5f20\u5f00\u5f97\u5f88\u5bbd\uff0c\u7ecf\u5e38\u4f1a\u51fa\u73b0\u201c\u7ea2\u773c\u201d\u73b0\u8c61\u3002\u201c\u7ea2\u773c\u5de5\u5177\u201d\u53ef\u4ee5\u901a\u8fc7\u5728\u77b3\u5b54\u5904\u5355\u51fb\uff0c\u5feb\u901f\u53bb\u9664\u7531\u95ea\u5149\u706f\u5bfc\u81f4\u7684\u7ea2\u8272\u53cd\u5149\u3002","title":"\u7ea2\u773c\u5de5\u5177"},{"location":"PS/PS4/#_14","text":"","title":"\u5386\u53f2\u8bb0\u5f55\u5de5\u5177\u7ec4"},{"location":"PS/PS4/#_15","text":"\u201c\u5386\u53f2\u8bb0\u5f55\u753b\u7b14\u5de5\u5177\u201d\u53ef\u4ee5\u7406\u6027\u3001\u771f\u5b9e\u5730\u8fd8\u539f\u67d0\u4e00\u533a\u57df\u7684\u67d0\u4e00\u6b65\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5c06\u6807\u8bb0\u7684\u5386\u53f2\u8bb0\u5f55\u72b6\u6001\u6216\u5feb\u7167\u7528\u4f5c\u6e90\u6570\u636e\u5bf9\u56fe\u50cf\u8fdb\u884c\u4fee\u6539\u3002\u201c\u5386\u53f2\u8bb0\u5f55\u753b\u7b14\u5de5\u5177\u201d\u9700\u8981\u4e0e\u201c\u5386\u53f2\u8bb0\u5f55\u9762\u677f\u201d\u5171\u540c\u4f7f\u7528\uff0c\u9996\u5148\u9700\u8981\u5728\u201c\u5386\u53f2\u8bb0\u5f55\u9762\u677f\u201d\u4e2d\u6807\u8bb0\u4e00\u4e2a\u64cd\u4f5c\u6b65\u9aa4\uff0c\u7136\u540e\u4f7f\u7528\u201c\u5386\u53f2\u8bb0\u5f55\u753b\u7b14\u201d\u5728\u753b\u9762\u4e2d\u7ed8\u5236\uff0c\u88ab\u7ed8\u5236\u7684\u533a\u57df\u4f1a\u5448\u73b0\u51fa\u6807\u8bb0\u6b65\u9aa4\u7684\u72b6\u6001\u3002","title":"\u5386\u53f2\u8bb0\u5f55\u753b\u7b14\u5de5\u5177"},{"location":"PS/PS4/#_16","text":"\u4f7f\u7528\u5386\u53f2\u8bb0\u5f55\u753b\u7b14\u8fd8\u539f\u5c40\u90e8\u6548\u679c","title":"\u5386\u53f2\u753b\u7b14\u5de5\u5177\u7ec3\u4e60"},{"location":"PS/PS4/#_17","text":"\u4e0e\u201c\u5386\u53f2\u8bb0\u5f55\u753b\u7b14\u5de5\u5177\u201d\u76f8\u4f3c\uff0c\u201c\u5386\u53f2\u8bb0\u5f55\u827a\u672f\u753b\u7b14\u5de5\u5177\u201d\u4e5f\u53ef\u4ee5\u5c06\u6807\u8bb0\u7684\u5386\u53f2\u8bb0\u5f55\u72b6\u6001\u6216\u5feb\u7167\u7528\u4f5c\u6e90\u6570\u636e\u5bf9\u56fe\u50cf\u8fdb\u884c\u4fee\u6539\u3002\u4e0d\u540c\u7684\u662f\uff0c\u201c\u5386\u53f2\u8bb0\u5f55\u827a\u672f\u753b\u7b14\u5de5\u5177\u201d\u5728\u4f7f\u7528\u539f\u59cb\u6570\u636e\u7684\u540c\u65f6\uff0c\u8fd8\u53ef\u4ee5\u4e3a\u56fe\u50cf\u521b\u5efa\u4e0d\u540c\u7684\u989c\u8272\u548c\u827a\u672f\u98ce\u683c\u3002","title":"\u5386\u53f2\u8bb0\u5f55\u827a\u672f\u753b\u7b14\u5de5\u5177"},{"location":"PS/PS4/#_18","text":"","title":"\u6a21\u7cca\u9510\u5316\u5de5\u5177\u7ec4"},{"location":"PS/PS4/#_19","text":"\u201c\u6a21\u7cca\u5de5\u5177\u201d\u53ef\u67d4\u5316\u786c\u8fb9\u7f18\u6216\u51cf\u5c11\u56fe\u50cf\u4e2d\u7684\u7ec6\u8282\u3002\u4f7f\u7528\u8be5\u5de5\u5177\u5728\u67d0\u4e2a\u533a\u57df\u4e0a\u65b9\u7ed8\u5236\u7684\u6b21\u6570\u8d8a\u591a\uff0c\u8be5\u533a\u57df\u5c31\u8d8a\u6a21 \u7cca\u3002","title":"\u6a21\u7cca\u5de5\u5177"},{"location":"PS/PS4/#_20","text":"\u201c\u9510\u5316\u5de5\u5177\u201d\u4e0e\u201c\u6a21\u7cca\u5de5\u5177\u201d\u76f8\u53cd\uff0c\u53ef\u4ee5\u589e\u5f3a\u56fe\u50cf\u4e2d\u76f8\u90bb\u50cf\u7d20\u4e4b\u95f4\u7684\u5bf9\u6bd4\uff0c\u4ee5\u63d0\u9ad8\u56fe\u50cf\u7684\u6e05\u6670\u5ea6\u3002","title":"\u9510\u5316\u5de5\u5177"},{"location":"PS/PS4/#_21","text":"\u201c\u6d82\u62b9\u5de5\u5177\u201d\u53ef\u4ee5\u6a21\u62df\u624b\u6307\u5212\u8fc7\u6e7f\u6cb9\u6f06\u65f6\u6240\u4ea7\u751f\u7684\u6548\u679c\u3002\u8be5\u5de5\u5177\u53ef\u4ee5\u62fe\u53d6\u9f20\u6807\u5355\u51fb\u5904\u7684\u989c\u8272\uff0c\u5e76\u6cbf\u7740\u62d6\u62fd\u7684\u65b9\u5411\u5c55\u5f00\u8fd9\u79cd\u989c\u8272\u3002","title":"\u6d82\u62b9\u5de5\u5177"},{"location":"PS/PS4/#_22","text":"","title":"\u51cf\u6de1\u52a0\u6df1\u5de5\u5177\u7ec4"},{"location":"PS/PS4/#_23","text":"\u201c\u51cf\u6de1\u5de5\u5177\u201d\u53ef\u4ee5\u5bf9\u56fe\u50cf\u4eae\u90e8\u3001\u4e2d\u95f4\u8c03\u548c\u6697\u90e8\u5206\u522b\u8fdb\u884c\u51cf\u6de1\u5904\u7406\uff0c\u5728\u67d0\u4e2a\u533a\u57df\u4e0a\u65b9\u7ed8\u5236\u7684\u6b21\u6570\u8d8a\u591a\uff0c\u8be5\u533a\u57df\u5c31\u4f1a\u53d8\u5f97\u8d8a\u4eae\u3002","title":"\u51cf\u6de1\u5de5\u5177"},{"location":"PS/PS4/#_24","text":"\u4f7f\u7528\u51cf\u6de1\u5de5\u5177\u7f8e\u767d\u4eba\u50cf","title":"\u51cf\u6de1\u5de5\u5177\u7ec3\u4e60"},{"location":"PS/PS4/#_25","text":"\u201c\u52a0\u6df1\u5de5\u5177\u201d\u53ef\u4ee5\u5bf9\u56fe\u50cf\u8fdb\u884c\u52a0\u6df1\u5904\u7406\uff0c\u5728\u67d0\u4e2a\u533a\u57df\u4e0a\u65b9\u7ed8\u5236\u7684\u6b21\u6570\u8d8a\u591a\uff0c\u8be5\u533a\u57df\u5c31\u4f1a\u53d8\u5f97\u8d8a\u6697\u3002","title":"\u52a0\u6df1\u5de5\u5177"},{"location":"PS/PS4/#_26","text":"\u5229\u7528\u52a0\u6df1\u51cf\u6de1\u5de5\u5177\u8fdb\u884c\u901a\u9053\u62a0\u56fe","title":"\u52a0\u6df1\u5de5\u5177\u7ec3\u4e60"},{"location":"PS/PS4/#_27","text":"\u201c\u6d77\u7ef5\u5de5\u5177\u201d\u53ef\u4ee5\u589e\u52a0\u6216\u964d\u4f4e\u56fe\u50cf\u4e2d\u67d0\u4e2a\u533a\u57df\u7684\u9971\u548c\u5ea6\u3002\u5982\u679c\u662f\u7070\u5ea6\u56fe\u50cf\uff0c\u8be5\u5de5\u5177\u5c06\u901a\u8fc7\u7070\u9636\u8fdc\u79bb\u6216\u9760\u8fd1\u4e2d\u95f4\u7070\u8272\u6765\u589e\u52a0\u6216\u964d\u4f4e\u5bf9\u6bd4\u5ea6\u3002","title":"\u6d77\u7ef5\u5de5\u5177"},{"location":"PS/PS4/#_28","text":"\u4f7f\u7528\u6d77\u7ef5\u5de5\u5177\u5236\u4f5c\u590d\u53e4\u6548\u679c","title":"\u6d77\u7ef5\u5de5\u5177\u7ec3\u4e60"},{"location":"PS/PS4/#_29","text":"\u53bb\u9664\u76b1\u7eb9\u8fd8\u539f\u5e74\u8f7b\u6001 \u4f7f\u7528\u6d82\u62b9\u5de5\u5177\u5236\u4f5c\u70ab\u5f69\u5986\u9762","title":"\u7ec3\u4e60"},{"location":"PS/PS5/","text":"\u4e86\u89e3\u7ed8\u56fe\u6a21\u5f0f \u5f62\u72b6\uff1a\u5728\u5355\u72ec\u7684\u56fe\u5c42\u4e2d\u7ed8\u5236\u4e00\u4e2a\u6216\u591a\u4e2a\u5f62\u72b6\u3002 \u8def\u5f84\uff1a\u5728\u5f53\u524d\u56fe\u5c42\u4e2d\u7ed8\u5236\u4e00\u4e2a\u4e34\u65f6\u5de5\u4f5c\u8def\u5f84\uff0c\u53ef\u968f\u540e\u4f7f\u7528\u5b83\u6765\u521b\u5efa\u9009\u533a\u548c\u77e2\u91cf\u8499\u7248\uff0c\u6216\u8005\u4f7f\u7528\u989c\u8272\u586b\u5145\u548c\u63cf\u8fb9\u4ee5\u521b\u5efa\u6805\u683c\u56fe\u5f62\u3002\u7ed8\u5236\u5b8c\u6210\u540e\u53ef\u5728\u201c\u8def\u5f84\u201d\u9762\u677f\u4e2d\u8fdb\u884c\u5b58\u50a8\u3002 \u50cf\u7d20\uff1a\u76f4\u63a5\u5728\u9009\u4e2d\u56fe\u5c42\u4e0a\u7ed8\u5236\uff0c\u4e0e\u7ed8\u753b\u5de5\u5177\u7684\u529f\u80fd\u975e\u5e38\u7c7b\u4f3c\u3002\u5728\u6b64\u6a21\u5f0f\u4e2d\u5de5\u4f5c\u65f6\uff0c\u521b\u5efa\u7684\u662f\u4f4d\u56fe\u56fe\u50cf\uff0c\u800c\u4e0d\u662f\u77e2\u91cf\u56fe\u5f62\u3002\u53ef\u4ee5\u50cf\u5904\u7406\u4efb\u4f55\u6805\u683c\u56fe\u50cf\u4e00\u6837\u6765\u5904\u7406\u7ed8\u5236\u7684\u5f62\u72b6\u3002\u5728\u6b64\u6a21\u5f0f\u4e2d\u53ea\u80fd\u4f7f\u7528\u5f62\u72b6\u5de5\u5177\u3002 \u8ba4\u8bc6\u8def\u5f84 \u8def\u5f84\u662f\u4e00\u79cd\u4e0d\u5305\u542b\u50cf\u7d20\u7684\u8f6e\u5ed3\uff0c\u4f46\u662f\u53ef\u4ee5\u4f7f\u7528\u989c\u8272\u586b\u5145\u6216\u63cf\u8fb9\u8def\u5f84\u3002\u8def\u5f84\u53ef\u4ee5\u4f5c\u4e3a\u77e2\u91cf\u8499\u7248\u6765\u63a7\u5236\u56fe\u5c42\u7684\u663e\u793a\u533a \u57df\uff0c\u53ef\u4ee5\u88ab\u4fdd\u5b58\u5728\u201c\u8def\u5f84\u201d\u9762\u677f\u4e2d\u6216\u8005\u8f6c\u6362\u4e3a\u9009\u533a\u3002\u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u548c\u5f62\u72b6\u5de5\u5177\u90fd\u53ef\u4ee5\u7ed8\u5236\u8def\u5f84\uff0c\u800c\u4e14\u7ed8\u5236\u7684\u8def\u5f84\u53ef\u4ee5\u662f\u5f00\u653e\u5f0f\u3001\u95ed\u5408\u5f0f\u6216\u7ec4\u5408\u5f0f\u3002 \u8ba4\u8bc6\u951a\u70b9 \u8def\u5f84\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u76f4\u7ebf\u6bb5\u6216\u66f2\u7ebf\u6bb5\u7ec4\u6210\uff0c\u951a\u70b9\u6807\u8bb0\u8def\u5f84\u6bb5\u7684\u7aef\u70b9\u3002\u5728\u66f2\u7ebf\u6bb5\u4e0a\uff0c\u6bcf\u4e2a\u9009\u4e2d\u7684\u951a\u70b9\u663e\u793a\u4e00\u6761\u6216\u4e24\u6761\u65b9\u5411\u7ebf\uff0c\u65b9\u5411\u7ebf\u4ee5\u65b9\u5411\u70b9\u7ed3\u675f\uff0c\u65b9\u5411\u7ebf\u548c\u65b9\u5411\u70b9\u7684\u4f4d\u7f6e\u5171\u540c\u51b3\u5b9a\u4e86\u66f2\u7ebf\u6bb5\u7684\u5927\u5c0f\u548c\u5f62\u72b6\u3002 A \u8868\u793a\u66f2\u7ebf\u6bb5\uff0cB \u8868\u793a\u65b9\u5411\u70b9\uff0cC \u8868\u793a\u65b9\u5411\u7ebf\uff0cD \u8868\u793a\u9009\u4e2d\u7684\u951a\u70b9\uff0cE \u8868\u793a\u672a\u9009\u4e2d\u7684\u951a\u70b9\u3002 \u951a\u70b9\u5206\u4e3a\u5e73\u6ed1\u70b9\u548c\u89d2\u70b9\u4e24\u79cd\u7c7b\u578b\u3002\u7531\u5e73\u6ed1\u70b9\u8fde\u63a5\u7684\u8def\u5f84\u6bb5\u53ef\u4ee5\u5f62\u6210\u5e73\u6ed1\u7684\u66f2\u7ebf\uff1b\u7531\u89d2\u70b9\u8fde\u63a5\u7684\u8def\u5f84\u6bb5\u53ef\u4ee5\u5f62\u6210\u76f4\u7ebf\u6216\u8f6c\u6298\u66f2\u7ebf\u3002 \u201d\u5f62\u72b6\u201c\u6a21\u5f0f \u8bbe\u7f6e\u7ed8\u5236\u6a21\u5f0f\u4e3a\u201c\u5f62\u72b6\u201d\u540e\uff0c\u53ef\u4ee5\u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u586b\u5145\u7c7b\u578b\uff0c\u5355\u51fb\u201c\u586b\u5145\u201d\u6309\u94ae\uff0c\u5728\u5f39\u51fa\u7684\u201c\u586b\u5145\u201d\u5bf9\u8bdd\u6846\u4e2d\u53ef\u4ee5\u4ece\u201c\u65e0\u989c\u8272\u201d\u3001\u201c\u7eaf\u8272\u201d\u3001\u201c\u6e10\u53d8\u201d\u548c\u201c\u56fe\u6848\u201d4 \u4e2a\u7c7b\u578b\u4e2d\u9009\u62e9\u4e00\u79cd\u3002 \u5355\u51fb\u201c\u65e0\u989c\u8272\u201d\u6309\u94ae \u5373\u53ef\u53d6\u6d88\u586b\u5145\uff1b\u5355\u51fb\u201c\u7eaf\u8272\u201d\u6309\u94ae\uff0c\u53ef\u4ee5\u4ece\u989c\u8272\u5217\u8868\u4e2d\u9009\u62e9\u9884\u8bbe\u989c\u8272\uff0c\u6216\u5355\u51fb\u201c\u62fe\u8272\u5668\u201d\u6309\u94ae\uff0c\u5728\u5f39\u51fa\u7684\u62fe\u8272\u5668\u4e2d\u9009\u62e9\u6240\u9700\u989c\u8272\uff1b\u5355\u51fb\u201c\u6e10\u53d8\u201d\u6309\u94ae\uff0c\u5373\u53ef\u8bbe\u7f6e\u6e10\u53d8\u6548\u679c\u7684\u586b\u5145\uff1b\u5355\u51fb\u201c\u56fe\u6848\u201d\u6309\u94ae\uff0c\u53ef\u4ee5\u9009\u62e9\u67d0\u79cd\u56fe\u6848\uff0c\u5e76\u8bbe\u7f6e\u5408\u9002\u7684\u7f29\u653e\u6570\u503c\u3002 \u63cf\u8fb9\u4e5f\u53ef\u4ee5\u8fdb\u884c\u201c\u65e0\u989c\u8272\u201d\u3001\u201c\u7eaf\u8272\u201d\u3001\u201c\u6e10\u53d8\u201d\u3001\u201c\u56fe\u6848\u201d4 \u79cd\u7c7b\u578b\u7684\u8bbe\u7f6e\u3002\u8fd8\u53ef\u4ee5\u5bf9\u5f62\u72b6\u63cf\u8fb9\u7c7b\u578b\u8fdb\u884c\u8bbe\u7f6e\u3002\u5355\u51fb\u4e0b\u62c9\u5217\u8868\uff0c\u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u4e2d\u53ef\u4ee5\u9009\u62e9\u9884\u8bbe\u7684\u63cf\u8fb9\u7c7b\u578b\uff0c\u8fd8\u53ef\u4ee5\u5bf9\u63cf\u8fb9\u7684\u5bf9\u9f50\u65b9\u5f0f\u3001\u7aef\u70b9\u7c7b\u578b\u4ee5\u53ca\u89d2\u70b9\u7c7b\u578b\u8fdb\u884c\u8bbe\u7f6e\u3002\u5355\u51fb\u201c\u66f4\u591a\u9009\u9879\u201d\u6309\u94ae\uff0c\u53ef\u4ee5\u5728\u5f39\u51fa\u7684\u201c\u63cf\u8fb9\u201d\u5bf9\u8bdd\u6846\u4e2d\u521b\u5efa\u65b0\u7684\u63cf\u8fb9\u7c7b\u578b\u3002 \u201c\u8def\u5f84\u201d\u6a21\u5f0f \u5355\u51fb\u5de5\u5177\u7bb1\u4e2d\u7684\u5f62\u72b6\u5de5\u5177\uff0c\u7136\u540e\u5728\u9009\u9879\u680f\u4e2d\u9009\u62e9\u201c\u8def\u5f84\u201d\u9009\u9879 \uff0c\u53ef\u4ee5\u521b\u5efa\u5de5\u4f5c\u8def\u5f84\u3002\u7ed8\u5236\u5b8c\u6bd5\u540e\u53ef\u4ee5\u5728\u9009\u9879\u680f\u4e2d\u5feb\u901f\u5730\u5c06\u8def\u5f84\u8f6c\u6362\u4e3a\u9009\u533a\u3001\u8499\u7248\u6216\u5f62\u72b6\u3002 \u201c\u50cf\u7d20\u201d\u6a21\u5f0f \u5728\u4f7f\u7528\u5f62\u72b6\u5de5\u5177\u72b6\u6001\u4e0b\u53ef\u4ee5\u9009\u62e9\u201c\u50cf\u7d20\u201d\u65b9\u5f0f\u3002\u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u7ed8\u5236\u6a21\u5f0f\u4e3a\u201c\u50cf\u7d20\u201d\uff0c\u53ef\u8bbe\u7f6e\u5408\u9002\u7684\u6df7\u5408\u6a21\u5f0f\u4e0e\u4e0d\u900f\u660e\u5ea6\u3002\u8fd9\u79cd\u7ed8\u56fe\u6a21\u5f0f\u4f1a\u4ee5\u5f53\u524d\u524d\u666f\u8272\u5728\u6240\u9009\u56fe\u5c42\u4e2d\u8fdb\u884c\u7ed8\u5236\u3002 \u94a2\u7b14\u5de5\u5177\u7ec4 \u94a2\u7b14\u5de5\u5177\u7ec4\u5305\u62ec\u201c\u94a2\u7b14\u5de5\u5177\u201d\u3001\u201c\u81ea\u7531\u94a2\u7b14\u5de5\u5177\u201d \u3001\u201c\u6dfb\u52a0\u951a\u70b9\u5de5\u5177\u201d \u3001\u201c\u5220\u9664\u951a\u70b9\u5de5\u5177\u201d\u3001\u201c\u8f6c\u6362\u70b9\u5de5\u5177\u201d5\u79cd\u5de5\u5177\uff0c\u201c\u81ea\u7531\u94a2\u7b14\u5de5\u5177\u201d\u53c8\u53ef\u4ee5\u6269\u5c55\u4e3a\u201c\u78c1\u6027\u94a2\u7b14\u5de5\u5177\u201d\u3002\u4f7f\u7528\u94a2\u7b14\u5de5\u5177\u7ec4\u53ef\u4ee5\u7ed8\u5236\u591a\u79cd\u591a\u6837\u7684\u77e2\u91cf\u56fe\u5f62\u3002 \u201c\u94a2\u7b14\u5de5\u5177\u201d \u201c\u94a2\u7b14\u5de5\u5177\u201d\u662f\u6700\u57fa\u672c\u3001\u6700\u5e38\u7528\u7684\u8def\u5f84\u7ed8\u5236\u5de5\u5177\uff0c\u4f7f\u7528\u8be5\u5de5\u5177\u53ef\u4ee5\u7ed8\u5236\u4efb\u610f\u5f62\u72b6\u7684\u76f4\u7ebf\u6216\u66f2\u7ebf\u8def\u5f84\u3002\u201c\u94a2\u7b14\u5de5\u5177\u201d\u7684\u9009\u9879\u680f\u4e2d\u6709\u4e00\u4e2a\u201c\u6a61\u76ae\u5e26\u201d\u590d\u9009\u6846\uff0c\u9009\u4e2d\u8be5\u590d\u9009\u6846\u540e\uff0c\u53ef\u4ee5\u5728\u79fb\u52a8\u6307\u9488\u65f6\u9884\u89c8\u4e24\u6b21\u5355\u51fb\u4e4b\u95f4\u7684\u8def\u5f84\u6bb5\u3002 \u9009\u4e2d\u201c\u81ea\u52a8\u6dfb\u52a0 / \u5220\u9664\u201d\u590d\u9009\u6846\u540e\uff0c\u5c06\u201c\u94a2\u7b14\u5de5\u5177\u201d\u5b9a\u4f4d\u5230\u6240\u9009\u8def\u5f84\u4e0a\u65b9\u65f6\uff0c\u5b83\u4f1a\u53d8\u6210\u201c\u6dfb\u52a0\u951a\u70b9\u5de5\u5177\u201d\uff1b\u5f53\u5c06\u201c\u94a2\u7b14\u5de5\u5177\u201d\u5b9a\u4f4d\u5230\u951a\u70b9\u4e0a\u65b9\u65f6\uff0c\u5b83\u4f1a\u53d8\u6210\u201c\u5220\u9664\u951a\u70b9\u5de5\u5177\u201d\u3002 \u9009\u62e9\u8def\u5f84\u533a\u57df\u9009\u9879\u4ee5\u786e\u5b9a\u91cd\u53e0\u8def\u5f84\u7ec4\u4ef6\u5982\u4f55\u4ea4\u53c9\u3002\u5728\u4f7f\u7528\u5f62\u72b6\u5de5\u5177\u7ed8\u5236\u65f6\uff0c\u6309\u4f4f Shift \u952e\u53ef\u4e34\u65f6\u9009\u62e9\u201c\u5408\u5e76\u5f62\u72b6\u201d\u9009\u9879\uff1b\u6309\u4f4f Alt \u952e\u53ef\u4e34\u65f6\u9009\u62e9\u201c\u51cf\u53bb\u9876\u5c42\u5f62\u72b6\u201d\u9009\u9879\u3002 \u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u7ed8\u5236\u76f4\u7ebf \u5355\u51fb\u5de5\u5177\u7bb1\u4e2d\u7684\u201c\u94a2\u7b14\u5de5\u5177\u201d\u6309\u94ae\uff0c\u5728\u9009\u9879\u680f\u4e2d\u9009\u62e9\u201c\u8def\u5f84\u201d\u9009\u9879 \uff0c\u5c06\u5149\u6807\u79fb\u81f3\u753b\u9762\u4e2d\uff0c\u5355\u51fb\u53ef\u521b\u5efa\u4e00\u4e2a\u951a \u70b9\u3002\u91ca\u653e\u9f20\u6807\uff0c\u5c06\u5149\u6807\u79fb\u81f3\u4e0b\u4e00\u5904\u5355\u51fb\u53ef\u521b\u5efa\u7b2c\u4e8c\u4e2a\u951a\u70b9\u3002\u4e24\u4e2a\u951a\u70b9\u4f1a\u8fde\u63a5\u6210\u4e00\u6761\u7531\u89d2\u70b9\u5b9a\u4e49\u7684\u76f4\u7ebf\u8def\u5f84\u3002 \u5982\u679c\u8981\u7ed3\u675f\u4e00\u6bb5\u5f00\u653e\u5f0f\u8def\u5f84\u7684\u7ed8\u5236\uff0c\u53ef\u4ee5\u6309\u4f4f Ctrl \u952e\u5e76\u5728\u753b\u9762\u7684\u7a7a\u767d\u5904\u5355\u51fb\u3001\u5355\u51fb\u5176\u4ed6\u5de5\u5177\u6216\u6309 Esc \u952e\u7ed3\u675f\u8def\u5f84\u7684\u7ed8\u5236\u3002 \u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u7ed8\u5236\u6ce2\u6d6a\u66f2\u7ebf \u5728\u753b\u5e03\u4e2d\u5355\u51fb\u5373\u53ef\u51fa\u73b0\u4e00\u4e2a\u951a\u70b9\uff0c\u91ca\u653e\u9f20\u6807\uff0c\u79fb\u52a8\u5149\u6807\u5230\u53e6\u5916\u7684\u4f4d\u7f6e\u5355\u51fb\u5e76\u62d6\u52a8\u5373\u53ef\u521b\u5efa\u4e00\u4e2a\u5e73\u6ed1\u70b9\u3002 \u5c06\u5149\u6807\u653e\u7f6e\u5728\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u5355\u51fb\u5e76\u62d6\u62fd\u5149\u6807\u521b\u5efa\u7b2c\u4e8c\u4e2a\u5e73\u6ed1\u70b9\uff0c\u6ce8\u610f\u8981\u63a7\u5236\u597d\u66f2\u7ebf\u7684\u8d70\u5411\u3002 \u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u7ed8\u5236\u591a\u8fb9\u5f62 \u9009\u62e9\u201c \u94a2 \u7b14 \u5de5 \u5177 \u201d\uff0c \u7136 \u540e \u5728 \u9009 \u9879 \u680f \u4e2d \u5355 \u51fb\u201c \u8def\u5f84\u201d\u6309\u94ae,\u7136\u540e\u5728\u753b\u9762\u4e2d\u786e\u5b9a\u8def\u5f84\u7684\u8d77\u70b9\uff0c\u5c06\u5149\u6807\u79fb\u52a8\u5230\u4e0b\u4e00\u5904\uff0c\u7136\u540e\u5355\u51fb\u521b\u5efa\u4e00\u4e2a\u951a\u70b9\uff0c\u4e24\u4e2a\u951a\u70b9\u4f1a\u8fde\u63a5\u4e3a\u4e00\u6761\u76f4\u7ebf\u8def\u5f84\u3002 \u7ee7\u7eed\u521b\u5efa\u51fa\u951a\u70b9\uff0c\u6700\u540e\u5c06\u5149\u6807\u653e\u7f6e\u5728\u8d77\u70b9\u4e0a\uff0c\u5f53\u5149\u6807\u6539\u53d8\u5f62\u72b6\u65f6\uff0c\u5355\u51fb\u95ed\u5408\u8def\u5f84\uff0c\u5b8c\u6210\u591a\u8fb9\u5f62\u7684\u7ed8\u5236\u3002 \u4f7f\u7528\u201c\u81ea\u7531\u94a2\u7b14\u5de5\u5177\u201d\u7ed8\u56fe \u201c\u81ea\u7531\u94a2\u7b14\u5de5\u5177\u201d\u6bd4\u8f83\u9002\u5408\u7ed8\u5236\u8f83\u968f\u610f\u7684\u56fe\u5f62\uff0c\u5c31\u50cf\u7528\u94c5\u7b14\u5728\u7eb8\u4e0a\u7ed8\u56fe\u4e00\u6837\uff0c\u7ed8\u5236\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5bf9\u8def\u5f84\u8fdb\u884c\u8fdb \u4e00\u6b65\u7684\u8c03\u6574\u3002\u9009\u4e2d\u201c\u81ea\u7531\u94a2\u7b14\u5de5\u5177\u201d\uff0c\u5728\u753b\u5e03\u4e2d\u5355\u51fb\u786e\u5b9a\u8def\u5f84\u7684\u8d77\u70b9\uff0c\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u7684\u540c\u65f6\u62d6\u52a8\u5149\u6807\uff0c\u753b\u5e03\u4e2d \u4f1a\u81ea\u52a8\u4ee5\u5149\u6807\u6ed1\u52a8\u7684\u8f68\u8ff9\u521b\u5efa\u8def\u5f84\uff0c\u5176\u95f4\u5c06\u5728\u8def\u5f84\u4e0a\u81ea\u52a8\u6dfb\u52a0\u951a\u70b9\u3002 \u5728\u201c\u81ea\u7531\u94a2\u7b14\u5de5\u5177\u201d\u9009\u9879\u680f\u4e2d\u5305\u542b\u201c\u66f2\u7ebf\u62df\u5408\u201d\u53c2\u6570\u7684\u63a7\u5236\uff0c\u8be5\u503c\u8d8a\u5927\uff0c\u521b\u5efa\u7684\u8def\u5f84\u951a\u70b9\u8d8a\u5c11\uff0c\u8def\u5f84\u8d8a\u7b80\u5355\uff1b\u8be5\u503c\u8d8a\u5c0f\uff0c\u521b\u5efa\u7684\u8def\u5f84\u951a\u70b9\u8d8a\u591a\uff0c\u8def\u5f84\u7ec6\u8282\u8d8a\u591a\u3002 \u4f7f\u7528\u201c\u78c1\u6027\u94a2\u7b14\u5de5\u5177\u201d\u7ed8\u56fe \u5728\u201c\u81ea\u7531\u94a2\u7b14\u5de5\u5177\u201d\u7684\u9009\u9879\u680f\u4e2d\u6709\u4e00\u4e2a\u201c\u78c1\u6027\u7684\u201d\u590d\u9009\u6846\uff0c\u9009\u4e2d\u8be5\u590d\u9009\u6846\uff0c\u201c\u81ea\u7531\u94a2\u7b14\u5de5\u5177\u201d\u5c06\u5207\u6362\u4e3a\u201c\u78c1\u6027\u94a2\u7b14\u5de5\u5177\u201d\uff0c\u4f7f\u7528\u8be5\u5de5\u5177\u53ef\u4ee5\u50cf\u4f7f\u7528\u201c\u78c1\u6027\u5957\u7d22\u5de5\u5177\u201d\u4e00\u6837\u5feb\u901f\u52fe\u52d2\u51fa\u5bf9\u8c61\u7684\u8f6e\u5ed3\u8def\u5f84\u3002\u5728\u9009\u9879\u680f\u4e2d\u53ef\u6253\u5f00\u201c\u78c1\u6027\u94a2\u7b14\u5de5\u5177\u201d\u7684\u9009\u9879\uff0c\u8fd9\u540c\u65f6\u4e5f\u662f\u201c\u81ea\u7531\u94a2\u7b14\u5de5\u5177\u201d\u7684\u9009\u9879\u3002 \u4f7f\u7528\u201c\u6dfb\u52a0\u951a\u70b9\u5de5\u5177\u201d \u4f7f\u7528\u201c\u6dfb\u52a0\u951a\u70b9\u5de5\u5177\u201d\u53ef\u4ee5\u76f4\u63a5\u5728\u8def\u5f84\u4e0a\u6dfb\u52a0\u951a\u70b9\u3002\u5728\u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u7684\u72b6\u6001\u4e0b\uff0c\u5c06\u5149\u6807\u653e\u5728\u8def\u5f84\u4e0a\uff0c\u5f85\u5149\u6807\u53d8\u6210 \u5f62\u72b6\u65f6\uff0c\u5728\u8def\u5f84\u4e0a\u5355\u51fb\uff0c\u4e5f\u53ef\u6dfb\u52a0\u4e00\u4e2a\u951a\u70b9\u3002 \u4f7f\u7528\u201c\u5220\u9664\u951a\u70b9\u5de5\u5177\u201d \u4f7f\u7528\u201c\u5220\u9664\u951a\u70b9\u5de5\u5177\u201d\u53ef\u4ee5\u5220\u9664\u8def\u5f84\u4e0a\u7684\u951a\u70b9\u3002\u5c06\u5149\u6807\u653e\u5728\u951a\u70b9\u4e0a\uff0c\u5f53\u5149\u6807\u6539\u53d8\u5f62\u72b6\u65f6\uff0c\u5355\u51fb\u5373\u53ef\u5220\u9664\u951a\u70b9\u3002\u5728\u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u7684\u72b6\u6001\u4e0b\uff0c\u76f4\u63a5\u5c06\u5149\u6807\u79fb\u52a8\u5230\u951a\u70b9\u4e0a\uff0c\u5149\u6807\u4e5f\u4f1a\u6539\u53d8\u5f62\u72b6\u3002 \u4f7f\u7528\u201c\u8f6c\u6362\u70b9\u5de5\u5177\u201d\u8c03\u6574\u8def\u5f84\u5f27\u5ea6 \u4f7f\u7528\u8be5\u5de5\u5177\u5728\u89d2\u70b9\u4e0a\u5355\u51fb\uff0c\u53ef\u4ee5\u5c06\u89d2\u70b9\u8f6c\u6362\u4e3a\u5e73\u6ed1\u70b9\u3002\u5728\u5e73\u6ed1\u70b9\u4e0a\u5355\u51fb\uff0c\u53ef\u4ee5\u5c06\u5e73\u6ed1\u70b9\u8f6c\u6362\u4e3a\u89d2\u70b9\u3002 \u8def\u5f84\u7684\u57fa\u672c\u64cd\u4f5c \u9009\u62e9\u5e76\u79fb\u52a8\u8def\u5f84 \u4f7f\u7528\u201c\u8def\u5f84\u9009\u62e9\u5de5\u5177\u201d\uff0c\u5355\u51fb\u8def\u5f84\u4e0a\u7684\u4efb\u610f\u4f4d\u7f6e\uff0c \u53ef\u4ee5\u9009\u62e9\u5355\u4e2a\u7684\u8def\u5f84\uff1b\u6309\u4f4f shift \u952e\u5355\u51fb\u53ef\u53cc\u9009\u62e9\u591a\u4e2a\u8def\u5f84\uff0c\u540c\u65f6\u5b83\u53ef\u7528\u6765\u79fb\u52a8\u3001\u7ec4\u5408\u3001\u5bf9\u9f50\u548c\u5206\u5e03\u8def\u5f84\u3002\u6309\u4f4f ctrl \u952e\u5e76\u5355\u51fb\u53ef\u53cc\u5c06\u5f53\u524d\u5de5\u5177\u8f6c\u5316\u4e3a\u201c\u76f4\u63a5\u9009\u62e9\u5de5\u5177\u201d\u3002 \u9009\u62e9\u5e76\u8c03\u6574\u951a\u70b9 \u201c\u76f4\u63a5\u9009\u62e9\u5de5\u5177\u201d\uff0c\u4e3b\u8981\u7528\u6765\u9009\u62e9\u8def\u5f84\u4e0a\u7684\u5355\u4e2a\u6216\u4e2a\u951a\u70b9\uff0c\u53ef\u79fb\u52a8\u951a\u70b9\u3001\u8c03\u6574\u65b9\u5411\u7ebf\u3002\u5355\u51fb\u53ef\u4ee5\u9009\u4e2d\u5176\u4e2d\u67d0\u4e00\u4e2a\u951a\u70b9\uff1b\u6846\u9009\u6216\u6309\u4f4f Shift \u952e\u5355\u51fb\u53ef\u4ee5\u9009\u62e9\u591a\u4e2a\u951a\u70b9\uff1b\u6309\u4f4f ctrl \u952e\u5e76\u5355\u51fb\u53ef\u53cc\u5c06\u5f53\u524d\u5de5\u5177\u8f6c\u5316\u4e3a\u201c\u8def\u5f84\u9009\u62e9\u5de5\u5177\u201d\u3002 \u53d8\u6362\u8def\u5f84 \u5728\u201c\u8def\u5f84\u201d\u9762\u677f\u4e2d\u9009\u62e9\u8def\u5f84\uff0c\u7136\u540e\u6267\u884c\u201c\u7f16\u8f91 > \u53d8\u6362\u8def\u5f84\u201d\u83dc\u5355\u4e0b\u7684\u547d\u4ee4\u5373\u53ef\u5bf9\u5176\u8fdb\u884c\u76f8\u5e94\u7684\u53d8\u6362\u3002\u53d8\u6362\u8def\u5f84\u4e0e\u53d8\u6362\u56fe\u50cf\u7684\u65b9\u6cd5\u5b8c\u5168\u76f8\u540c\uff0c\u8fd9\u91cc\u4e0d\u518d\u8fdb\u884c\u91cd\u590d\u8bb2\u89e3\u3002 \u5b9a\u4e49\u4e3a\u81ea\u5b9a\u5f62\u72b6 \u5b9a\u4e49\u5f62\u72b6\u4e0e\u5b9a\u4e49\u56fe\u6848\u3001\u6837\u5f0f\u753b\u7b14\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u4fdd\u5b58\u5230\u201c\u81ea\u5b9a\u5f62\u72b6\u5de5\u5177\u201d\u7684\u5f62\u72b6\u9884\u8bbe\u4e2d\uff0c\u4ee5\u540e\u5982\u679c\u9700\u8981\u7ed8\u5236\u76f8\u540c\u7684\u5f62\u72b6\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u81ea\u5b9a\u7684\u5f62\u72b6\u3002\u7ed8\u5236\u8def\u5f84\u4ee5\u540e\uff0c\u6267\u884c\u201c\u7f16\u8f91> \u5b9a\u4e49\u81ea\u5b9a\u5f62\u72b6\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u5176\u5b9a\u4e49\u4e3a\u5f62\u72b6\u3002 \u5728\u5f39\u51fa\u7684\u201c\u5f62\u72b6\u540d\u79f0\u201d\u5bf9\u8bdd\u6846\u4e2d\u4e3a\u5f62\u72b6\u53d6\u4e00\u4e2a\u540d\u5b57\u3002\u5728\u5de5\u5177\u7bb1\u4e2d\u5355\u51fb\u201c\u81ea\u5b9a\u5f62\u72b6\u5de5\u5177\u201d\u6309\u94ae \uff0c\u7136\u540e\u5728\u9009\u9879\u680f\u4e2d\u5355\u51fb\u201c\u5f62\u72b6\u201d\u9009\u9879\u540e\u9762\u7684\u5012\u4e09\u89d2\u5f62\u56fe\u6807 \uff0c\u63a5\u7740\u5728\u5f39\u51fa\u7684\u201c\u81ea\u5b9a\u5f62\u72b6\u201d\u9762\u677f\u4e2d\u5c31\u53ef\u4ee5\u8fdb\u884c\u9009\u62e9\u3002 \u5c06\u8def\u5f84\u8f6c\u6362\u4e3a\u9009\u533a \u5728\u8def\u5f84\u4e0a\u5355\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u7136\u540e\u5728\u5f39\u51fa\u7684\u83dc\u5355\u4e2d\u9009\u62e9\u201c\u5efa\u7acb\u9009\u533a\u201d\u547d\u4ee4\uff0c\u5728\u5f39\u51fa\u7684\u201c\u5efa\u7acb\u9009\u533a\u201d\u5bf9\u8bdd\u6846\u4e2d\u8bbe\u7f6e\u76f8\u5173\u53c2\u6570\u3002\u6309\u4f4f Ctrl \u952e\u5728\u201c\u8def\u5f84\u201d\u9762\u677f\u4e2d\u5355\u51fb\u8def\u5f84\u7684\u7f29\u7565\u56fe\uff0c\u6216\u5355\u51fb\u201c\u5c06\u8def\u5f84\u4f5c\u4e3a\u9009\u533a\u8f7d\u5165\u201d\u6309\u94ae\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5feb\u6377\u952e\uff0c\u6309 Ctrl+Enter \u7ec4\u5408\u952e\u5c06\u8def\u5f84\u8f6c\u6362\u4e3a\u9009\u533a\u3002 \u586b\u5145\u8def\u5f84 \u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u6216\u5f62\u72b6\u5de5\u5177\uff08\u201c\u81ea\u5b9a\u5f62\u72b6\u5de5\u5177\u201d\u9664\u5916\uff09\u72b6\u6001\u4e0b\uff0c\u5728\u7ed8\u5236\u5b8c\u6210\u7684\u8def\u5f84\u4e0a\u5355\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u9009\u62e9\u201c\u586b\u5145\u8def\u5f84\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u586b\u5145\u5b50\u8def\u5f84\u201d\u5bf9\u8bdd\u6846\u3002\u5728\u201c\u586b\u5145\u5b50\u8def\u5f84\u201d\u5bf9\u8bdd\u6846\u4e2d\u53ef\u4ee5\u5bf9\u586b\u5145\u5185\u5bb9\u8fdb\u884c\u8bbe\u7f6e\uff0c\u8fd9\u91cc\u5305\u542b\u591a\u79cd\u7c7b\u578b\u7684\u586b\u5145\u5185\u5bb9\uff0c\u5e76\u4e14\u53ef\u4ee5\u8bbe\u7f6e\u5f53\u524d\u586b\u5145\u5185\u5bb9\u7684\u6df7\u5408\u6a21\u5f0f\u4ee5\u53ca\u4e0d\u900f\u660e\u5ea6\u7b49\u5c5e\u6027\u3002 \u63cf\u8fb9\u8def\u5f84 \u5728\u63cf\u8fb9\u4e4b\u524d\u9700\u8981\u5148\u8bbe\u7f6e\u597d\u63cf\u8fb9\u5de5\u5177\u7684\u53c2\u6570\u3002\u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u6216\u5f62\u72b6\u5de5\u5177\u7ed8\u5236\u51fa\u8def\u5f84\u3002\u5728\u8def\u5f84\u4e0a\u5355\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u5728\u5f39\u51fa\u7684\u83dc\u5355\u4e2d\u9009\u62e9\u201c\u63cf\u8fb9\u8def\u5f84\u201d\u547d\u4ee4\uff0c\u6253\u5f00\u201c\u63cf\u8fb9\u8def\u5f84\u201d\u5bf9\u8bdd\u6846\uff0c\u5728\u8be5\u5bf9\u8bdd\u6846\u4e2d\u53ef\u4ee5\u9009\u62e9\u63cf\u8fb9\u7684\u5de5\u5177\u3002 \u8def\u5f84\u9762\u677f \u201c\u8def\u5f84\u201d\u9762\u677f \u6267\u884c\u201c\u7a97\u53e3 > \u8def\u5f84\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u8def\u5f84\u201d\u9762\u677f\u3002 \u5b58\u50a8\u5de5\u4f5c\u8def\u5f84 \u5de5\u4f5c\u8def\u5f84\u662f\u4e34\u65f6\u8def\u5f84\uff0c\u662f\u5728\u6ca1\u6709\u65b0\u5efa\u8def\u5f84\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u7b49\u7ed8\u5236\u7684\u8def\u5f84\uff0c\u4e00\u65e6\u91cd\u65b0\u7ed8\u5236\u4e86\u8def\u5f84\uff0c\u539f\u6709\u7684\u8def\u5f84\u5c06\u88ab\u5f53\u524d\u8def\u5f84\u6240\u66ff\u4ee3\u3002 \u5982\u679c\u4e0d\u60f3\u5de5\u4f5c\u8def\u5f84\u88ab\u66ff\u6362\u6389\uff0c\u53ef\u4ee5\u53cc\u51fb\u5176\u7f29\u7565\u56fe\uff0c\u6253\u5f00\u201c\u5b58\u50a8\u8def\u5f84\u201d\u5bf9\u8bdd\u6846\uff0c\u5c06\u5176\u4fdd\u5b58\u8d77\u6765 \u65b0\u5efa\u8def\u5f84 \u5728\u201c\u8def\u5f84\u201d\u9762\u677f\u4e0b\u5355\u51fb\u201c\u521b\u5efa\u65b0\u8def\u5f84\u201d\u6309\u94ae \uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u8def\u5f84\u5c42\uff0c\u6b64\u540e\u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u7b49\u7ed8\u5236\u7684\u8def\u5f84\u90fd\u5c06 \u5305\u542b\u5728\u8be5\u8def\u5f84\u5c42\u4e2d\u3002\u6309\u4f4f Alt \u952e\u7684\u540c\u65f6\u5355\u51fb\u201c\u521b\u5efa\u65b0\u8def\u5f84\u201d\u6309\u94ae\uff0c\u53ef\u4ee5\u5f39\u51fa\u201c\u65b0\u5efa\u8def\u5f84\u201d\u5bf9\u8bdd\u6846\uff0c\u53ef\u4ece\u4e2d\u8fdb\u884c\u540d\u79f0\u7684\u8bbe\u7f6e\u3002 \u590d\u5236/\u7c98\u8d34\u8def\u5f84 \u5982\u679c\u8981\u590d\u5236\u8def\u5f84\uff0c\u5728\u201c\u8def\u5f84\u201d\u9762\u677f\u4e2d\u62d6\u62fd\u9700\u8981\u590d\u5236\u7684\u8def\u5f84\u5230 \u201c\u521b\u5efa\u65b0\u8def\u5f84\u201d\u6309\u94ae \u4e0a\uff0c\u5373\u53ef\u590d\u5236\u51fa\u8def\u5f84\u7684\u526f\u672c\u3002\u5982\u679c\u8981\u5c06\u5f53\u524d\u6587\u6863\u4e2d\u7684\u8def\u5f84\u590d\u5236\u5230\u5176\u4ed6\u6587\u6863\u4e2d\uff0c\u53ef\u4ee5\u6267\u884c\u201c\u7f16\u8f91 > \u62f7\u8d1d\u201d\u547d\u4ee4\uff0c\u7136\u540e\u5207\u6362\u5230\u5176\u4ed6\u6587\u6863\uff0c\u6267\u884c\u201c\u7f16\u8f91> \u7c98\u8d34\u201d\u547d\u4ee4\u5373\u53ef\u3002 \u5220\u9664\u8def\u5f84 \u5982\u679c\u8981\u5220\u9664\u67d0\u4e2a\u4e0d\u9700\u8981\u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u5c06\u5176\u62d6\u62fd\u5230\u201c\u8def\u5f84\u201d\u9762\u677f\u4e0b\u9762\u7684\u201c\u5220\u9664\u5f53\u524d\u8def\u5f84\u201d\u6309\u94ae\u4e0a\uff0c\u6216\u8005\u76f4\u63a5\u6309 Delete \u952e\u5c06\u5176\u5220\u9664\u3002 \u663e\u793a\u8def\u5f84 \u5982\u679c\u8981\u5c06\u8def\u5f84\u5728\u6587\u6863\u7a97\u53e3\u4e2d\u663e\u793a\u51fa\u6765\uff0c\u53ef\u4ee5\u5728\u201c\u8def\u5f84\u201d\u9762\u677f\u4e2d\u5355\u51fb\u8be5\u8def\u5f84\u3002 \u9690\u85cf\u8def\u5f84 \u5728\u201c\u8def\u5f84\u201d\u9762\u677f\u4e2d\u5355\u51fb\u8def\u5f84\u4ee5\u540e\uff0c\u6587\u6863\u7a97\u53e3\u4e2d\u5c31\u4f1a\u59cb\u7ec8\u663e\u793a\u8be5\u8def\u5f84\uff0c\u5982\u679c\u5e0c\u671b\u5c06\u5176\u9690\u85cf\uff0c\u53ef\u4ee5\u5728\u201c\u8def\u5f84\u201d\u9762\u677f\u7684\u7a7a\u767d\u533a\u57df\u5355\u51fb\uff0c\u5373\u53ef\u53d6\u6d88\u5bf9\u8def\u5f84\u7684\u9009\u62e9\u3002 \u5f62\u72b6\u5de5\u5177\u7ec4 Photoshop \u7684\u5f62\u72b6\u5de5\u5177\u7ec4\u4e2d\u5305\u542b\u591a\u79cd\u77e2\u91cf\u5f62\u72b6\u5de5\u5177\uff0c\u5982\u201c\u77e9\u5f62\u5de5\u5177\u201d \u3001\u201c\u5706\u89d2\u77e9\u5f62\u5de5\u5177\u201d \u3001\u201c\u692d\u5706\u5de5\u5177\u201d \u3001\u201c\u591a\u8fb9\u5f62\u5de5\u5177\u201d \u3001\u201c\u76f4\u7ebf\u5de5\u5177\u201d \u548c\u201c\u81ea\u5b9a\u5f62\u72b6\u5de5\u5177\u201d \uff0c\u800c\u201c\u81ea\u5b9a\u5f62\u72b6\u5de5\u5177\u201d \u4e2d\u53c8\u5305\u542b\u975e\u5e38\u591a\u7684\u5f62\u72b6\uff0c\u5e76\u4e14\u7528\u6237\u53ef\u4ee5\u81ea\u884c\u5b9a\u4e49\u5176\u4ed6\u5f62\u72b6\u3002 \u4f7f\u7528\u201c\u77e9\u5f62\u5de5\u5177\u201d \u201c\u77e9\u5f62\u5de5\u5177\u201d\u7684\u4f7f\u7528\u65b9\u6cd5\u4e0e\u201c\u77e9\u5f62\u9009\u6846\u5de5\u5177\u201d\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u7ed8\u5236\u51fa\u6b63\u65b9\u5f62\u548c\u77e9\u5f62\u3002\u7ed8\u5236\u65f6\u6309\u4f4f Shift \u952e\u53ef\u4ee5\u7ed8\u5236\u51fa\u6b63\u65b9\u5f62\uff1b\u6309\u4f4f Alt \u952e\u53ef\u4ee5\u4ee5\u9f20\u6807\u5355\u51fb\u70b9\u4e3a\u4e2d\u5fc3\u7ed8\u5236\u77e9\u5f62\uff1b\u6309\u4f4f Shift+Alt \u7ec4\u5408\u952e\u53ef\u4ee5\u4ee5\u9f20\u6807\u5355\u51fb\u70b9\u4e3a\u4e2d\u5fc3\u7ed8\u5236\u6b63\u65b9\u5f62\u3002\u5728\u9009\u9879\u680f\u4e2d\u5355\u51fb \u56fe\u6807\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u77e9\u5f62\u5de5\u5177\u201d\u7684\u8bbe\u7f6e\u9009\u9879\u3002 \u4f7f\u7528\u201c\u5706\u89d2\u77e9\u5f62\u5de5\u5177\u201d \u201c\u5706\u89d2\u77e9\u5f62\u5de5\u5177\u201d\u53ef\u4ee5\u521b\u5efa\u51fa\u5177\u6709\u5706\u89d2\u6548\u679c\u7684\u77e9\u5f62\uff0c\u5176\u521b\u5efa\u65b9\u6cd5\u53ca\u9009\u9879\u4e0e\u201c\u77e9\u5f62\u5de5\u5177\u201d\u5b8c\u5168\u76f8\u540c\u3002\u5728\u9009\u9879\u680f\u4e2d\u53ef\u4ee5 \u5bf9\u201c\u534a\u5f84\u201d\u6570\u503c\u8fdb\u884c\u8bbe\u7f6e\uff0c\u201c\u534a\u5f84\u201d\u9009\u9879\u7528\u6765\u8bbe\u7f6e\u5706\u89d2\u7684\u534a\u5f84\uff0c\u6570\u503c\u8d8a\u5927\uff0c\u5706\u89d2\u8d8a\u5927\u3002 \u4f7f\u7528\u201c\u692d\u5706\u5de5\u5177\u201d \u5982\u679c\u8981\u521b\u5efa\u692d\u5706\uff0c\u76f4\u63a5\u62d6\u62fd\u9f20\u6807\u8fdb\u884c\u521b\u5efa\u5373\u53ef\uff1b\u5982\u679c\u8981\u521b\u5efa\u5706\u5f62\uff0c\u53ef\u4ee5\u6309\u4f4f Shift \u952e\u6216 Shift+Alt \u7ec4\u5408\u952e\uff08\u4ee5\u9f20\u6807\u5355\u51fb\u70b9\u4e3a\u4e2d\u5fc3\uff09\u8fdb\u884c\u521b\u5efa\u3002 \u4f7f\u7528\u201c\u591a\u8fb9\u5f62\u5de5\u5177\u201d \u4f7f\u7528\u201c\u591a\u8fb9\u5f62\u5de5\u5177\u201d\u53ef\u4ee5\u521b\u5efa\u51fa\u6b63\u591a\u8fb9\u5f62\uff08\u6700\u5c11\u4e3a 3 \u6761\u8fb9\uff09\u548c\u661f\u5f62\uff0c\u5176\u8bbe\u7f6e\u9009\u9879\u5982\u56fe\u3002 \u4f7f\u7528\u201c\u76f4\u7ebf\u5de5\u5177\u201d \u4f7f\u7528\u201c\u76f4\u7ebf\u5de5\u5177\u201d\u53ef\u4ee5\u521b\u5efa\u51fa\u76f4\u7ebf\u548c\u5e26\u6709\u7bad\u5934\u7684\u8def\u5f84\u3002 \u4f7f\u7528\u201c\u81ea\u5b9a\u5f62\u72b6\u5de5\u5177\u201d \u4f7f\u7528\u201c\u81ea\u5b9a\u5f62\u72b6\u5de5\u5177\u201d\u53ef\u4ee5\u521b\u5efa\u51fa\u975e\u5e38\u591a\u7684\u5f62\u72b6\u3002\u8fd9\u4e9b\u5f62\u72b6\u65e2\u53ef\u4ee5\u662f Photoshop\u7684\u9884\u8bbe\uff0c\u4e5f\u53ef\u4ee5\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u6216\u52a0\u8f7d\u7684\u5916\u90e8\u5f62\u72b6\u3002","title":"\u77e2\u91cf\u5de5\u5177\u4e0e\u8def\u5f84"},{"location":"PS/PS5/#_1","text":"\u5f62\u72b6\uff1a\u5728\u5355\u72ec\u7684\u56fe\u5c42\u4e2d\u7ed8\u5236\u4e00\u4e2a\u6216\u591a\u4e2a\u5f62\u72b6\u3002 \u8def\u5f84\uff1a\u5728\u5f53\u524d\u56fe\u5c42\u4e2d\u7ed8\u5236\u4e00\u4e2a\u4e34\u65f6\u5de5\u4f5c\u8def\u5f84\uff0c\u53ef\u968f\u540e\u4f7f\u7528\u5b83\u6765\u521b\u5efa\u9009\u533a\u548c\u77e2\u91cf\u8499\u7248\uff0c\u6216\u8005\u4f7f\u7528\u989c\u8272\u586b\u5145\u548c\u63cf\u8fb9\u4ee5\u521b\u5efa\u6805\u683c\u56fe\u5f62\u3002\u7ed8\u5236\u5b8c\u6210\u540e\u53ef\u5728\u201c\u8def\u5f84\u201d\u9762\u677f\u4e2d\u8fdb\u884c\u5b58\u50a8\u3002 \u50cf\u7d20\uff1a\u76f4\u63a5\u5728\u9009\u4e2d\u56fe\u5c42\u4e0a\u7ed8\u5236\uff0c\u4e0e\u7ed8\u753b\u5de5\u5177\u7684\u529f\u80fd\u975e\u5e38\u7c7b\u4f3c\u3002\u5728\u6b64\u6a21\u5f0f\u4e2d\u5de5\u4f5c\u65f6\uff0c\u521b\u5efa\u7684\u662f\u4f4d\u56fe\u56fe\u50cf\uff0c\u800c\u4e0d\u662f\u77e2\u91cf\u56fe\u5f62\u3002\u53ef\u4ee5\u50cf\u5904\u7406\u4efb\u4f55\u6805\u683c\u56fe\u50cf\u4e00\u6837\u6765\u5904\u7406\u7ed8\u5236\u7684\u5f62\u72b6\u3002\u5728\u6b64\u6a21\u5f0f\u4e2d\u53ea\u80fd\u4f7f\u7528\u5f62\u72b6\u5de5\u5177\u3002","title":"\u4e86\u89e3\u7ed8\u56fe\u6a21\u5f0f"},{"location":"PS/PS5/#_2","text":"\u8def\u5f84\u662f\u4e00\u79cd\u4e0d\u5305\u542b\u50cf\u7d20\u7684\u8f6e\u5ed3\uff0c\u4f46\u662f\u53ef\u4ee5\u4f7f\u7528\u989c\u8272\u586b\u5145\u6216\u63cf\u8fb9\u8def\u5f84\u3002\u8def\u5f84\u53ef\u4ee5\u4f5c\u4e3a\u77e2\u91cf\u8499\u7248\u6765\u63a7\u5236\u56fe\u5c42\u7684\u663e\u793a\u533a \u57df\uff0c\u53ef\u4ee5\u88ab\u4fdd\u5b58\u5728\u201c\u8def\u5f84\u201d\u9762\u677f\u4e2d\u6216\u8005\u8f6c\u6362\u4e3a\u9009\u533a\u3002\u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u548c\u5f62\u72b6\u5de5\u5177\u90fd\u53ef\u4ee5\u7ed8\u5236\u8def\u5f84\uff0c\u800c\u4e14\u7ed8\u5236\u7684\u8def\u5f84\u53ef\u4ee5\u662f\u5f00\u653e\u5f0f\u3001\u95ed\u5408\u5f0f\u6216\u7ec4\u5408\u5f0f\u3002","title":"\u8ba4\u8bc6\u8def\u5f84"},{"location":"PS/PS5/#_3","text":"\u8def\u5f84\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u76f4\u7ebf\u6bb5\u6216\u66f2\u7ebf\u6bb5\u7ec4\u6210\uff0c\u951a\u70b9\u6807\u8bb0\u8def\u5f84\u6bb5\u7684\u7aef\u70b9\u3002\u5728\u66f2\u7ebf\u6bb5\u4e0a\uff0c\u6bcf\u4e2a\u9009\u4e2d\u7684\u951a\u70b9\u663e\u793a\u4e00\u6761\u6216\u4e24\u6761\u65b9\u5411\u7ebf\uff0c\u65b9\u5411\u7ebf\u4ee5\u65b9\u5411\u70b9\u7ed3\u675f\uff0c\u65b9\u5411\u7ebf\u548c\u65b9\u5411\u70b9\u7684\u4f4d\u7f6e\u5171\u540c\u51b3\u5b9a\u4e86\u66f2\u7ebf\u6bb5\u7684\u5927\u5c0f\u548c\u5f62\u72b6\u3002 A \u8868\u793a\u66f2\u7ebf\u6bb5\uff0cB \u8868\u793a\u65b9\u5411\u70b9\uff0cC \u8868\u793a\u65b9\u5411\u7ebf\uff0cD \u8868\u793a\u9009\u4e2d\u7684\u951a\u70b9\uff0cE \u8868\u793a\u672a\u9009\u4e2d\u7684\u951a\u70b9\u3002 \u951a\u70b9\u5206\u4e3a\u5e73\u6ed1\u70b9\u548c\u89d2\u70b9\u4e24\u79cd\u7c7b\u578b\u3002\u7531\u5e73\u6ed1\u70b9\u8fde\u63a5\u7684\u8def\u5f84\u6bb5\u53ef\u4ee5\u5f62\u6210\u5e73\u6ed1\u7684\u66f2\u7ebf\uff1b\u7531\u89d2\u70b9\u8fde\u63a5\u7684\u8def\u5f84\u6bb5\u53ef\u4ee5\u5f62\u6210\u76f4\u7ebf\u6216\u8f6c\u6298\u66f2\u7ebf\u3002","title":"\u8ba4\u8bc6\u951a\u70b9"},{"location":"PS/PS5/#_4","text":"\u8bbe\u7f6e\u7ed8\u5236\u6a21\u5f0f\u4e3a\u201c\u5f62\u72b6\u201d\u540e\uff0c\u53ef\u4ee5\u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u586b\u5145\u7c7b\u578b\uff0c\u5355\u51fb\u201c\u586b\u5145\u201d\u6309\u94ae\uff0c\u5728\u5f39\u51fa\u7684\u201c\u586b\u5145\u201d\u5bf9\u8bdd\u6846\u4e2d\u53ef\u4ee5\u4ece\u201c\u65e0\u989c\u8272\u201d\u3001\u201c\u7eaf\u8272\u201d\u3001\u201c\u6e10\u53d8\u201d\u548c\u201c\u56fe\u6848\u201d4 \u4e2a\u7c7b\u578b\u4e2d\u9009\u62e9\u4e00\u79cd\u3002 \u5355\u51fb\u201c\u65e0\u989c\u8272\u201d\u6309\u94ae \u5373\u53ef\u53d6\u6d88\u586b\u5145\uff1b\u5355\u51fb\u201c\u7eaf\u8272\u201d\u6309\u94ae\uff0c\u53ef\u4ee5\u4ece\u989c\u8272\u5217\u8868\u4e2d\u9009\u62e9\u9884\u8bbe\u989c\u8272\uff0c\u6216\u5355\u51fb\u201c\u62fe\u8272\u5668\u201d\u6309\u94ae\uff0c\u5728\u5f39\u51fa\u7684\u62fe\u8272\u5668\u4e2d\u9009\u62e9\u6240\u9700\u989c\u8272\uff1b\u5355\u51fb\u201c\u6e10\u53d8\u201d\u6309\u94ae\uff0c\u5373\u53ef\u8bbe\u7f6e\u6e10\u53d8\u6548\u679c\u7684\u586b\u5145\uff1b\u5355\u51fb\u201c\u56fe\u6848\u201d\u6309\u94ae\uff0c\u53ef\u4ee5\u9009\u62e9\u67d0\u79cd\u56fe\u6848\uff0c\u5e76\u8bbe\u7f6e\u5408\u9002\u7684\u7f29\u653e\u6570\u503c\u3002 \u63cf\u8fb9\u4e5f\u53ef\u4ee5\u8fdb\u884c\u201c\u65e0\u989c\u8272\u201d\u3001\u201c\u7eaf\u8272\u201d\u3001\u201c\u6e10\u53d8\u201d\u3001\u201c\u56fe\u6848\u201d4 \u79cd\u7c7b\u578b\u7684\u8bbe\u7f6e\u3002\u8fd8\u53ef\u4ee5\u5bf9\u5f62\u72b6\u63cf\u8fb9\u7c7b\u578b\u8fdb\u884c\u8bbe\u7f6e\u3002\u5355\u51fb\u4e0b\u62c9\u5217\u8868\uff0c\u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u4e2d\u53ef\u4ee5\u9009\u62e9\u9884\u8bbe\u7684\u63cf\u8fb9\u7c7b\u578b\uff0c\u8fd8\u53ef\u4ee5\u5bf9\u63cf\u8fb9\u7684\u5bf9\u9f50\u65b9\u5f0f\u3001\u7aef\u70b9\u7c7b\u578b\u4ee5\u53ca\u89d2\u70b9\u7c7b\u578b\u8fdb\u884c\u8bbe\u7f6e\u3002\u5355\u51fb\u201c\u66f4\u591a\u9009\u9879\u201d\u6309\u94ae\uff0c\u53ef\u4ee5\u5728\u5f39\u51fa\u7684\u201c\u63cf\u8fb9\u201d\u5bf9\u8bdd\u6846\u4e2d\u521b\u5efa\u65b0\u7684\u63cf\u8fb9\u7c7b\u578b\u3002","title":"\u201d\u5f62\u72b6\u201c\u6a21\u5f0f"},{"location":"PS/PS5/#_5","text":"\u5355\u51fb\u5de5\u5177\u7bb1\u4e2d\u7684\u5f62\u72b6\u5de5\u5177\uff0c\u7136\u540e\u5728\u9009\u9879\u680f\u4e2d\u9009\u62e9\u201c\u8def\u5f84\u201d\u9009\u9879 \uff0c\u53ef\u4ee5\u521b\u5efa\u5de5\u4f5c\u8def\u5f84\u3002\u7ed8\u5236\u5b8c\u6bd5\u540e\u53ef\u4ee5\u5728\u9009\u9879\u680f\u4e2d\u5feb\u901f\u5730\u5c06\u8def\u5f84\u8f6c\u6362\u4e3a\u9009\u533a\u3001\u8499\u7248\u6216\u5f62\u72b6\u3002","title":"\u201c\u8def\u5f84\u201d\u6a21\u5f0f"},{"location":"PS/PS5/#_6","text":"\u5728\u4f7f\u7528\u5f62\u72b6\u5de5\u5177\u72b6\u6001\u4e0b\u53ef\u4ee5\u9009\u62e9\u201c\u50cf\u7d20\u201d\u65b9\u5f0f\u3002\u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u7ed8\u5236\u6a21\u5f0f\u4e3a\u201c\u50cf\u7d20\u201d\uff0c\u53ef\u8bbe\u7f6e\u5408\u9002\u7684\u6df7\u5408\u6a21\u5f0f\u4e0e\u4e0d\u900f\u660e\u5ea6\u3002\u8fd9\u79cd\u7ed8\u56fe\u6a21\u5f0f\u4f1a\u4ee5\u5f53\u524d\u524d\u666f\u8272\u5728\u6240\u9009\u56fe\u5c42\u4e2d\u8fdb\u884c\u7ed8\u5236\u3002","title":"\u201c\u50cf\u7d20\u201d\u6a21\u5f0f"},{"location":"PS/PS5/#_7","text":"\u94a2\u7b14\u5de5\u5177\u7ec4\u5305\u62ec\u201c\u94a2\u7b14\u5de5\u5177\u201d\u3001\u201c\u81ea\u7531\u94a2\u7b14\u5de5\u5177\u201d \u3001\u201c\u6dfb\u52a0\u951a\u70b9\u5de5\u5177\u201d \u3001\u201c\u5220\u9664\u951a\u70b9\u5de5\u5177\u201d\u3001\u201c\u8f6c\u6362\u70b9\u5de5\u5177\u201d5\u79cd\u5de5\u5177\uff0c\u201c\u81ea\u7531\u94a2\u7b14\u5de5\u5177\u201d\u53c8\u53ef\u4ee5\u6269\u5c55\u4e3a\u201c\u78c1\u6027\u94a2\u7b14\u5de5\u5177\u201d\u3002\u4f7f\u7528\u94a2\u7b14\u5de5\u5177\u7ec4\u53ef\u4ee5\u7ed8\u5236\u591a\u79cd\u591a\u6837\u7684\u77e2\u91cf\u56fe\u5f62\u3002","title":"\u94a2\u7b14\u5de5\u5177\u7ec4"},{"location":"PS/PS5/#_8","text":"\u201c\u94a2\u7b14\u5de5\u5177\u201d\u662f\u6700\u57fa\u672c\u3001\u6700\u5e38\u7528\u7684\u8def\u5f84\u7ed8\u5236\u5de5\u5177\uff0c\u4f7f\u7528\u8be5\u5de5\u5177\u53ef\u4ee5\u7ed8\u5236\u4efb\u610f\u5f62\u72b6\u7684\u76f4\u7ebf\u6216\u66f2\u7ebf\u8def\u5f84\u3002\u201c\u94a2\u7b14\u5de5\u5177\u201d\u7684\u9009\u9879\u680f\u4e2d\u6709\u4e00\u4e2a\u201c\u6a61\u76ae\u5e26\u201d\u590d\u9009\u6846\uff0c\u9009\u4e2d\u8be5\u590d\u9009\u6846\u540e\uff0c\u53ef\u4ee5\u5728\u79fb\u52a8\u6307\u9488\u65f6\u9884\u89c8\u4e24\u6b21\u5355\u51fb\u4e4b\u95f4\u7684\u8def\u5f84\u6bb5\u3002 \u9009\u4e2d\u201c\u81ea\u52a8\u6dfb\u52a0 / \u5220\u9664\u201d\u590d\u9009\u6846\u540e\uff0c\u5c06\u201c\u94a2\u7b14\u5de5\u5177\u201d\u5b9a\u4f4d\u5230\u6240\u9009\u8def\u5f84\u4e0a\u65b9\u65f6\uff0c\u5b83\u4f1a\u53d8\u6210\u201c\u6dfb\u52a0\u951a\u70b9\u5de5\u5177\u201d\uff1b\u5f53\u5c06\u201c\u94a2\u7b14\u5de5\u5177\u201d\u5b9a\u4f4d\u5230\u951a\u70b9\u4e0a\u65b9\u65f6\uff0c\u5b83\u4f1a\u53d8\u6210\u201c\u5220\u9664\u951a\u70b9\u5de5\u5177\u201d\u3002 \u9009\u62e9\u8def\u5f84\u533a\u57df\u9009\u9879\u4ee5\u786e\u5b9a\u91cd\u53e0\u8def\u5f84\u7ec4\u4ef6\u5982\u4f55\u4ea4\u53c9\u3002\u5728\u4f7f\u7528\u5f62\u72b6\u5de5\u5177\u7ed8\u5236\u65f6\uff0c\u6309\u4f4f Shift \u952e\u53ef\u4e34\u65f6\u9009\u62e9\u201c\u5408\u5e76\u5f62\u72b6\u201d\u9009\u9879\uff1b\u6309\u4f4f Alt \u952e\u53ef\u4e34\u65f6\u9009\u62e9\u201c\u51cf\u53bb\u9876\u5c42\u5f62\u72b6\u201d\u9009\u9879\u3002","title":"\u201c\u94a2\u7b14\u5de5\u5177\u201d"},{"location":"PS/PS5/#_9","text":"\u5355\u51fb\u5de5\u5177\u7bb1\u4e2d\u7684\u201c\u94a2\u7b14\u5de5\u5177\u201d\u6309\u94ae\uff0c\u5728\u9009\u9879\u680f\u4e2d\u9009\u62e9\u201c\u8def\u5f84\u201d\u9009\u9879 \uff0c\u5c06\u5149\u6807\u79fb\u81f3\u753b\u9762\u4e2d\uff0c\u5355\u51fb\u53ef\u521b\u5efa\u4e00\u4e2a\u951a \u70b9\u3002\u91ca\u653e\u9f20\u6807\uff0c\u5c06\u5149\u6807\u79fb\u81f3\u4e0b\u4e00\u5904\u5355\u51fb\u53ef\u521b\u5efa\u7b2c\u4e8c\u4e2a\u951a\u70b9\u3002\u4e24\u4e2a\u951a\u70b9\u4f1a\u8fde\u63a5\u6210\u4e00\u6761\u7531\u89d2\u70b9\u5b9a\u4e49\u7684\u76f4\u7ebf\u8def\u5f84\u3002 \u5982\u679c\u8981\u7ed3\u675f\u4e00\u6bb5\u5f00\u653e\u5f0f\u8def\u5f84\u7684\u7ed8\u5236\uff0c\u53ef\u4ee5\u6309\u4f4f Ctrl \u952e\u5e76\u5728\u753b\u9762\u7684\u7a7a\u767d\u5904\u5355\u51fb\u3001\u5355\u51fb\u5176\u4ed6\u5de5\u5177\u6216\u6309 Esc \u952e\u7ed3\u675f\u8def\u5f84\u7684\u7ed8\u5236\u3002","title":"\u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u7ed8\u5236\u76f4\u7ebf"},{"location":"PS/PS5/#_10","text":"\u5728\u753b\u5e03\u4e2d\u5355\u51fb\u5373\u53ef\u51fa\u73b0\u4e00\u4e2a\u951a\u70b9\uff0c\u91ca\u653e\u9f20\u6807\uff0c\u79fb\u52a8\u5149\u6807\u5230\u53e6\u5916\u7684\u4f4d\u7f6e\u5355\u51fb\u5e76\u62d6\u52a8\u5373\u53ef\u521b\u5efa\u4e00\u4e2a\u5e73\u6ed1\u70b9\u3002 \u5c06\u5149\u6807\u653e\u7f6e\u5728\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u5355\u51fb\u5e76\u62d6\u62fd\u5149\u6807\u521b\u5efa\u7b2c\u4e8c\u4e2a\u5e73\u6ed1\u70b9\uff0c\u6ce8\u610f\u8981\u63a7\u5236\u597d\u66f2\u7ebf\u7684\u8d70\u5411\u3002","title":"\u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u7ed8\u5236\u6ce2\u6d6a\u66f2\u7ebf"},{"location":"PS/PS5/#_11","text":"\u9009\u62e9\u201c \u94a2 \u7b14 \u5de5 \u5177 \u201d\uff0c \u7136 \u540e \u5728 \u9009 \u9879 \u680f \u4e2d \u5355 \u51fb\u201c \u8def\u5f84\u201d\u6309\u94ae,\u7136\u540e\u5728\u753b\u9762\u4e2d\u786e\u5b9a\u8def\u5f84\u7684\u8d77\u70b9\uff0c\u5c06\u5149\u6807\u79fb\u52a8\u5230\u4e0b\u4e00\u5904\uff0c\u7136\u540e\u5355\u51fb\u521b\u5efa\u4e00\u4e2a\u951a\u70b9\uff0c\u4e24\u4e2a\u951a\u70b9\u4f1a\u8fde\u63a5\u4e3a\u4e00\u6761\u76f4\u7ebf\u8def\u5f84\u3002 \u7ee7\u7eed\u521b\u5efa\u51fa\u951a\u70b9\uff0c\u6700\u540e\u5c06\u5149\u6807\u653e\u7f6e\u5728\u8d77\u70b9\u4e0a\uff0c\u5f53\u5149\u6807\u6539\u53d8\u5f62\u72b6\u65f6\uff0c\u5355\u51fb\u95ed\u5408\u8def\u5f84\uff0c\u5b8c\u6210\u591a\u8fb9\u5f62\u7684\u7ed8\u5236\u3002","title":"\u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u7ed8\u5236\u591a\u8fb9\u5f62"},{"location":"PS/PS5/#_12","text":"\u201c\u81ea\u7531\u94a2\u7b14\u5de5\u5177\u201d\u6bd4\u8f83\u9002\u5408\u7ed8\u5236\u8f83\u968f\u610f\u7684\u56fe\u5f62\uff0c\u5c31\u50cf\u7528\u94c5\u7b14\u5728\u7eb8\u4e0a\u7ed8\u56fe\u4e00\u6837\uff0c\u7ed8\u5236\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5bf9\u8def\u5f84\u8fdb\u884c\u8fdb \u4e00\u6b65\u7684\u8c03\u6574\u3002\u9009\u4e2d\u201c\u81ea\u7531\u94a2\u7b14\u5de5\u5177\u201d\uff0c\u5728\u753b\u5e03\u4e2d\u5355\u51fb\u786e\u5b9a\u8def\u5f84\u7684\u8d77\u70b9\uff0c\u6309\u4f4f\u9f20\u6807\u5de6\u952e\u7684\u540c\u65f6\u62d6\u52a8\u5149\u6807\uff0c\u753b\u5e03\u4e2d \u4f1a\u81ea\u52a8\u4ee5\u5149\u6807\u6ed1\u52a8\u7684\u8f68\u8ff9\u521b\u5efa\u8def\u5f84\uff0c\u5176\u95f4\u5c06\u5728\u8def\u5f84\u4e0a\u81ea\u52a8\u6dfb\u52a0\u951a\u70b9\u3002 \u5728\u201c\u81ea\u7531\u94a2\u7b14\u5de5\u5177\u201d\u9009\u9879\u680f\u4e2d\u5305\u542b\u201c\u66f2\u7ebf\u62df\u5408\u201d\u53c2\u6570\u7684\u63a7\u5236\uff0c\u8be5\u503c\u8d8a\u5927\uff0c\u521b\u5efa\u7684\u8def\u5f84\u951a\u70b9\u8d8a\u5c11\uff0c\u8def\u5f84\u8d8a\u7b80\u5355\uff1b\u8be5\u503c\u8d8a\u5c0f\uff0c\u521b\u5efa\u7684\u8def\u5f84\u951a\u70b9\u8d8a\u591a\uff0c\u8def\u5f84\u7ec6\u8282\u8d8a\u591a\u3002","title":"\u4f7f\u7528\u201c\u81ea\u7531\u94a2\u7b14\u5de5\u5177\u201d\u7ed8\u56fe"},{"location":"PS/PS5/#_13","text":"\u5728\u201c\u81ea\u7531\u94a2\u7b14\u5de5\u5177\u201d\u7684\u9009\u9879\u680f\u4e2d\u6709\u4e00\u4e2a\u201c\u78c1\u6027\u7684\u201d\u590d\u9009\u6846\uff0c\u9009\u4e2d\u8be5\u590d\u9009\u6846\uff0c\u201c\u81ea\u7531\u94a2\u7b14\u5de5\u5177\u201d\u5c06\u5207\u6362\u4e3a\u201c\u78c1\u6027\u94a2\u7b14\u5de5\u5177\u201d\uff0c\u4f7f\u7528\u8be5\u5de5\u5177\u53ef\u4ee5\u50cf\u4f7f\u7528\u201c\u78c1\u6027\u5957\u7d22\u5de5\u5177\u201d\u4e00\u6837\u5feb\u901f\u52fe\u52d2\u51fa\u5bf9\u8c61\u7684\u8f6e\u5ed3\u8def\u5f84\u3002\u5728\u9009\u9879\u680f\u4e2d\u53ef\u6253\u5f00\u201c\u78c1\u6027\u94a2\u7b14\u5de5\u5177\u201d\u7684\u9009\u9879\uff0c\u8fd9\u540c\u65f6\u4e5f\u662f\u201c\u81ea\u7531\u94a2\u7b14\u5de5\u5177\u201d\u7684\u9009\u9879\u3002","title":"\u4f7f\u7528\u201c\u78c1\u6027\u94a2\u7b14\u5de5\u5177\u201d\u7ed8\u56fe"},{"location":"PS/PS5/#_14","text":"\u4f7f\u7528\u201c\u6dfb\u52a0\u951a\u70b9\u5de5\u5177\u201d\u53ef\u4ee5\u76f4\u63a5\u5728\u8def\u5f84\u4e0a\u6dfb\u52a0\u951a\u70b9\u3002\u5728\u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u7684\u72b6\u6001\u4e0b\uff0c\u5c06\u5149\u6807\u653e\u5728\u8def\u5f84\u4e0a\uff0c\u5f85\u5149\u6807\u53d8\u6210 \u5f62\u72b6\u65f6\uff0c\u5728\u8def\u5f84\u4e0a\u5355\u51fb\uff0c\u4e5f\u53ef\u6dfb\u52a0\u4e00\u4e2a\u951a\u70b9\u3002","title":"\u4f7f\u7528\u201c\u6dfb\u52a0\u951a\u70b9\u5de5\u5177\u201d"},{"location":"PS/PS5/#_15","text":"\u4f7f\u7528\u201c\u5220\u9664\u951a\u70b9\u5de5\u5177\u201d\u53ef\u4ee5\u5220\u9664\u8def\u5f84\u4e0a\u7684\u951a\u70b9\u3002\u5c06\u5149\u6807\u653e\u5728\u951a\u70b9\u4e0a\uff0c\u5f53\u5149\u6807\u6539\u53d8\u5f62\u72b6\u65f6\uff0c\u5355\u51fb\u5373\u53ef\u5220\u9664\u951a\u70b9\u3002\u5728\u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u7684\u72b6\u6001\u4e0b\uff0c\u76f4\u63a5\u5c06\u5149\u6807\u79fb\u52a8\u5230\u951a\u70b9\u4e0a\uff0c\u5149\u6807\u4e5f\u4f1a\u6539\u53d8\u5f62\u72b6\u3002","title":"\u4f7f\u7528\u201c\u5220\u9664\u951a\u70b9\u5de5\u5177\u201d"},{"location":"PS/PS5/#_16","text":"\u4f7f\u7528\u8be5\u5de5\u5177\u5728\u89d2\u70b9\u4e0a\u5355\u51fb\uff0c\u53ef\u4ee5\u5c06\u89d2\u70b9\u8f6c\u6362\u4e3a\u5e73\u6ed1\u70b9\u3002\u5728\u5e73\u6ed1\u70b9\u4e0a\u5355\u51fb\uff0c\u53ef\u4ee5\u5c06\u5e73\u6ed1\u70b9\u8f6c\u6362\u4e3a\u89d2\u70b9\u3002","title":"\u4f7f\u7528\u201c\u8f6c\u6362\u70b9\u5de5\u5177\u201d\u8c03\u6574\u8def\u5f84\u5f27\u5ea6"},{"location":"PS/PS5/#_17","text":"","title":"\u8def\u5f84\u7684\u57fa\u672c\u64cd\u4f5c"},{"location":"PS/PS5/#_18","text":"\u4f7f\u7528\u201c\u8def\u5f84\u9009\u62e9\u5de5\u5177\u201d\uff0c\u5355\u51fb\u8def\u5f84\u4e0a\u7684\u4efb\u610f\u4f4d\u7f6e\uff0c \u53ef\u4ee5\u9009\u62e9\u5355\u4e2a\u7684\u8def\u5f84\uff1b\u6309\u4f4f shift \u952e\u5355\u51fb\u53ef\u53cc\u9009\u62e9\u591a\u4e2a\u8def\u5f84\uff0c\u540c\u65f6\u5b83\u53ef\u7528\u6765\u79fb\u52a8\u3001\u7ec4\u5408\u3001\u5bf9\u9f50\u548c\u5206\u5e03\u8def\u5f84\u3002\u6309\u4f4f ctrl \u952e\u5e76\u5355\u51fb\u53ef\u53cc\u5c06\u5f53\u524d\u5de5\u5177\u8f6c\u5316\u4e3a\u201c\u76f4\u63a5\u9009\u62e9\u5de5\u5177\u201d\u3002","title":"\u9009\u62e9\u5e76\u79fb\u52a8\u8def\u5f84"},{"location":"PS/PS5/#_19","text":"\u201c\u76f4\u63a5\u9009\u62e9\u5de5\u5177\u201d\uff0c\u4e3b\u8981\u7528\u6765\u9009\u62e9\u8def\u5f84\u4e0a\u7684\u5355\u4e2a\u6216\u4e2a\u951a\u70b9\uff0c\u53ef\u79fb\u52a8\u951a\u70b9\u3001\u8c03\u6574\u65b9\u5411\u7ebf\u3002\u5355\u51fb\u53ef\u4ee5\u9009\u4e2d\u5176\u4e2d\u67d0\u4e00\u4e2a\u951a\u70b9\uff1b\u6846\u9009\u6216\u6309\u4f4f Shift \u952e\u5355\u51fb\u53ef\u4ee5\u9009\u62e9\u591a\u4e2a\u951a\u70b9\uff1b\u6309\u4f4f ctrl \u952e\u5e76\u5355\u51fb\u53ef\u53cc\u5c06\u5f53\u524d\u5de5\u5177\u8f6c\u5316\u4e3a\u201c\u8def\u5f84\u9009\u62e9\u5de5\u5177\u201d\u3002","title":"\u9009\u62e9\u5e76\u8c03\u6574\u951a\u70b9"},{"location":"PS/PS5/#_20","text":"\u5728\u201c\u8def\u5f84\u201d\u9762\u677f\u4e2d\u9009\u62e9\u8def\u5f84\uff0c\u7136\u540e\u6267\u884c\u201c\u7f16\u8f91 > \u53d8\u6362\u8def\u5f84\u201d\u83dc\u5355\u4e0b\u7684\u547d\u4ee4\u5373\u53ef\u5bf9\u5176\u8fdb\u884c\u76f8\u5e94\u7684\u53d8\u6362\u3002\u53d8\u6362\u8def\u5f84\u4e0e\u53d8\u6362\u56fe\u50cf\u7684\u65b9\u6cd5\u5b8c\u5168\u76f8\u540c\uff0c\u8fd9\u91cc\u4e0d\u518d\u8fdb\u884c\u91cd\u590d\u8bb2\u89e3\u3002","title":"\u53d8\u6362\u8def\u5f84"},{"location":"PS/PS5/#_21","text":"\u5b9a\u4e49\u5f62\u72b6\u4e0e\u5b9a\u4e49\u56fe\u6848\u3001\u6837\u5f0f\u753b\u7b14\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u4fdd\u5b58\u5230\u201c\u81ea\u5b9a\u5f62\u72b6\u5de5\u5177\u201d\u7684\u5f62\u72b6\u9884\u8bbe\u4e2d\uff0c\u4ee5\u540e\u5982\u679c\u9700\u8981\u7ed8\u5236\u76f8\u540c\u7684\u5f62\u72b6\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u81ea\u5b9a\u7684\u5f62\u72b6\u3002\u7ed8\u5236\u8def\u5f84\u4ee5\u540e\uff0c\u6267\u884c\u201c\u7f16\u8f91> \u5b9a\u4e49\u81ea\u5b9a\u5f62\u72b6\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u5176\u5b9a\u4e49\u4e3a\u5f62\u72b6\u3002 \u5728\u5f39\u51fa\u7684\u201c\u5f62\u72b6\u540d\u79f0\u201d\u5bf9\u8bdd\u6846\u4e2d\u4e3a\u5f62\u72b6\u53d6\u4e00\u4e2a\u540d\u5b57\u3002\u5728\u5de5\u5177\u7bb1\u4e2d\u5355\u51fb\u201c\u81ea\u5b9a\u5f62\u72b6\u5de5\u5177\u201d\u6309\u94ae \uff0c\u7136\u540e\u5728\u9009\u9879\u680f\u4e2d\u5355\u51fb\u201c\u5f62\u72b6\u201d\u9009\u9879\u540e\u9762\u7684\u5012\u4e09\u89d2\u5f62\u56fe\u6807 \uff0c\u63a5\u7740\u5728\u5f39\u51fa\u7684\u201c\u81ea\u5b9a\u5f62\u72b6\u201d\u9762\u677f\u4e2d\u5c31\u53ef\u4ee5\u8fdb\u884c\u9009\u62e9\u3002","title":"\u5b9a\u4e49\u4e3a\u81ea\u5b9a\u5f62\u72b6"},{"location":"PS/PS5/#_22","text":"\u5728\u8def\u5f84\u4e0a\u5355\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u7136\u540e\u5728\u5f39\u51fa\u7684\u83dc\u5355\u4e2d\u9009\u62e9\u201c\u5efa\u7acb\u9009\u533a\u201d\u547d\u4ee4\uff0c\u5728\u5f39\u51fa\u7684\u201c\u5efa\u7acb\u9009\u533a\u201d\u5bf9\u8bdd\u6846\u4e2d\u8bbe\u7f6e\u76f8\u5173\u53c2\u6570\u3002\u6309\u4f4f Ctrl \u952e\u5728\u201c\u8def\u5f84\u201d\u9762\u677f\u4e2d\u5355\u51fb\u8def\u5f84\u7684\u7f29\u7565\u56fe\uff0c\u6216\u5355\u51fb\u201c\u5c06\u8def\u5f84\u4f5c\u4e3a\u9009\u533a\u8f7d\u5165\u201d\u6309\u94ae\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5feb\u6377\u952e\uff0c\u6309 Ctrl+Enter \u7ec4\u5408\u952e\u5c06\u8def\u5f84\u8f6c\u6362\u4e3a\u9009\u533a\u3002","title":"\u5c06\u8def\u5f84\u8f6c\u6362\u4e3a\u9009\u533a"},{"location":"PS/PS5/#_23","text":"\u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u6216\u5f62\u72b6\u5de5\u5177\uff08\u201c\u81ea\u5b9a\u5f62\u72b6\u5de5\u5177\u201d\u9664\u5916\uff09\u72b6\u6001\u4e0b\uff0c\u5728\u7ed8\u5236\u5b8c\u6210\u7684\u8def\u5f84\u4e0a\u5355\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u9009\u62e9\u201c\u586b\u5145\u8def\u5f84\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u586b\u5145\u5b50\u8def\u5f84\u201d\u5bf9\u8bdd\u6846\u3002\u5728\u201c\u586b\u5145\u5b50\u8def\u5f84\u201d\u5bf9\u8bdd\u6846\u4e2d\u53ef\u4ee5\u5bf9\u586b\u5145\u5185\u5bb9\u8fdb\u884c\u8bbe\u7f6e\uff0c\u8fd9\u91cc\u5305\u542b\u591a\u79cd\u7c7b\u578b\u7684\u586b\u5145\u5185\u5bb9\uff0c\u5e76\u4e14\u53ef\u4ee5\u8bbe\u7f6e\u5f53\u524d\u586b\u5145\u5185\u5bb9\u7684\u6df7\u5408\u6a21\u5f0f\u4ee5\u53ca\u4e0d\u900f\u660e\u5ea6\u7b49\u5c5e\u6027\u3002","title":"\u586b\u5145\u8def\u5f84"},{"location":"PS/PS5/#_24","text":"\u5728\u63cf\u8fb9\u4e4b\u524d\u9700\u8981\u5148\u8bbe\u7f6e\u597d\u63cf\u8fb9\u5de5\u5177\u7684\u53c2\u6570\u3002\u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u6216\u5f62\u72b6\u5de5\u5177\u7ed8\u5236\u51fa\u8def\u5f84\u3002\u5728\u8def\u5f84\u4e0a\u5355\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u5728\u5f39\u51fa\u7684\u83dc\u5355\u4e2d\u9009\u62e9\u201c\u63cf\u8fb9\u8def\u5f84\u201d\u547d\u4ee4\uff0c\u6253\u5f00\u201c\u63cf\u8fb9\u8def\u5f84\u201d\u5bf9\u8bdd\u6846\uff0c\u5728\u8be5\u5bf9\u8bdd\u6846\u4e2d\u53ef\u4ee5\u9009\u62e9\u63cf\u8fb9\u7684\u5de5\u5177\u3002","title":"\u63cf\u8fb9\u8def\u5f84"},{"location":"PS/PS5/#_25","text":"","title":"\u8def\u5f84\u9762\u677f"},{"location":"PS/PS5/#_26","text":"\u6267\u884c\u201c\u7a97\u53e3 > \u8def\u5f84\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u8def\u5f84\u201d\u9762\u677f\u3002","title":"\u201c\u8def\u5f84\u201d\u9762\u677f"},{"location":"PS/PS5/#_27","text":"\u5de5\u4f5c\u8def\u5f84\u662f\u4e34\u65f6\u8def\u5f84\uff0c\u662f\u5728\u6ca1\u6709\u65b0\u5efa\u8def\u5f84\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u7b49\u7ed8\u5236\u7684\u8def\u5f84\uff0c\u4e00\u65e6\u91cd\u65b0\u7ed8\u5236\u4e86\u8def\u5f84\uff0c\u539f\u6709\u7684\u8def\u5f84\u5c06\u88ab\u5f53\u524d\u8def\u5f84\u6240\u66ff\u4ee3\u3002 \u5982\u679c\u4e0d\u60f3\u5de5\u4f5c\u8def\u5f84\u88ab\u66ff\u6362\u6389\uff0c\u53ef\u4ee5\u53cc\u51fb\u5176\u7f29\u7565\u56fe\uff0c\u6253\u5f00\u201c\u5b58\u50a8\u8def\u5f84\u201d\u5bf9\u8bdd\u6846\uff0c\u5c06\u5176\u4fdd\u5b58\u8d77\u6765","title":"\u5b58\u50a8\u5de5\u4f5c\u8def\u5f84"},{"location":"PS/PS5/#_28","text":"\u5728\u201c\u8def\u5f84\u201d\u9762\u677f\u4e0b\u5355\u51fb\u201c\u521b\u5efa\u65b0\u8def\u5f84\u201d\u6309\u94ae \uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u8def\u5f84\u5c42\uff0c\u6b64\u540e\u4f7f\u7528\u201c\u94a2\u7b14\u5de5\u5177\u201d\u7b49\u7ed8\u5236\u7684\u8def\u5f84\u90fd\u5c06 \u5305\u542b\u5728\u8be5\u8def\u5f84\u5c42\u4e2d\u3002\u6309\u4f4f Alt \u952e\u7684\u540c\u65f6\u5355\u51fb\u201c\u521b\u5efa\u65b0\u8def\u5f84\u201d\u6309\u94ae\uff0c\u53ef\u4ee5\u5f39\u51fa\u201c\u65b0\u5efa\u8def\u5f84\u201d\u5bf9\u8bdd\u6846\uff0c\u53ef\u4ece\u4e2d\u8fdb\u884c\u540d\u79f0\u7684\u8bbe\u7f6e\u3002","title":"\u65b0\u5efa\u8def\u5f84"},{"location":"PS/PS5/#_29","text":"\u5982\u679c\u8981\u590d\u5236\u8def\u5f84\uff0c\u5728\u201c\u8def\u5f84\u201d\u9762\u677f\u4e2d\u62d6\u62fd\u9700\u8981\u590d\u5236\u7684\u8def\u5f84\u5230 \u201c\u521b\u5efa\u65b0\u8def\u5f84\u201d\u6309\u94ae \u4e0a\uff0c\u5373\u53ef\u590d\u5236\u51fa\u8def\u5f84\u7684\u526f\u672c\u3002\u5982\u679c\u8981\u5c06\u5f53\u524d\u6587\u6863\u4e2d\u7684\u8def\u5f84\u590d\u5236\u5230\u5176\u4ed6\u6587\u6863\u4e2d\uff0c\u53ef\u4ee5\u6267\u884c\u201c\u7f16\u8f91 > \u62f7\u8d1d\u201d\u547d\u4ee4\uff0c\u7136\u540e\u5207\u6362\u5230\u5176\u4ed6\u6587\u6863\uff0c\u6267\u884c\u201c\u7f16\u8f91> \u7c98\u8d34\u201d\u547d\u4ee4\u5373\u53ef\u3002","title":"\u590d\u5236/\u7c98\u8d34\u8def\u5f84"},{"location":"PS/PS5/#_30","text":"\u5982\u679c\u8981\u5220\u9664\u67d0\u4e2a\u4e0d\u9700\u8981\u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u5c06\u5176\u62d6\u62fd\u5230\u201c\u8def\u5f84\u201d\u9762\u677f\u4e0b\u9762\u7684\u201c\u5220\u9664\u5f53\u524d\u8def\u5f84\u201d\u6309\u94ae\u4e0a\uff0c\u6216\u8005\u76f4\u63a5\u6309 Delete \u952e\u5c06\u5176\u5220\u9664\u3002","title":"\u5220\u9664\u8def\u5f84"},{"location":"PS/PS5/#_31","text":"\u5982\u679c\u8981\u5c06\u8def\u5f84\u5728\u6587\u6863\u7a97\u53e3\u4e2d\u663e\u793a\u51fa\u6765\uff0c\u53ef\u4ee5\u5728\u201c\u8def\u5f84\u201d\u9762\u677f\u4e2d\u5355\u51fb\u8be5\u8def\u5f84\u3002","title":"\u663e\u793a\u8def\u5f84"},{"location":"PS/PS5/#_32","text":"\u5728\u201c\u8def\u5f84\u201d\u9762\u677f\u4e2d\u5355\u51fb\u8def\u5f84\u4ee5\u540e\uff0c\u6587\u6863\u7a97\u53e3\u4e2d\u5c31\u4f1a\u59cb\u7ec8\u663e\u793a\u8be5\u8def\u5f84\uff0c\u5982\u679c\u5e0c\u671b\u5c06\u5176\u9690\u85cf\uff0c\u53ef\u4ee5\u5728\u201c\u8def\u5f84\u201d\u9762\u677f\u7684\u7a7a\u767d\u533a\u57df\u5355\u51fb\uff0c\u5373\u53ef\u53d6\u6d88\u5bf9\u8def\u5f84\u7684\u9009\u62e9\u3002","title":"\u9690\u85cf\u8def\u5f84"},{"location":"PS/PS5/#_33","text":"Photoshop \u7684\u5f62\u72b6\u5de5\u5177\u7ec4\u4e2d\u5305\u542b\u591a\u79cd\u77e2\u91cf\u5f62\u72b6\u5de5\u5177\uff0c\u5982\u201c\u77e9\u5f62\u5de5\u5177\u201d \u3001\u201c\u5706\u89d2\u77e9\u5f62\u5de5\u5177\u201d \u3001\u201c\u692d\u5706\u5de5\u5177\u201d \u3001\u201c\u591a\u8fb9\u5f62\u5de5\u5177\u201d \u3001\u201c\u76f4\u7ebf\u5de5\u5177\u201d \u548c\u201c\u81ea\u5b9a\u5f62\u72b6\u5de5\u5177\u201d \uff0c\u800c\u201c\u81ea\u5b9a\u5f62\u72b6\u5de5\u5177\u201d \u4e2d\u53c8\u5305\u542b\u975e\u5e38\u591a\u7684\u5f62\u72b6\uff0c\u5e76\u4e14\u7528\u6237\u53ef\u4ee5\u81ea\u884c\u5b9a\u4e49\u5176\u4ed6\u5f62\u72b6\u3002","title":"\u5f62\u72b6\u5de5\u5177\u7ec4"},{"location":"PS/PS5/#_34","text":"\u201c\u77e9\u5f62\u5de5\u5177\u201d\u7684\u4f7f\u7528\u65b9\u6cd5\u4e0e\u201c\u77e9\u5f62\u9009\u6846\u5de5\u5177\u201d\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u7ed8\u5236\u51fa\u6b63\u65b9\u5f62\u548c\u77e9\u5f62\u3002\u7ed8\u5236\u65f6\u6309\u4f4f Shift \u952e\u53ef\u4ee5\u7ed8\u5236\u51fa\u6b63\u65b9\u5f62\uff1b\u6309\u4f4f Alt \u952e\u53ef\u4ee5\u4ee5\u9f20\u6807\u5355\u51fb\u70b9\u4e3a\u4e2d\u5fc3\u7ed8\u5236\u77e9\u5f62\uff1b\u6309\u4f4f Shift+Alt \u7ec4\u5408\u952e\u53ef\u4ee5\u4ee5\u9f20\u6807\u5355\u51fb\u70b9\u4e3a\u4e2d\u5fc3\u7ed8\u5236\u6b63\u65b9\u5f62\u3002\u5728\u9009\u9879\u680f\u4e2d\u5355\u51fb \u56fe\u6807\uff0c\u53ef\u4ee5\u6253\u5f00\u201c\u77e9\u5f62\u5de5\u5177\u201d\u7684\u8bbe\u7f6e\u9009\u9879\u3002","title":"\u4f7f\u7528\u201c\u77e9\u5f62\u5de5\u5177\u201d"},{"location":"PS/PS5/#_35","text":"\u201c\u5706\u89d2\u77e9\u5f62\u5de5\u5177\u201d\u53ef\u4ee5\u521b\u5efa\u51fa\u5177\u6709\u5706\u89d2\u6548\u679c\u7684\u77e9\u5f62\uff0c\u5176\u521b\u5efa\u65b9\u6cd5\u53ca\u9009\u9879\u4e0e\u201c\u77e9\u5f62\u5de5\u5177\u201d\u5b8c\u5168\u76f8\u540c\u3002\u5728\u9009\u9879\u680f\u4e2d\u53ef\u4ee5 \u5bf9\u201c\u534a\u5f84\u201d\u6570\u503c\u8fdb\u884c\u8bbe\u7f6e\uff0c\u201c\u534a\u5f84\u201d\u9009\u9879\u7528\u6765\u8bbe\u7f6e\u5706\u89d2\u7684\u534a\u5f84\uff0c\u6570\u503c\u8d8a\u5927\uff0c\u5706\u89d2\u8d8a\u5927\u3002","title":"\u4f7f\u7528\u201c\u5706\u89d2\u77e9\u5f62\u5de5\u5177\u201d"},{"location":"PS/PS5/#_36","text":"\u5982\u679c\u8981\u521b\u5efa\u692d\u5706\uff0c\u76f4\u63a5\u62d6\u62fd\u9f20\u6807\u8fdb\u884c\u521b\u5efa\u5373\u53ef\uff1b\u5982\u679c\u8981\u521b\u5efa\u5706\u5f62\uff0c\u53ef\u4ee5\u6309\u4f4f Shift \u952e\u6216 Shift+Alt \u7ec4\u5408\u952e\uff08\u4ee5\u9f20\u6807\u5355\u51fb\u70b9\u4e3a\u4e2d\u5fc3\uff09\u8fdb\u884c\u521b\u5efa\u3002","title":"\u4f7f\u7528\u201c\u692d\u5706\u5de5\u5177\u201d"},{"location":"PS/PS5/#_37","text":"\u4f7f\u7528\u201c\u591a\u8fb9\u5f62\u5de5\u5177\u201d\u53ef\u4ee5\u521b\u5efa\u51fa\u6b63\u591a\u8fb9\u5f62\uff08\u6700\u5c11\u4e3a 3 \u6761\u8fb9\uff09\u548c\u661f\u5f62\uff0c\u5176\u8bbe\u7f6e\u9009\u9879\u5982\u56fe\u3002","title":"\u4f7f\u7528\u201c\u591a\u8fb9\u5f62\u5de5\u5177\u201d"},{"location":"PS/PS5/#_38","text":"\u4f7f\u7528\u201c\u76f4\u7ebf\u5de5\u5177\u201d\u53ef\u4ee5\u521b\u5efa\u51fa\u76f4\u7ebf\u548c\u5e26\u6709\u7bad\u5934\u7684\u8def\u5f84\u3002","title":"\u4f7f\u7528\u201c\u76f4\u7ebf\u5de5\u5177\u201d"},{"location":"PS/PS5/#_39","text":"\u4f7f\u7528\u201c\u81ea\u5b9a\u5f62\u72b6\u5de5\u5177\u201d\u53ef\u4ee5\u521b\u5efa\u51fa\u975e\u5e38\u591a\u7684\u5f62\u72b6\u3002\u8fd9\u4e9b\u5f62\u72b6\u65e2\u53ef\u4ee5\u662f Photoshop\u7684\u9884\u8bbe\uff0c\u4e5f\u53ef\u4ee5\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u6216\u52a0\u8f7d\u7684\u5916\u90e8\u5f62\u72b6\u3002","title":"\u4f7f\u7528\u201c\u81ea\u5b9a\u5f62\u72b6\u5de5\u5177\u201d"},{"location":"PS/PS6/","text":"\u8ba4\u8bc6\u6587\u5b57\u5de5\u5177\u4e0e\u9762\u677f \u8ba4\u8bc6\u6587\u5b57\u5de5\u5177 Photoshop \u4e2d \u5305 \u62ec \u4e24 \u79cd \u6587 \u5b57 \u5de5 \u5177\uff0c \u5206\u522b\u662f\u201c\u6a2a\u6392\u6587\u5b57\u5de5\u5177\u201d \u548c\u201c\u76f4\u6392\u6587\u5b57\u5de5\u5177\u201d \u3002\u201c\u6a2a\u6392\u6587\u5b57\u5de5\u5177\u201d \u53ef\u4ee5\u7528\u6765\u8f93\u5165\u6a2a\u5411\u6392\u5217\u7684\u6587\u5b57\u3002 \u8bbe\u7f6e\u6587\u672c\u65b9\u5411 \u9009\u4e2d\u6587\u672c\uff0c\u5728\u9009\u9879\u680f\u4e2d\u5355\u51fb\u201c\u5207\u6362\u6587\u672c\u53d6\u5411\u201d\u6309\u94ae\uff0c\u6216\u8005\u6267\u884c\u201c\u7c7b\u578b >\u6587\u672c\u6392\u5217\u65b9\u5411\u201d\u547d\u4ee4\uff0c\u4e5f\u53ef\u4ee5\u66f4\u6539\u6587\u5b57\u65b9\u5411\uff0c\u53ef\u4ee5\u5c06\u6a2a\u5411\u6392\u5217\u7684\u6587\u5b57\u66f4\u6539\u4e3a\u76f4\u5411\u6392\u5217\u7684\u6587\u5b57\u3002 \u8bbe\u7f6e\u5b57\u4f53 \u8f93\u5165\u5b57\u4f53\u4e4b\u524d\u53ef\u4ee5\u5728\u9009\u9879\u680f\u4e2d\u5355\u51fb\u201c\u8bbe\u7f6e\u5b57\u4f53\u7cfb\u5217\u201d\u4e0b\u62c9\u5012\u4e09\u89d2\u56fe\u6807\uff0c\u9009\u62e9\u5408\u9002\u7684\u5b57\u4f53\u3002\u6216\u8005\u6267\u884c\u201c\u7a97\u53e3 > \u5b57\u7b26\u201d\u547d\u4ee4\uff0c\u6253\u5f00\u201c\u5b57\u7b26\u201d\u9762\u677f\uff0c\u5e76\u5728\u201c\u5b57\u7b26\u201d\u9762\u677f\u4e2d\u9009\u62e9\u5408\u9002\u5b57\u4f53\u3002 \u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u5b57\u4f53\u6837\u5f0f \u5b57\u4f53\u6837\u5f0f\u53ea\u9488\u5bf9\u90e8\u5206\u82f1\u6587\u5b57\u4f53\u6709\u6548\u3002\u8f93\u5165\u5b57\u7b26\u540e\uff0c\u53ef\u4ee5\u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u5b57\u4f53\u7684\u6837\u5f0f\uff0c\u5305\u62ec Regular\uff08\u89c4\u5219\uff09\u3001Italic\uff08\u659c\u4f53\uff09\u3001Bold\uff08\u7c97\u4f53\uff09\u548c Bold Italic\uff08\u7c97\u659c\u4f53\uff09\u3002 \u8bbe\u7f6e\u5b57\u53f7 \u53ef\u4ee5\u5728\u9009\u62e9\u6587\u5b57\u5bf9\u8c61\u7684\u72b6\u6001\u4e0b\u76f4\u63a5\u5728\u9009\u9879\u680f\u4e2d\u8f93\u5165\u6570\u503c\uff0c\u6216\u5728\u4e0b\u62c9\u5217\u8868\u4e2d\u9009\u62e9\u9884\u8bbe\u7684\u5b57\u53f7\uff0c\u6216\u8005\u4e5f\u53ef\u5728\u6253\u5f00\u7684\u201c\u5b57\u7b26\u201d\u9762\u677f\u4e2d\u8fdb\u884c\u5b57\u53f7\u7684\u8bbe\u7f6e\u3002 \u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u6d88\u9664\u952f\u9f7f\u65b9\u5f0f \u8f93\u5165\u6587\u5b57\u4ee5\u540e\uff0c\u53ef\u4ee5\u5728\u9009\u9879\u680f\u4e2d\u4e3a\u6587\u5b57\u6307\u5b9a\u4e00\u79cd\u6d88\u9664\u952f\u9f7f\u7684\u65b9\u5f0f\uff0c\u5176\u5dee\u522b\u4e3b\u8981\u4f53\u73b0\u5728\u6587\u5b57\u7684\u8fb9\u7f18\u5904\u3002 \u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u6587\u672c\u5bf9\u9f50 \u6587\u672c\u5bf9\u9f50\u662f\u6839\u636e\u8f93\u5165\u5b57\u7b26\u65f6\u5149\u6807\u7684\u4f4d\u7f6e\u6765\u8bbe\u7f6e\u6587\u672c\u5bf9\u9f50\u65b9\u5f0f\u7684\u3002\u5728\u6587\u5b57\u5de5\u5177\u7684\u9009\u9879\u680f\u4e2d\u63d0\u4f9b\u4e86 3 \u79cd\u8bbe\u7f6e\u6587\u672c\u6bb5\u843d\u5bf9\u9f50\u65b9\u5f0f\u7684\u6309\u94ae\uff1a\u201c\u5de6\u5bf9\u9f50\u6587\u672c\u201d \u3001\u201c\u5c45\u4e2d\u5bf9\u9f50\u6587\u672c\u201d \u548c\u201c\u53f3\u5bf9\u9f50\u6587\u672c\u201d \u3002\u9009\u62e9\u6587\u672c\u4ee5\u540e\uff0c\u5355\u51fb\u6240\u9700\u8981\u7684\u5bf9\u9f50\u6309\u94ae\uff0c\u5c31\u53ef\u4ee5\u4f7f\u6587\u672c\u6309\u6307\u5b9a\u7684\u65b9\u5f0f\u5bf9\u9f50\u3002 \u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u6587\u672c\u989c\u8272 \u8f93\u5165\u6587\u672c\u65f6\uff0c\u6587\u672c\u989c\u8272\u9ed8\u8ba4\u4e3a\u524d\u666f\u8272\u3002\u5982\u679c\u8981\u4fee\u6539\u6587\u5b57\u989c\u8272\uff0c\u53ef\u4ee5\u5148\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u9009\u62e9\u6587\u672c\u56fe\u5c42\uff0c\u7136\u540e\u5728\u9009\u9879\u680f\u4e2d\u5355\u51fb\u989c\u8272\u5757\uff0c\u63a5\u7740\u5728\u5f39\u51fa\u7684\u201c\u9009\u62e9\u6587\u672c\u989c\u8272\u201d\u5bf9\u8bdd\u6846\u4e2d\u8bbe\u7f6e\u6240\u9700\u8981\u7684\u989c\u8272\u3002\u5982\u679c\u8981\u66f4\u6539\u90e8\u5206\u6587\u5b57\u989c\u8272\uff0c\u9700\u8981\u6846\u9009\u8fd9\u90e8\u5206\u6587\u5b57\u540e\u8fdb\u884c\u66f4\u6539\u3002 \u8ba4\u8bc6\u6587\u5b57\u8499\u7248\u5de5\u5177 \u4f7f\u7528\u6587\u5b57\u8499\u7248\u5de5\u5177\u53ef\u4ee5\u521b\u5efa\u6587\u5b57\u9009\u533a\u3002\u6587\u5b57\u8499\u7248\u5de5\u5177\u5305\u62ec\u201c\u6a2a\u6392\u6587\u5b57\u8499\u7248\u5de5\u5177\u201d \u548c\u201c\u76f4\u6392\u6587\u5b57\u8499\u7248\u5de5\u5177\u201d \u4e24\u79cd\u3002\u4f7f\u7528\u6587\u5b57\u8499\u7248\u5de5\u5177\u8f93\u5165\u6587\u5b57\u4ee5\u540e\uff0c\u6587\u5b57\u5c06\u4ee5\u9009\u533a\u7684\u5f62\u5f0f\u51fa\u73b0\u3002\u5728\u6587\u5b57\u9009\u533a\u4e2d\uff0c\u53ef\u4ee5\u586b\u5145\u524d\u666f\u8272\u3001\u80cc\u666f\u8272\u4ee5\u53ca\u6e10\u53d8\u8272\u7b49\u3002 \u8be6\u89e3\u201c\u5b57\u7b26\u201d\u9762\u677f \u5728\u6587\u5b57\u5de5\u5177\u7684\u9009\u9879\u680f\u4e2d\uff0c\u53ef\u4ee5\u5feb\u6377\u5730\u5bf9\u6587\u672c\u7684\u90e8\u5206\u5c5e\u6027\u8fdb\u884c\u4fee\u6539\u3002\u5982\u679c\u8981\u5bf9\u6587\u672c\u8fdb\u884c\u66f4\u591a\u7684\u8bbe\u7f6e\uff0c\u5c31\u9700\u8981\u4f7f\u7528 \u201c\u5b57 \u7b26\u201d\u9762\u677f\u3002\u5728\u201c\u5b57\u7b26\u201d\u9762\u677f\u4e2d\uff0c\u9664\u4e86\u5305\u62ec\u5e38\u89c1\u7684\u5b57\u4f53\u7cfb\u5217\u3001\u5b57\u4f53\u6837\u5f0f\u3001\u5b57\u53f7\u3001\u6587\u672c\u989c\u8272\u548c\u6d88\u9664\u952f\u9f7f\u7b49\u8bbe\u7f6e\uff0c\u8fd8\u5305\u62ec\u884c\u8ddd\u3001\u5b57\u8ddd\u7b49\u5e38\u89c1\u8bbe\u7f6e\u3002 \u8be6\u89e3\u6bb5\u843d\u9762\u677f \u201c\u6bb5\u843d\u201d\u9762\u677f\u63d0\u4f9b\u4e86\u7528\u4e8e\u8bbe\u7f6e\u6bb5\u843d\u7f16\u6392\u683c\u5f0f\u7684\u6240\u6709\u9009\u9879\u3002\u901a\u8fc7\u201c\u6bb5\u843d\u201d\u9762\u677f\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u6bb5\u843d\u6587\u672c\u7684\u5bf9\u9f50\u65b9\u5f0f\u548c\u7f29\u8fdb\u91cf\u7b49\u53c2\u6570\u3002 \u201c\u5b57\u7b26\u6837\u5f0f\u201d\u9762\u677f \u5728\u8fdb\u884c\u4e66\u7c4d\u3001\u62a5\u520a\u6742\u5fd7\u7b49\u5305\u542b\u5927\u91cf\u6587\u5b57\u6392\u7248\u7684\u4efb\u52a1\u65f6\uff0c\u7ecf\u5e38\u9700\u8981\u4e3a\u591a\u4e2a\u6587\u5b57\u56fe\u5c42\u8d4b\u4e88\u76f8\u540c\u7684\u6837\u5f0f\uff0c\u800c\u5728 Photoshop \u4e2d\u63d0\u4f9b\u7684\u201c\u5b57\u7b26\u6837\u5f0f\u201d\u9762\u677f\u4e3a\u6b64\u7c7b\u64cd\u4f5c\u63d0\u4f9b\u4e86\u4fbf\u5229\u7684\u64cd\u4f5c\u65b9\u5f0f\u3002\u5728\u201c\u5b57\u7b26\u6837\u5f0f\u201d\u9762\u677f\u4e2d\u53ef\u4ee5\u521b\u5efa\u5b57\u7b26\u6837\u5f0f\u3001\u66f4 \u6539\u5b57\u7b26\u5c5e\u6027\uff0c\u5e76\u5c06\u5b57\u7b26\u5c5e\u6027\u5b58\u50a8\u5728\u5b57\u7b26\u6837\u5f0f\u9762\u677f\u4e2d\u3002\u5728\u9700\u8981\u4f7f\u7528\u65f6\uff0c\u53ea\u9700\u8981\u9009\u4e2d\u6587\u5b57\u56fe\u5c42\uff0c\u5e76\u5355\u51fb\u76f8\u5e94\u5b57\u7b26\u6837\u5f0f\u5373 \u53ef\u3002 \u201c\u6bb5\u843d\u6837\u5f0f\u201d\u9762\u677f \u201c\u6bb5\u843d\u6837\u5f0f\u201d\u9762\u677f\u4e0e\u201c\u5b57\u7b26\u6837\u5f0f\u201d\u9762\u677f\u7684\u4f7f\u7528\u65b9\u6cd5\u76f8\u540c\uff0c\u90fd\u53ef\u4ee5\u8fdb\u884c\u6837\u5f0f\u7684\u5b9a\u4e49\u3001\u7f16\u8f91\u4e0e\u8c03\u7528\u3002\u5b57\u7b26\u6837\u5f0f\u4e3b\u8981\u7528\u4e8e\u7c7b\u4f3c\u6807\u9898\u7684\u8f83\u5c11\u6587\u5b57\u7684\u6392\u7248\uff0c\u800c\u6bb5\u843d\u6837\u5f0f\u7684\u8bbe\u7f6e\u9009\u9879\u591a\u5e94\u7528\u4e8e\u7c7b\u4f3c\u6b63\u6587\u7684\u5927\u6bb5\u6587\u5b57\u7684\u6392\u7248\u3002 \u8bbe\u7f6e\u6bb5\u843d\u5bf9\u9f50 \u5728\u201c\u6bb5\u843d\u201d\u9762\u677f\u9876\u90e8\u53ef\u4ee5\u5bf9\u6bb5\u843d\u7684\u5bf9\u9f50\u65b9\u5f0f\u8fdb\u884c\u8bbe\u7f6e\u3002\u5355\u51fb\u201c\u5de6\u5bf9\u9f50\u6587\u672c\u201d\u6309\u94ae\u53ef\u4f7f\u6587\u5b57\u5de6\u5bf9\u9f50\uff0c\u6bb5\u843d\u53f3\u7aef\u53c2\u5dee\u4e0d\u9f50\u3002 \u5728\u201c\u6bb5\u843d\u201d\u9762\u677f\u9876\u90e8\u53ef\u4ee5\u5bf9\u6bb5\u843d\u7684\u5bf9\u9f50\u65b9\u5f0f\u8fdb\u884c\u8bbe\u7f6e\u3002\u5355\u51fb\u201c\u5de6\u5bf9\u9f50\u6587\u672c\u201d\u6309\u94ae\u53ef\u4f7f\u6587\u5b57\u5de6\u5bf9\u9f50\uff0c\u6bb5\u843d\u53f3\u7aef\u53c2\u5dee\u4e0d\u9f50\u3002 \u5355\u51fb\u201c\u6700\u540e\u4e00\u884c\u5de6\u5bf9\u9f50\u201d\u6309\u94ae \u53ef\u4f7f\u6700\u540e\u4e00\u884c\u5de6\u5bf9\u9f50\uff0c\u5176\u4ed6\u884c\u5de6\u53f3\u4e24\u7aef\u5f3a\u5236\u5bf9\u9f50\u3002\u5355\u51fb\u201c\u6700\u540e\u4e00\u884c\u5c45\u4e2d\u5bf9\u9f50\u201d\u6309\u94ae \u53ef\u4f7f\u6700\u540e\u4e00\u884c\u5c45\u4e2d\u5bf9\u9f50\uff0c\u5176\u4ed6\u884c\u5de6\u53f3\u4e24\u7aef\u5f3a\u5236\u5bf9\u9f50\u3002 \u5355\u51fb\u201c\u6700\u540e\u4e00\u884c\u53f3\u5bf9\u9f50\u201d\u6309\u94ae \u53ef\u4f7f\u6700\u540e\u4e00\u884c\u53f3\u5bf9\u9f50\uff0c\u5176\u4ed6\u884c\u5de6\u53f3\u4e24\u7aef\u5f3a\u5236\u5bf9\u9f50\u3002\u5355\u51fb\u201c\u5168\u90e8\u5bf9\u9f50\u201d\u6309\u94ae \u53ef\u5728\u5b57\u7b26\u95f4\u6dfb\u52a0\u989d\u5916\u7684\u95f4\u8ddd\uff0c\u4f7f\u6587\u672c\u5de6\u53f3\u4e24\u7aef\u5f3a\u5236\u5bf9\u9f50\u3002 \u8bbe\u7f6e\u6bb5\u843d\u7f29\u8fdb \u201c\u5de6\u7f29\u8fdb\u201d\u6309\u94ae \u7528\u4e8e\u8bbe\u7f6e\u6bb5\u843d\u6587\u672c\u5411\u53f3\uff08\u6a2a\u6392\u6587\u5b57\uff09\u6216\u5411\u4e0b\uff08\u76f4\u6392\u6587\u5b57\uff09\u7684\u7f29\u8fdb\u91cf\u3002 \u201c\u53f3\u7f29\u8fdb\u201d\u6309\u94ae \u7528\u4e8e\u8bbe\u7f6e\u6bb5\u843d\u6587\u672c\u5411\u5de6\uff08\u6a2a\u6392\u6587\u5b57\uff09\u6216\u5411\u4e0a\uff08\u76f4\u6392\u6587\u5b57\uff09\u7684\u7f29\u8fdb\u91cf\u3002 \u201c\u9996\u884c\u7f29\u8fdb\u201d\u6309\u94ae \u7528\u4e8e\u8bbe\u7f6e\u6bb5\u843d\u6587\u672c\u4e2d\u6bcf\u4e2a\u6bb5\u843d\u7684\u7b2c 1 \u884c\u5411\u53f3\uff08\u6a2a\u6392\u6587\u5b57\uff09\u6216\u7b2c 1 \u5217\u6587\u5b57\u5411\u4e0b\uff08\u76f4\u6392\u6587\u5b57\uff09\u7684\u7f29\u8fdb\u91cf\u3002 \u8bbe\u7f6e\u6bb5\u843d\u7a7a\u683c \u5355\u51fb\u201c\u6bb5\u524d\u6dfb\u52a0\u7a7a\u683c\u201d\u6309\u94ae\uff0c\u8bbe\u7f6e\u5149\u6807\u6240\u5728\u6bb5\u843d\u4e0e\u524d\u4e00\u4e2a\u6bb5\u843d\u4e4b\u95f4\u7684\u95f4\u9694\u8ddd\u79bb\u3002 \u5355\u51fb\u201c\u6bb5\u540e\u6dfb\u52a0\u7a7a\u683c\u201d\u6309\u94ae\uff0c\u8bbe\u7f6e\u5f53\u524d\u6bb5\u843d\u4e0e\u540e\u4e00\u4e2a\u6bb5\u843d\u4e4b\u95f4\u7684\u95f4\u9694\u8ddd\u79bb\u3002 \u521b\u5efa\u6587\u5b57 \u70b9\u6587\u5b57 \u70b9\u6587\u5b57\u662f\u4e00\u4e2a\u6c34\u5e73\u6216\u5782\u76f4\u7684\u6587\u672c\u884c\uff0c\u6bcf\u884c\u6587\u5b57\u90fd\u662f\u72ec\u7acb\u7684\u3002\u884c\u7684\u957f\u5ea6\u968f\u7740\u6587\u5b57\u7684\u8f93\u5165\u800c\u4e0d\u65ad\u589e\u52a0\uff0c\u4e0d\u4f1a\u8fdb\u884c\u81ea\u52a8\u6362\u884c\uff0c\u9700\u8981\u624b\u52a8\u6309 Enter \u952e\u8fdb\u884c\u6362\u884c\u3002\u4f7f\u7528\u201c\u6a2a\u6392\u6587\u5b57\u5de5\u5177\u201d\u5728\u753b\u9762\u4e2d\u5355\u51fb\u63d2\u5165\u5149\u6807\uff0c\u7136\u540e\u952e\u5165\u6587\u5b57\u3002 \u6bb5\u843d\u6587\u5b57 \u6bb5\u843d\u6587\u5b57\u5728\u5e73\u9762\u8bbe\u8ba1\u4e2d\u7684\u5e94\u7528\u975e\u5e38\u5e7f\u6cdb\uff0c\u7531\u4e8e\u5177\u6709\u81ea\u52a8\u6362\u884c\u3001\u53ef\u8c03\u6574\u6587\u5b57\u533a\u57df\u5927\u5c0f\u7b49\u4f18\u52bf\uff0c\u6240\u4ee5\u5e38\u7528\u4e8e\u5927\u91cf\u7684\u6587\u672c\u6392\u7248\u4e2d\uff0c\u5982\u6d77\u62a5\u3001\u753b\u518c\u3001\u6742\u5fd7\u6392\u7248\u7b49\u3002\u5355\u51fb\u5de5\u5177\u7bb1\u4e2d\u7684\u201c\u6a2a\u6392\u6587\u5b57\u5de5\u5177\u201d\u6309\u94ae\uff0c\u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u5408\u9002\u7684\u5b57\u4f53\u53ca\u5927\u5c0f\uff0c\u5728\u64cd\u4f5c\u754c\u9762\u5355\u51fb\u5e76\u62d6\u62fd\u5149\u6807\u521b\u5efa\u51fa\u6587\u672c\u6846\uff0c\u7136\u540e\u8f93\u5165\u6240\u9700\u6587\u5b57\u3002 \u8def\u5f84\u6587\u5b57 \u8def\u5f84\u6587\u5b57\u5e38\u7528\u4e8e\u521b\u5efa\u8d70\u5411\u4e0d\u89c4\u5219\u7684\u6587\u5b57\u884c\uff0c\u5728 Photoshop \u4e2d\u4e3a\u4e86\u5236\u4f5c\u8def\u5f84\u6587\u5b57\u9700\u8981\u5148\u7ed8\u5236\u8def\u5f84\uff0c\u7136\u540e\u5c06\u6587\u5b57\u5de5\u5177\u6307\u5b9a\u5230\u8def\u5f84\u4e0a\uff0c\u521b\u5efa \u7684 \u6587 \u5b57 \u4f1a \u6cbf \u7740 \u8def \u5f84 \u6392 \u5217\u3002 \u6539 \u53d8 \u8def \u5f84 \u5f62 \u72b6\u65f6\uff0c\u6587\u5b57\u7684\u6392\u5217\u65b9\u5f0f\u4e5f\u4f1a\u968f\u4e4b\u53d1\u751f\u6539\u53d8\u3002\u5355\u51fb\u5de5\u5177\u7bb1\u4e2d\u7684\u201c\u94a2\u7b14\u5de5\u5177\u201d\u6309\u94ae\uff0c\u6cbf\u4eba\u50cf\u5916\u8f6e\u5ed3\u8fb9\u7f18\u7ed8\u5236\u4e00\u6bb5\u5f27\u5f62\u8def\u5f84\u3002\u7136\u540e\u5355\u51fb\u5de5\u5177\u7bb1\u4e2d\u7684\u201c\u6a2a\u6392\u6587\u5b57\u5de5\u5177\u201d\u6309\u94ae\uff0c\u9009\u62e9\u5408\u9002\u7684\u5b57\u4f53\u53ca\u5927\u5c0f\uff0c\u5c06\u5149\u6807\u79fb\u52a8\u5230\u8def\u5f84\u7684\u4e00\u7aef\u4e0a\uff0c\u5f53\u5149\u6807\u6539\u53d8\u65f6\u8f93\u5165\u6587\u5b57 \u7ec3\u4e60\uff1a \u8def\u5f84\u6587\u5b57\u7ec3\u4e60 \u53d8\u5f62\u6587\u5b57 \u5728 Photoshop \u4e2d\uff0c\u6587\u5b57\u5bf9\u8c61\u53ef\u4ee5\u8fdb\u884c\u4e00\u7cfb\u5217\u5185\u7f6e\u7684\u53d8\u5f62\u6548\u679c\uff0c\u901a\u8fc7\u8fd9\u4e9b\u53d8\u5f62\u64cd\u4f5c\u53ef\u4ee5\u5728\u4e0d\u6805\u683c\u5316\u6587\u5b57\u56fe\u5c42\u7684\u72b6\u6001\u4e0b\u5236\u4f5c\u591a\u79cd\u53d8\u5f62\u6587\u5b57\u3002\u8f93\u5165\u6587\u5b57\u4ee5\u540e\uff0c\u5728\u6587\u5b57\u5de5\u5177\u7684\u9009\u9879\u680f\u4e2d\u5355\u51fb\u201c\u521b\u5efa\u6587\u5b57\u53d8\u5f62\u201d\u6309\u94ae ,\u6253\u5f00\u201c\u53d8\u5f62\u6587\u5b57\u201d\u5bf9\u8bdd\u6846\u3002\u5728\u8be5\u5bf9\u8bdd\u6846\u4e2d\u5355\u51fb\u201c\u6837\u5f0f\u201d\u5217\u8868\u53ef\u4ee5\u9009\u62e9\u53d8\u5f62\u65b9\u5f0f\u3002 \u7f16\u8f91\u6587\u672c \u8c03\u6574\u6587\u5b57\u5916\u6846 \u5728\u8f93\u5165\u6587\u5b57\u72b6\u6001\u4e0b\u6309\u4f4f Ctrl \u952e\uff0c\u6587\u5b57\u56db\u5468\u4f1a\u51fa\u73b0\u6587\u672c\u5916\u6846\uff0c\u62d6\u62fd\u53d8\u6362\u6587\u672c\u6846\uff0c\u53ef\u4ee5\u6539\u53d8\u6587\u5b57\u5927\u5c0f\u3001\u89d2\u5ea6\u3001\u65b9\u5411\u7b49. \u62fc\u5199\u68c0\u67e5 \u5982\u679c\u8981\u68c0\u67e5\u5f53\u524d\u6587\u672c\u4e2d\u7684\u82f1\u6587\u5355\u8bcd\u62fc\u5199\u662f\u5426\u6709\u8bef\uff0c\u53ef\u4ee5\u5148\u9009\u62e9\u6587\u672c\uff0c\u7136\u540e\u6267\u884c\u201c\u7f16\u8f91 > \u62fc\u5199\u68c0\u67e5\u201d\u547d\u4ee4\uff0c\u6253\u5f00\u201c\u62fc\u5199\u68c0\u67e5\u201d\u5bf9\u8bdd\u6846\uff0cPhotoshop \u4f1a\u63d0\u4f9b\u4fee\u6539\u5efa\u8bae\u3002 \u67e5\u627e\u548c\u66ff\u6362\u6587\u672c \u4f7f\u7528\u201c\u67e5\u627e\u548c\u66ff\u6362\u6587\u672c\u201d\u547d\u4ee4\u80fd\u591f\u5feb\u901f\u5730\u67e5\u627e\u548c\u66ff\u6362\u6307\u5b9a\u7684\u6587\u5b57\u3002\u6267\u884c\u201c\u7f16\u8f91 > \u67e5\u627e\u548c\u66ff\u6362\u6587\u672c\u201d\u547d\u4ee4\u3002\u53ef\u4ee5\u6253\u5f00\u201c\u67e5\u627e\u548c\u66ff\u6362\u6587\u672c\u201d\u5bf9\u8bdd\u6846\uff0c\u4ece\u4e2d\u53ef\u4ee5\u8bbe\u7f6e\u67e5\u627e\u548c\u66ff\u6362\u53c2\u6570\u3002 \u70b9\u6587\u672c\u548c\u6bb5\u843d\u6587\u672c\u7684\u8f6c\u6362 \u4e0e\u66f4\u6539\u6587\u5b57\u7684\u65b9\u5411\u76f8\u540c\uff0c\u70b9\u6587\u672c\u4e0e\u6bb5\u843d\u6587\u672c\u4e5f\u662f\u53ef\u4ee5\u76f8\u4e92\u8f6c\u6362\u7684\uff0c\u5982\u679c\u5f53\u524d\u9009\u62e9\u7684\u662f\u70b9\u6587\u672c\uff0c\u6267\u884c\u201c\u7c7b\u578b > \u8f6c\u6362\u4e3a\u6bb5\u843d\u6587\u672c\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u70b9\u6587\u672c\u8f6c\u6362\u4e3a\u6bb5\u843d\u6587\u672c\uff1b\u5982\u679c\u5f53\u524d\u9009\u62e9\u7684\u662f\u6bb5\u843d\u6587\u672c\uff0c\u6267\u884c\u201c\u7c7b\u578b > \u8f6c\u6362\u4e3a\u70b9\u6587\u672c\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u6bb5\u843d\u6587\u672c\u8f6c\u6362\u4e3a\u70b9\u6587\u672c\u3002 \u7f16\u8f91\u6bb5\u843d\u6587\u672c \u521b\u5efa\u6bb5\u843d\u6587\u672c\u4ee5\u540e\uff0c\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u9700\u6c42\u6765\u8c03\u6574\u6587\u672c\u6846\u7684\u5927\u5c0f\uff0c\u6587\u5b57\u4f1a\u81ea\u52a8\u5728\u8c03\u6574\u540e\u7684\u6587\u672c\u6846\u5185\u91cd\u65b0\u6392\u5217\u3002\u53e6\u5916\uff0c \u901a\u8fc7\u6587\u672c\u6846\u8fd8\u53ef\u4ee5\u65cb\u8f6c\u3001\u7f29\u653e\u548c\u659c\u5207\u6587\u5b57\u3002 \u8f6c\u6362\u6587\u5b57\u56fe\u5c42 \u5c06\u6587\u5b57\u56fe\u5c42\u8f6c\u5316\u4e3a\u666e\u901a\u56fe\u5c42 Photoshop \u4e2d\u7684\u6587\u5b57\u56fe\u5c42\u4e0d\u80fd\u76f4\u63a5\u5e94\u7528\u6ee4\u955c\u6216\u8fdb\u884c\u6d82\u62b9\u7ed8\u5236\u7b49\u53d8\u6362\u64cd\u4f5c\uff0c\u82e5\u8981\u5bf9\u6587\u672c\u5e94\u7528\u8fd9\u4e9b\u6ee4\u955c\u6216\u53d8\u6362\uff0c\u5c31\u9700\u8981\u5c06\u5176\u8f6c\u6362\u4e3a\u666e\u901a\u56fe\u5c42\uff0c\u4f7f\u77e2\u91cf\u6587\u5b57\u5bf9\u8c61\u53d8\u6210\u50cf\u7d20\u56fe\u50cf\u3002\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u9009\u62e9\u6587\u5b57\u56fe\u5c42\uff0c\u7136\u540e\u5728\u56fe\u5c42\u540d\u79f0\u4e0a\u5355\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u63a5\u7740\u5728\u5f39\u51fa\u7684\u83dc\u5355\u4e2d\u9009\u62e9\u201c\u6805\u683c\u5316\u6587\u5b57\u201d\u547d\u4ee4\uff0c\u5c31\u53ef\u4ee5\u5c06\u6587\u5b57\u56fe\u5c42\u8f6c\u6362\u4e3a\u666e\u901a\u56fe\u5c42\u3002 \u5c06\u6587\u5b57\u8f6c\u5316\u4e3a\u5f62\u72b6 \u9009\u62e9\u6587\u5b57\u56fe\u5c42\uff0c\u7136\u540e\u5728\u56fe\u5c42\u540d\u79f0\u4e0a\u5355\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u63a5\u7740\u5728\u5f39\u51fa\u7684\u83dc\u5355\u4e2d\u9009\u62e9\u201c\u8f6c\u6362\u4e3a\u5f62\u72b6\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u6587\u5b57\u8f6c\u6362\u4e3a\u5f62\u72b6\u56fe\u5c42\u3002 \u521b\u5efa\u6587\u5b57\u7684\u5de5\u4f5c\u8def\u5f84 \u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u9009\u62e9\u4e00\u4e2a\u6587\u5b57\u56fe\u5c42\uff0c\u7136\u540e\u6267\u884c\u201c\u7c7b\u578b > \u521b\u5efa\u5de5\u4f5c\u8def\u5f84\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u6587\u5b57\u7684\u8f6e\u5ed3\u8f6c\u6362\u4e3a\u5de5\u4f5c\u8def\u5f84\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\u65e2\u80fd\u591f\u5f97\u5230\u6587\u5b57\u8def\u5f84\uff0c\u53c8\u4e0d\u7834\u574f\u6587\u5b57\u56fe\u5c42\u3002 \u7ec3\u4e60 \u4f7f\u7528\u6587\u5b57\u5de5\u5177\u5236\u4f5c\u6e05\u65b0\u81ea\u7136\u98ce\u827a\u672f\u5b57","title":"\u6587\u5b57\u7684\u827a\u672f"},{"location":"PS/PS6/#_1","text":"","title":"\u8ba4\u8bc6\u6587\u5b57\u5de5\u5177\u4e0e\u9762\u677f"},{"location":"PS/PS6/#_2","text":"Photoshop \u4e2d \u5305 \u62ec \u4e24 \u79cd \u6587 \u5b57 \u5de5 \u5177\uff0c \u5206\u522b\u662f\u201c\u6a2a\u6392\u6587\u5b57\u5de5\u5177\u201d \u548c\u201c\u76f4\u6392\u6587\u5b57\u5de5\u5177\u201d \u3002\u201c\u6a2a\u6392\u6587\u5b57\u5de5\u5177\u201d \u53ef\u4ee5\u7528\u6765\u8f93\u5165\u6a2a\u5411\u6392\u5217\u7684\u6587\u5b57\u3002","title":"\u8ba4\u8bc6\u6587\u5b57\u5de5\u5177"},{"location":"PS/PS6/#_3","text":"\u9009\u4e2d\u6587\u672c\uff0c\u5728\u9009\u9879\u680f\u4e2d\u5355\u51fb\u201c\u5207\u6362\u6587\u672c\u53d6\u5411\u201d\u6309\u94ae\uff0c\u6216\u8005\u6267\u884c\u201c\u7c7b\u578b >\u6587\u672c\u6392\u5217\u65b9\u5411\u201d\u547d\u4ee4\uff0c\u4e5f\u53ef\u4ee5\u66f4\u6539\u6587\u5b57\u65b9\u5411\uff0c\u53ef\u4ee5\u5c06\u6a2a\u5411\u6392\u5217\u7684\u6587\u5b57\u66f4\u6539\u4e3a\u76f4\u5411\u6392\u5217\u7684\u6587\u5b57\u3002","title":"\u8bbe\u7f6e\u6587\u672c\u65b9\u5411"},{"location":"PS/PS6/#_4","text":"\u8f93\u5165\u5b57\u4f53\u4e4b\u524d\u53ef\u4ee5\u5728\u9009\u9879\u680f\u4e2d\u5355\u51fb\u201c\u8bbe\u7f6e\u5b57\u4f53\u7cfb\u5217\u201d\u4e0b\u62c9\u5012\u4e09\u89d2\u56fe\u6807\uff0c\u9009\u62e9\u5408\u9002\u7684\u5b57\u4f53\u3002\u6216\u8005\u6267\u884c\u201c\u7a97\u53e3 > \u5b57\u7b26\u201d\u547d\u4ee4\uff0c\u6253\u5f00\u201c\u5b57\u7b26\u201d\u9762\u677f\uff0c\u5e76\u5728\u201c\u5b57\u7b26\u201d\u9762\u677f\u4e2d\u9009\u62e9\u5408\u9002\u5b57\u4f53\u3002","title":"\u8bbe\u7f6e\u5b57\u4f53"},{"location":"PS/PS6/#_5","text":"\u5b57\u4f53\u6837\u5f0f\u53ea\u9488\u5bf9\u90e8\u5206\u82f1\u6587\u5b57\u4f53\u6709\u6548\u3002\u8f93\u5165\u5b57\u7b26\u540e\uff0c\u53ef\u4ee5\u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u5b57\u4f53\u7684\u6837\u5f0f\uff0c\u5305\u62ec Regular\uff08\u89c4\u5219\uff09\u3001Italic\uff08\u659c\u4f53\uff09\u3001Bold\uff08\u7c97\u4f53\uff09\u548c Bold Italic\uff08\u7c97\u659c\u4f53\uff09\u3002","title":"\u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u5b57\u4f53\u6837\u5f0f"},{"location":"PS/PS6/#_6","text":"\u53ef\u4ee5\u5728\u9009\u62e9\u6587\u5b57\u5bf9\u8c61\u7684\u72b6\u6001\u4e0b\u76f4\u63a5\u5728\u9009\u9879\u680f\u4e2d\u8f93\u5165\u6570\u503c\uff0c\u6216\u5728\u4e0b\u62c9\u5217\u8868\u4e2d\u9009\u62e9\u9884\u8bbe\u7684\u5b57\u53f7\uff0c\u6216\u8005\u4e5f\u53ef\u5728\u6253\u5f00\u7684\u201c\u5b57\u7b26\u201d\u9762\u677f\u4e2d\u8fdb\u884c\u5b57\u53f7\u7684\u8bbe\u7f6e\u3002","title":"\u8bbe\u7f6e\u5b57\u53f7"},{"location":"PS/PS6/#_7","text":"\u8f93\u5165\u6587\u5b57\u4ee5\u540e\uff0c\u53ef\u4ee5\u5728\u9009\u9879\u680f\u4e2d\u4e3a\u6587\u5b57\u6307\u5b9a\u4e00\u79cd\u6d88\u9664\u952f\u9f7f\u7684\u65b9\u5f0f\uff0c\u5176\u5dee\u522b\u4e3b\u8981\u4f53\u73b0\u5728\u6587\u5b57\u7684\u8fb9\u7f18\u5904\u3002","title":"\u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u6d88\u9664\u952f\u9f7f\u65b9\u5f0f"},{"location":"PS/PS6/#_8","text":"\u6587\u672c\u5bf9\u9f50\u662f\u6839\u636e\u8f93\u5165\u5b57\u7b26\u65f6\u5149\u6807\u7684\u4f4d\u7f6e\u6765\u8bbe\u7f6e\u6587\u672c\u5bf9\u9f50\u65b9\u5f0f\u7684\u3002\u5728\u6587\u5b57\u5de5\u5177\u7684\u9009\u9879\u680f\u4e2d\u63d0\u4f9b\u4e86 3 \u79cd\u8bbe\u7f6e\u6587\u672c\u6bb5\u843d\u5bf9\u9f50\u65b9\u5f0f\u7684\u6309\u94ae\uff1a\u201c\u5de6\u5bf9\u9f50\u6587\u672c\u201d \u3001\u201c\u5c45\u4e2d\u5bf9\u9f50\u6587\u672c\u201d \u548c\u201c\u53f3\u5bf9\u9f50\u6587\u672c\u201d \u3002\u9009\u62e9\u6587\u672c\u4ee5\u540e\uff0c\u5355\u51fb\u6240\u9700\u8981\u7684\u5bf9\u9f50\u6309\u94ae\uff0c\u5c31\u53ef\u4ee5\u4f7f\u6587\u672c\u6309\u6307\u5b9a\u7684\u65b9\u5f0f\u5bf9\u9f50\u3002","title":"\u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u6587\u672c\u5bf9\u9f50"},{"location":"PS/PS6/#_9","text":"\u8f93\u5165\u6587\u672c\u65f6\uff0c\u6587\u672c\u989c\u8272\u9ed8\u8ba4\u4e3a\u524d\u666f\u8272\u3002\u5982\u679c\u8981\u4fee\u6539\u6587\u5b57\u989c\u8272\uff0c\u53ef\u4ee5\u5148\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u9009\u62e9\u6587\u672c\u56fe\u5c42\uff0c\u7136\u540e\u5728\u9009\u9879\u680f\u4e2d\u5355\u51fb\u989c\u8272\u5757\uff0c\u63a5\u7740\u5728\u5f39\u51fa\u7684\u201c\u9009\u62e9\u6587\u672c\u989c\u8272\u201d\u5bf9\u8bdd\u6846\u4e2d\u8bbe\u7f6e\u6240\u9700\u8981\u7684\u989c\u8272\u3002\u5982\u679c\u8981\u66f4\u6539\u90e8\u5206\u6587\u5b57\u989c\u8272\uff0c\u9700\u8981\u6846\u9009\u8fd9\u90e8\u5206\u6587\u5b57\u540e\u8fdb\u884c\u66f4\u6539\u3002","title":"\u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u6587\u672c\u989c\u8272"},{"location":"PS/PS6/#_10","text":"\u4f7f\u7528\u6587\u5b57\u8499\u7248\u5de5\u5177\u53ef\u4ee5\u521b\u5efa\u6587\u5b57\u9009\u533a\u3002\u6587\u5b57\u8499\u7248\u5de5\u5177\u5305\u62ec\u201c\u6a2a\u6392\u6587\u5b57\u8499\u7248\u5de5\u5177\u201d \u548c\u201c\u76f4\u6392\u6587\u5b57\u8499\u7248\u5de5\u5177\u201d \u4e24\u79cd\u3002\u4f7f\u7528\u6587\u5b57\u8499\u7248\u5de5\u5177\u8f93\u5165\u6587\u5b57\u4ee5\u540e\uff0c\u6587\u5b57\u5c06\u4ee5\u9009\u533a\u7684\u5f62\u5f0f\u51fa\u73b0\u3002\u5728\u6587\u5b57\u9009\u533a\u4e2d\uff0c\u53ef\u4ee5\u586b\u5145\u524d\u666f\u8272\u3001\u80cc\u666f\u8272\u4ee5\u53ca\u6e10\u53d8\u8272\u7b49\u3002","title":"\u8ba4\u8bc6\u6587\u5b57\u8499\u7248\u5de5\u5177"},{"location":"PS/PS6/#_11","text":"\u5728\u6587\u5b57\u5de5\u5177\u7684\u9009\u9879\u680f\u4e2d\uff0c\u53ef\u4ee5\u5feb\u6377\u5730\u5bf9\u6587\u672c\u7684\u90e8\u5206\u5c5e\u6027\u8fdb\u884c\u4fee\u6539\u3002\u5982\u679c\u8981\u5bf9\u6587\u672c\u8fdb\u884c\u66f4\u591a\u7684\u8bbe\u7f6e\uff0c\u5c31\u9700\u8981\u4f7f\u7528 \u201c\u5b57 \u7b26\u201d\u9762\u677f\u3002\u5728\u201c\u5b57\u7b26\u201d\u9762\u677f\u4e2d\uff0c\u9664\u4e86\u5305\u62ec\u5e38\u89c1\u7684\u5b57\u4f53\u7cfb\u5217\u3001\u5b57\u4f53\u6837\u5f0f\u3001\u5b57\u53f7\u3001\u6587\u672c\u989c\u8272\u548c\u6d88\u9664\u952f\u9f7f\u7b49\u8bbe\u7f6e\uff0c\u8fd8\u5305\u62ec\u884c\u8ddd\u3001\u5b57\u8ddd\u7b49\u5e38\u89c1\u8bbe\u7f6e\u3002","title":"\u8be6\u89e3\u201c\u5b57\u7b26\u201d\u9762\u677f"},{"location":"PS/PS6/#_12","text":"\u201c\u6bb5\u843d\u201d\u9762\u677f\u63d0\u4f9b\u4e86\u7528\u4e8e\u8bbe\u7f6e\u6bb5\u843d\u7f16\u6392\u683c\u5f0f\u7684\u6240\u6709\u9009\u9879\u3002\u901a\u8fc7\u201c\u6bb5\u843d\u201d\u9762\u677f\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u6bb5\u843d\u6587\u672c\u7684\u5bf9\u9f50\u65b9\u5f0f\u548c\u7f29\u8fdb\u91cf\u7b49\u53c2\u6570\u3002","title":"\u8be6\u89e3\u6bb5\u843d\u9762\u677f"},{"location":"PS/PS6/#_13","text":"\u5728\u8fdb\u884c\u4e66\u7c4d\u3001\u62a5\u520a\u6742\u5fd7\u7b49\u5305\u542b\u5927\u91cf\u6587\u5b57\u6392\u7248\u7684\u4efb\u52a1\u65f6\uff0c\u7ecf\u5e38\u9700\u8981\u4e3a\u591a\u4e2a\u6587\u5b57\u56fe\u5c42\u8d4b\u4e88\u76f8\u540c\u7684\u6837\u5f0f\uff0c\u800c\u5728 Photoshop \u4e2d\u63d0\u4f9b\u7684\u201c\u5b57\u7b26\u6837\u5f0f\u201d\u9762\u677f\u4e3a\u6b64\u7c7b\u64cd\u4f5c\u63d0\u4f9b\u4e86\u4fbf\u5229\u7684\u64cd\u4f5c\u65b9\u5f0f\u3002\u5728\u201c\u5b57\u7b26\u6837\u5f0f\u201d\u9762\u677f\u4e2d\u53ef\u4ee5\u521b\u5efa\u5b57\u7b26\u6837\u5f0f\u3001\u66f4 \u6539\u5b57\u7b26\u5c5e\u6027\uff0c\u5e76\u5c06\u5b57\u7b26\u5c5e\u6027\u5b58\u50a8\u5728\u5b57\u7b26\u6837\u5f0f\u9762\u677f\u4e2d\u3002\u5728\u9700\u8981\u4f7f\u7528\u65f6\uff0c\u53ea\u9700\u8981\u9009\u4e2d\u6587\u5b57\u56fe\u5c42\uff0c\u5e76\u5355\u51fb\u76f8\u5e94\u5b57\u7b26\u6837\u5f0f\u5373 \u53ef\u3002","title":"\u201c\u5b57\u7b26\u6837\u5f0f\u201d\u9762\u677f"},{"location":"PS/PS6/#_14","text":"\u201c\u6bb5\u843d\u6837\u5f0f\u201d\u9762\u677f\u4e0e\u201c\u5b57\u7b26\u6837\u5f0f\u201d\u9762\u677f\u7684\u4f7f\u7528\u65b9\u6cd5\u76f8\u540c\uff0c\u90fd\u53ef\u4ee5\u8fdb\u884c\u6837\u5f0f\u7684\u5b9a\u4e49\u3001\u7f16\u8f91\u4e0e\u8c03\u7528\u3002\u5b57\u7b26\u6837\u5f0f\u4e3b\u8981\u7528\u4e8e\u7c7b\u4f3c\u6807\u9898\u7684\u8f83\u5c11\u6587\u5b57\u7684\u6392\u7248\uff0c\u800c\u6bb5\u843d\u6837\u5f0f\u7684\u8bbe\u7f6e\u9009\u9879\u591a\u5e94\u7528\u4e8e\u7c7b\u4f3c\u6b63\u6587\u7684\u5927\u6bb5\u6587\u5b57\u7684\u6392\u7248\u3002","title":"\u201c\u6bb5\u843d\u6837\u5f0f\u201d\u9762\u677f"},{"location":"PS/PS6/#_15","text":"\u5728\u201c\u6bb5\u843d\u201d\u9762\u677f\u9876\u90e8\u53ef\u4ee5\u5bf9\u6bb5\u843d\u7684\u5bf9\u9f50\u65b9\u5f0f\u8fdb\u884c\u8bbe\u7f6e\u3002\u5355\u51fb\u201c\u5de6\u5bf9\u9f50\u6587\u672c\u201d\u6309\u94ae\u53ef\u4f7f\u6587\u5b57\u5de6\u5bf9\u9f50\uff0c\u6bb5\u843d\u53f3\u7aef\u53c2\u5dee\u4e0d\u9f50\u3002 \u5728\u201c\u6bb5\u843d\u201d\u9762\u677f\u9876\u90e8\u53ef\u4ee5\u5bf9\u6bb5\u843d\u7684\u5bf9\u9f50\u65b9\u5f0f\u8fdb\u884c\u8bbe\u7f6e\u3002\u5355\u51fb\u201c\u5de6\u5bf9\u9f50\u6587\u672c\u201d\u6309\u94ae\u53ef\u4f7f\u6587\u5b57\u5de6\u5bf9\u9f50\uff0c\u6bb5\u843d\u53f3\u7aef\u53c2\u5dee\u4e0d\u9f50\u3002 \u5355\u51fb\u201c\u6700\u540e\u4e00\u884c\u5de6\u5bf9\u9f50\u201d\u6309\u94ae \u53ef\u4f7f\u6700\u540e\u4e00\u884c\u5de6\u5bf9\u9f50\uff0c\u5176\u4ed6\u884c\u5de6\u53f3\u4e24\u7aef\u5f3a\u5236\u5bf9\u9f50\u3002\u5355\u51fb\u201c\u6700\u540e\u4e00\u884c\u5c45\u4e2d\u5bf9\u9f50\u201d\u6309\u94ae \u53ef\u4f7f\u6700\u540e\u4e00\u884c\u5c45\u4e2d\u5bf9\u9f50\uff0c\u5176\u4ed6\u884c\u5de6\u53f3\u4e24\u7aef\u5f3a\u5236\u5bf9\u9f50\u3002 \u5355\u51fb\u201c\u6700\u540e\u4e00\u884c\u53f3\u5bf9\u9f50\u201d\u6309\u94ae \u53ef\u4f7f\u6700\u540e\u4e00\u884c\u53f3\u5bf9\u9f50\uff0c\u5176\u4ed6\u884c\u5de6\u53f3\u4e24\u7aef\u5f3a\u5236\u5bf9\u9f50\u3002\u5355\u51fb\u201c\u5168\u90e8\u5bf9\u9f50\u201d\u6309\u94ae \u53ef\u5728\u5b57\u7b26\u95f4\u6dfb\u52a0\u989d\u5916\u7684\u95f4\u8ddd\uff0c\u4f7f\u6587\u672c\u5de6\u53f3\u4e24\u7aef\u5f3a\u5236\u5bf9\u9f50\u3002","title":"\u8bbe\u7f6e\u6bb5\u843d\u5bf9\u9f50"},{"location":"PS/PS6/#_16","text":"\u201c\u5de6\u7f29\u8fdb\u201d\u6309\u94ae \u7528\u4e8e\u8bbe\u7f6e\u6bb5\u843d\u6587\u672c\u5411\u53f3\uff08\u6a2a\u6392\u6587\u5b57\uff09\u6216\u5411\u4e0b\uff08\u76f4\u6392\u6587\u5b57\uff09\u7684\u7f29\u8fdb\u91cf\u3002 \u201c\u53f3\u7f29\u8fdb\u201d\u6309\u94ae \u7528\u4e8e\u8bbe\u7f6e\u6bb5\u843d\u6587\u672c\u5411\u5de6\uff08\u6a2a\u6392\u6587\u5b57\uff09\u6216\u5411\u4e0a\uff08\u76f4\u6392\u6587\u5b57\uff09\u7684\u7f29\u8fdb\u91cf\u3002 \u201c\u9996\u884c\u7f29\u8fdb\u201d\u6309\u94ae \u7528\u4e8e\u8bbe\u7f6e\u6bb5\u843d\u6587\u672c\u4e2d\u6bcf\u4e2a\u6bb5\u843d\u7684\u7b2c 1 \u884c\u5411\u53f3\uff08\u6a2a\u6392\u6587\u5b57\uff09\u6216\u7b2c 1 \u5217\u6587\u5b57\u5411\u4e0b\uff08\u76f4\u6392\u6587\u5b57\uff09\u7684\u7f29\u8fdb\u91cf\u3002","title":"\u8bbe\u7f6e\u6bb5\u843d\u7f29\u8fdb"},{"location":"PS/PS6/#_17","text":"\u5355\u51fb\u201c\u6bb5\u524d\u6dfb\u52a0\u7a7a\u683c\u201d\u6309\u94ae\uff0c\u8bbe\u7f6e\u5149\u6807\u6240\u5728\u6bb5\u843d\u4e0e\u524d\u4e00\u4e2a\u6bb5\u843d\u4e4b\u95f4\u7684\u95f4\u9694\u8ddd\u79bb\u3002 \u5355\u51fb\u201c\u6bb5\u540e\u6dfb\u52a0\u7a7a\u683c\u201d\u6309\u94ae\uff0c\u8bbe\u7f6e\u5f53\u524d\u6bb5\u843d\u4e0e\u540e\u4e00\u4e2a\u6bb5\u843d\u4e4b\u95f4\u7684\u95f4\u9694\u8ddd\u79bb\u3002","title":"\u8bbe\u7f6e\u6bb5\u843d\u7a7a\u683c"},{"location":"PS/PS6/#_18","text":"","title":"\u521b\u5efa\u6587\u5b57"},{"location":"PS/PS6/#_19","text":"\u70b9\u6587\u5b57\u662f\u4e00\u4e2a\u6c34\u5e73\u6216\u5782\u76f4\u7684\u6587\u672c\u884c\uff0c\u6bcf\u884c\u6587\u5b57\u90fd\u662f\u72ec\u7acb\u7684\u3002\u884c\u7684\u957f\u5ea6\u968f\u7740\u6587\u5b57\u7684\u8f93\u5165\u800c\u4e0d\u65ad\u589e\u52a0\uff0c\u4e0d\u4f1a\u8fdb\u884c\u81ea\u52a8\u6362\u884c\uff0c\u9700\u8981\u624b\u52a8\u6309 Enter \u952e\u8fdb\u884c\u6362\u884c\u3002\u4f7f\u7528\u201c\u6a2a\u6392\u6587\u5b57\u5de5\u5177\u201d\u5728\u753b\u9762\u4e2d\u5355\u51fb\u63d2\u5165\u5149\u6807\uff0c\u7136\u540e\u952e\u5165\u6587\u5b57\u3002","title":"\u70b9\u6587\u5b57"},{"location":"PS/PS6/#_20","text":"\u6bb5\u843d\u6587\u5b57\u5728\u5e73\u9762\u8bbe\u8ba1\u4e2d\u7684\u5e94\u7528\u975e\u5e38\u5e7f\u6cdb\uff0c\u7531\u4e8e\u5177\u6709\u81ea\u52a8\u6362\u884c\u3001\u53ef\u8c03\u6574\u6587\u5b57\u533a\u57df\u5927\u5c0f\u7b49\u4f18\u52bf\uff0c\u6240\u4ee5\u5e38\u7528\u4e8e\u5927\u91cf\u7684\u6587\u672c\u6392\u7248\u4e2d\uff0c\u5982\u6d77\u62a5\u3001\u753b\u518c\u3001\u6742\u5fd7\u6392\u7248\u7b49\u3002\u5355\u51fb\u5de5\u5177\u7bb1\u4e2d\u7684\u201c\u6a2a\u6392\u6587\u5b57\u5de5\u5177\u201d\u6309\u94ae\uff0c\u5728\u9009\u9879\u680f\u4e2d\u8bbe\u7f6e\u5408\u9002\u7684\u5b57\u4f53\u53ca\u5927\u5c0f\uff0c\u5728\u64cd\u4f5c\u754c\u9762\u5355\u51fb\u5e76\u62d6\u62fd\u5149\u6807\u521b\u5efa\u51fa\u6587\u672c\u6846\uff0c\u7136\u540e\u8f93\u5165\u6240\u9700\u6587\u5b57\u3002","title":"\u6bb5\u843d\u6587\u5b57"},{"location":"PS/PS6/#_21","text":"\u8def\u5f84\u6587\u5b57\u5e38\u7528\u4e8e\u521b\u5efa\u8d70\u5411\u4e0d\u89c4\u5219\u7684\u6587\u5b57\u884c\uff0c\u5728 Photoshop \u4e2d\u4e3a\u4e86\u5236\u4f5c\u8def\u5f84\u6587\u5b57\u9700\u8981\u5148\u7ed8\u5236\u8def\u5f84\uff0c\u7136\u540e\u5c06\u6587\u5b57\u5de5\u5177\u6307\u5b9a\u5230\u8def\u5f84\u4e0a\uff0c\u521b\u5efa \u7684 \u6587 \u5b57 \u4f1a \u6cbf \u7740 \u8def \u5f84 \u6392 \u5217\u3002 \u6539 \u53d8 \u8def \u5f84 \u5f62 \u72b6\u65f6\uff0c\u6587\u5b57\u7684\u6392\u5217\u65b9\u5f0f\u4e5f\u4f1a\u968f\u4e4b\u53d1\u751f\u6539\u53d8\u3002\u5355\u51fb\u5de5\u5177\u7bb1\u4e2d\u7684\u201c\u94a2\u7b14\u5de5\u5177\u201d\u6309\u94ae\uff0c\u6cbf\u4eba\u50cf\u5916\u8f6e\u5ed3\u8fb9\u7f18\u7ed8\u5236\u4e00\u6bb5\u5f27\u5f62\u8def\u5f84\u3002\u7136\u540e\u5355\u51fb\u5de5\u5177\u7bb1\u4e2d\u7684\u201c\u6a2a\u6392\u6587\u5b57\u5de5\u5177\u201d\u6309\u94ae\uff0c\u9009\u62e9\u5408\u9002\u7684\u5b57\u4f53\u53ca\u5927\u5c0f\uff0c\u5c06\u5149\u6807\u79fb\u52a8\u5230\u8def\u5f84\u7684\u4e00\u7aef\u4e0a\uff0c\u5f53\u5149\u6807\u6539\u53d8\u65f6\u8f93\u5165\u6587\u5b57 \u7ec3\u4e60\uff1a \u8def\u5f84\u6587\u5b57\u7ec3\u4e60","title":"\u8def\u5f84\u6587\u5b57"},{"location":"PS/PS6/#_22","text":"\u5728 Photoshop \u4e2d\uff0c\u6587\u5b57\u5bf9\u8c61\u53ef\u4ee5\u8fdb\u884c\u4e00\u7cfb\u5217\u5185\u7f6e\u7684\u53d8\u5f62\u6548\u679c\uff0c\u901a\u8fc7\u8fd9\u4e9b\u53d8\u5f62\u64cd\u4f5c\u53ef\u4ee5\u5728\u4e0d\u6805\u683c\u5316\u6587\u5b57\u56fe\u5c42\u7684\u72b6\u6001\u4e0b\u5236\u4f5c\u591a\u79cd\u53d8\u5f62\u6587\u5b57\u3002\u8f93\u5165\u6587\u5b57\u4ee5\u540e\uff0c\u5728\u6587\u5b57\u5de5\u5177\u7684\u9009\u9879\u680f\u4e2d\u5355\u51fb\u201c\u521b\u5efa\u6587\u5b57\u53d8\u5f62\u201d\u6309\u94ae ,\u6253\u5f00\u201c\u53d8\u5f62\u6587\u5b57\u201d\u5bf9\u8bdd\u6846\u3002\u5728\u8be5\u5bf9\u8bdd\u6846\u4e2d\u5355\u51fb\u201c\u6837\u5f0f\u201d\u5217\u8868\u53ef\u4ee5\u9009\u62e9\u53d8\u5f62\u65b9\u5f0f\u3002","title":"\u53d8\u5f62\u6587\u5b57"},{"location":"PS/PS6/#_23","text":"","title":"\u7f16\u8f91\u6587\u672c"},{"location":"PS/PS6/#_24","text":"\u5728\u8f93\u5165\u6587\u5b57\u72b6\u6001\u4e0b\u6309\u4f4f Ctrl \u952e\uff0c\u6587\u5b57\u56db\u5468\u4f1a\u51fa\u73b0\u6587\u672c\u5916\u6846\uff0c\u62d6\u62fd\u53d8\u6362\u6587\u672c\u6846\uff0c\u53ef\u4ee5\u6539\u53d8\u6587\u5b57\u5927\u5c0f\u3001\u89d2\u5ea6\u3001\u65b9\u5411\u7b49.","title":"\u8c03\u6574\u6587\u5b57\u5916\u6846"},{"location":"PS/PS6/#_25","text":"\u5982\u679c\u8981\u68c0\u67e5\u5f53\u524d\u6587\u672c\u4e2d\u7684\u82f1\u6587\u5355\u8bcd\u62fc\u5199\u662f\u5426\u6709\u8bef\uff0c\u53ef\u4ee5\u5148\u9009\u62e9\u6587\u672c\uff0c\u7136\u540e\u6267\u884c\u201c\u7f16\u8f91 > \u62fc\u5199\u68c0\u67e5\u201d\u547d\u4ee4\uff0c\u6253\u5f00\u201c\u62fc\u5199\u68c0\u67e5\u201d\u5bf9\u8bdd\u6846\uff0cPhotoshop \u4f1a\u63d0\u4f9b\u4fee\u6539\u5efa\u8bae\u3002","title":"\u62fc\u5199\u68c0\u67e5"},{"location":"PS/PS6/#_26","text":"\u4f7f\u7528\u201c\u67e5\u627e\u548c\u66ff\u6362\u6587\u672c\u201d\u547d\u4ee4\u80fd\u591f\u5feb\u901f\u5730\u67e5\u627e\u548c\u66ff\u6362\u6307\u5b9a\u7684\u6587\u5b57\u3002\u6267\u884c\u201c\u7f16\u8f91 > \u67e5\u627e\u548c\u66ff\u6362\u6587\u672c\u201d\u547d\u4ee4\u3002\u53ef\u4ee5\u6253\u5f00\u201c\u67e5\u627e\u548c\u66ff\u6362\u6587\u672c\u201d\u5bf9\u8bdd\u6846\uff0c\u4ece\u4e2d\u53ef\u4ee5\u8bbe\u7f6e\u67e5\u627e\u548c\u66ff\u6362\u53c2\u6570\u3002","title":"\u67e5\u627e\u548c\u66ff\u6362\u6587\u672c"},{"location":"PS/PS6/#_27","text":"\u4e0e\u66f4\u6539\u6587\u5b57\u7684\u65b9\u5411\u76f8\u540c\uff0c\u70b9\u6587\u672c\u4e0e\u6bb5\u843d\u6587\u672c\u4e5f\u662f\u53ef\u4ee5\u76f8\u4e92\u8f6c\u6362\u7684\uff0c\u5982\u679c\u5f53\u524d\u9009\u62e9\u7684\u662f\u70b9\u6587\u672c\uff0c\u6267\u884c\u201c\u7c7b\u578b > \u8f6c\u6362\u4e3a\u6bb5\u843d\u6587\u672c\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u70b9\u6587\u672c\u8f6c\u6362\u4e3a\u6bb5\u843d\u6587\u672c\uff1b\u5982\u679c\u5f53\u524d\u9009\u62e9\u7684\u662f\u6bb5\u843d\u6587\u672c\uff0c\u6267\u884c\u201c\u7c7b\u578b > \u8f6c\u6362\u4e3a\u70b9\u6587\u672c\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u6bb5\u843d\u6587\u672c\u8f6c\u6362\u4e3a\u70b9\u6587\u672c\u3002","title":"\u70b9\u6587\u672c\u548c\u6bb5\u843d\u6587\u672c\u7684\u8f6c\u6362"},{"location":"PS/PS6/#_28","text":"\u521b\u5efa\u6bb5\u843d\u6587\u672c\u4ee5\u540e\uff0c\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u9700\u6c42\u6765\u8c03\u6574\u6587\u672c\u6846\u7684\u5927\u5c0f\uff0c\u6587\u5b57\u4f1a\u81ea\u52a8\u5728\u8c03\u6574\u540e\u7684\u6587\u672c\u6846\u5185\u91cd\u65b0\u6392\u5217\u3002\u53e6\u5916\uff0c \u901a\u8fc7\u6587\u672c\u6846\u8fd8\u53ef\u4ee5\u65cb\u8f6c\u3001\u7f29\u653e\u548c\u659c\u5207\u6587\u5b57\u3002","title":"\u7f16\u8f91\u6bb5\u843d\u6587\u672c"},{"location":"PS/PS6/#_29","text":"","title":"\u8f6c\u6362\u6587\u5b57\u56fe\u5c42"},{"location":"PS/PS6/#_30","text":"Photoshop \u4e2d\u7684\u6587\u5b57\u56fe\u5c42\u4e0d\u80fd\u76f4\u63a5\u5e94\u7528\u6ee4\u955c\u6216\u8fdb\u884c\u6d82\u62b9\u7ed8\u5236\u7b49\u53d8\u6362\u64cd\u4f5c\uff0c\u82e5\u8981\u5bf9\u6587\u672c\u5e94\u7528\u8fd9\u4e9b\u6ee4\u955c\u6216\u53d8\u6362\uff0c\u5c31\u9700\u8981\u5c06\u5176\u8f6c\u6362\u4e3a\u666e\u901a\u56fe\u5c42\uff0c\u4f7f\u77e2\u91cf\u6587\u5b57\u5bf9\u8c61\u53d8\u6210\u50cf\u7d20\u56fe\u50cf\u3002\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u9009\u62e9\u6587\u5b57\u56fe\u5c42\uff0c\u7136\u540e\u5728\u56fe\u5c42\u540d\u79f0\u4e0a\u5355\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u63a5\u7740\u5728\u5f39\u51fa\u7684\u83dc\u5355\u4e2d\u9009\u62e9\u201c\u6805\u683c\u5316\u6587\u5b57\u201d\u547d\u4ee4\uff0c\u5c31\u53ef\u4ee5\u5c06\u6587\u5b57\u56fe\u5c42\u8f6c\u6362\u4e3a\u666e\u901a\u56fe\u5c42\u3002","title":"\u5c06\u6587\u5b57\u56fe\u5c42\u8f6c\u5316\u4e3a\u666e\u901a\u56fe\u5c42"},{"location":"PS/PS6/#_31","text":"\u9009\u62e9\u6587\u5b57\u56fe\u5c42\uff0c\u7136\u540e\u5728\u56fe\u5c42\u540d\u79f0\u4e0a\u5355\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u63a5\u7740\u5728\u5f39\u51fa\u7684\u83dc\u5355\u4e2d\u9009\u62e9\u201c\u8f6c\u6362\u4e3a\u5f62\u72b6\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u6587\u5b57\u8f6c\u6362\u4e3a\u5f62\u72b6\u56fe\u5c42\u3002","title":"\u5c06\u6587\u5b57\u8f6c\u5316\u4e3a\u5f62\u72b6"},{"location":"PS/PS6/#_32","text":"\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u9009\u62e9\u4e00\u4e2a\u6587\u5b57\u56fe\u5c42\uff0c\u7136\u540e\u6267\u884c\u201c\u7c7b\u578b > \u521b\u5efa\u5de5\u4f5c\u8def\u5f84\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u6587\u5b57\u7684\u8f6e\u5ed3\u8f6c\u6362\u4e3a\u5de5\u4f5c\u8def\u5f84\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\u65e2\u80fd\u591f\u5f97\u5230\u6587\u5b57\u8def\u5f84\uff0c\u53c8\u4e0d\u7834\u574f\u6587\u5b57\u56fe\u5c42\u3002","title":"\u521b\u5efa\u6587\u5b57\u7684\u5de5\u4f5c\u8def\u5f84"},{"location":"PS/PS6/#_33","text":"\u4f7f\u7528\u6587\u5b57\u5de5\u5177\u5236\u4f5c\u6e05\u65b0\u81ea\u7136\u98ce\u827a\u672f\u5b57","title":"\u7ec3\u4e60"},{"location":"PS/PS7/","text":"\u56fe\u5c42\u7684\u57fa\u7840\u77e5\u8bc6 \u8ba4\u8bc6\u201c\u56fe\u5c42\u201d\u9762\u677f \u201c\u56fe\u5c42\u201d\u9762\u677f\u662f\u7528\u4e8e\u521b\u5efa\u3001\u7f16\u8f91\u548c\u7ba1\u7406\u56fe\u5c42\u4ee5\u53ca\u56fe\u5c42\u6837\u5f0f\u7684\u4e00\u79cd\u76f4\u89c2\u7684\u201c\u63a7\u5236\u5668\u201d\u3002\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\uff0c\u56fe\u5c42\u540d\u79f0\u7684\u5de6\u4fa7\u662f\u56fe\u5c42\u7684\u7f29\u89c8\u56fe\uff0c\u5b83\u663e\u793a\u4e86\u56fe\u5c42\u4e2d\u5305\u542b\u7684\u56fe\u50cf\u5185\u5bb9\uff0c\u800c\u7f29\u89c8\u56fe\u4e2d\u7684\u68cb\u76d8\u683c\u4ee3\u8868\u56fe\u50cf\u7684\u900f\u660e\u533a\u57df\u3002 \u4e86\u89e3\u56fe\u5c42\u7684\u7c7b\u578b Photoshop \u4e2d\u6709\u5f88\u591a\u79cd\u7c7b\u578b\u7684\u56fe\u5c42\uff0c\u5982\u89c6\u9891\u56fe\u5c42\u3001\u667a\u80fd\u5bf9\u8c61\u56fe\u5c42\u30013D \u56fe\u5c42\u7b49\uff0c\u800c\u6bcf\u79cd\u56fe\u5c42\u90fd\u6709\u4e0d\u540c\u7684\u529f\u80fd\u548c\u7528\u9014\uff1b \u4e5f\u6709\u5904\u4e8e\u4e0d\u540c\u72b6\u6001\u7684\u56fe\u5c42\uff0c\u5982\u9009\u4e2d\u72b6\u6001\u3001\u9501\u5b9a\u72b6\u6001\u3001\u94fe\u63a5\u72b6\u6001\u7b49\uff0c\u5f53\u7136\u5b83\u4eec\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u7684\u663e\u793a\u72b6\u6001\u4e5f\u4e0d\u76f8\u540c\u3002 \u65b0\u5efa\u56fe\u5c42 \u521b\u5efa\u666e\u901a\u56fe\u5c42 \u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u5e95\u90e8\u5355\u51fb\u201c\u521b\u5efa\u65b0\u56fe\u5c42\u201d\u6309\u94ae\uff0c\u5373\u53ef\u5728\u5f53\u524d\u56fe\u5c42\u7684\u4e0a\u4e00\u5c42\u65b0\u5efa\u4e00\u4e2a\u56fe\u5c42\u3002 \u901a\u8fc7\u62f7\u8d1d\u521b\u5efa\u56fe\u5c42 \u6309 Ctrl+J \u5feb\u6377\u952e\uff0c\u53ef\u4ee5\u5c06\u5f53\u524d\u56fe\u5c42\u590d\u5236\u4e00\u4efd\u3002 \u62f7\u8d1d\u526a\u5207\u7ec3\u4e60 \u4f7f\u7528\u62f7\u8d1d\u526a\u5207\u6cd5\u521b\u5efa\u56fe\u5c42 \u521b\u5efa\u7eaf\u8272\u586b\u5145\u56fe\u5c42 \u7eaf\u8272\u586b\u5145\u56fe\u5c42\u53ef\u4ee5\u7528\u4e00\u79cd\u989c\u8272\u586b\u5145\u56fe\u5c42\uff0c\u5e76\u5e26\u6709\u4e00\u4e2a\u56fe\u5c42\u8499\u7248\u3002 \u6267\u884c\u201c\u56fe\u5c42 > \u65b0\u5efa\u586b\u5145\u56fe\u5c42 > \u7eaf\u8272\u201d\u547d\u4ee4\u3002\u5728\u201c\u65b0\u5efa\u56fe\u5c42\u201d\u5bf9\u8bdd\u6846\u4e2d\u8bbe\u7f6e\u597d\u76f8\u5173\u9009\u9879\u4ee5\u540e\uff0c\u5355\u51fb\u201c\u786e\u5b9a\u201d\u6309\u94ae\uff0c\u6253\u5f00\u201c\u62fe\u53d6\u5b9e\u8272\u201d\u5bf9\u8bdd\u6846\u3002\u7136\u540e\u62fe\u53d6\u4e00\u79cd\u989c\u8272\uff0c\u5355\u51fb\u201c\u786e\u5b9a\u201d\u6309\u94ae\u540e\u5373\u53ef\u521b\u5efa\u4e00\u4e2a\u7eaf\u8272\u586b\u5145\u56fe\u5c42\u3002 \u521b\u5efa\u6e10\u53d8\u586b\u5145\u56fe\u5c42 \u6e10\u53d8\u586b\u5145\u56fe\u5c42\u53ef\u4ee5\u7528\u4e00\u79cd\u6e10\u53d8\u8272\u586b\u5145\u56fe\u5c42\uff0c\u5e76\u5e26\u6709\u4e00\u4e2a\u56fe\u5c42\u8499\u7248\u3002\u6267\u884c\u201c\u56fe\u5c42 > \u65b0\u5efa\u586b\u5145\u56fe\u5c42 > \u6e10\u53d8\u201d\u547d\u4ee4\uff0c\u5728\u201c\u65b0\u5efa\u56fe\u5c42\u201d\u5bf9\u8bdd\u6846\u4e2d\u8bbe\u7f6e\u597d\u76f8\u5173\u9009\u9879\u4ee5\u540e\uff0c\u5355\u51fb\u201c\u786e\u5b9a\u201d\u6309\u94ae\uff0c\u6253\u5f00\u201c\u6e10\u53d8\u586b\u5145\u201d\u5bf9\u8bdd\u6846\uff0c\u5728\u8be5\u5bf9\u8bdd\u6846\u4e2d\u53ef\u4ee5\u8bbe\u7f6e\u6e10\u53d8\u7684\u989c\u8272\u3001\u6837\u5f0f\u3001\u89d2\u5ea6\u548c\u7f29\u653e\u7b49\uff0c\u5355\u51fb\u201c\u786e\u5b9a\u201d\u6309\u94ae\u540e\u5373\u53ef\u521b\u5efa\u4e00\u4e2a\u6e10\u53d8\u586b\u5145\u56fe\u5c42\u3002 \u521b\u5efa\u56fe\u6848\u586b\u5145\u56fe\u5c42 \u56fe\u6848\u586b\u5145\u56fe\u5c42\u53ef\u4ee5\u7528\u4e00\u79cd\u56fe\u6848\u586b\u5145\u56fe\u5c42\uff0c\u5e76\u5e26\u6709\u4e00\u4e2a\u56fe\u5c42\u8499\u7248\u3002\u6267\u884c\u201c\u56fe\u5c42 > \u65b0\u5efa\u586b\u5145\u56fe\u5c42 > \u56fe\u6848\u201d\u547d\u4ee4\uff0c\u5728\u201c\u65b0\u5efa\u56fe\u5c42\u201d\u5bf9\u8bdd\u6846\u4e2d\u8bbe\u7f6e\u597d\u76f8\u5173\u9009\u9879\u4ee5\u540e\uff0c\u5355\u51fb\u201c\u786e\u5b9a\u201d\u6309\u94ae\uff0c\u6253\u5f00\u201c\u56fe\u6848\u586b\u5145\u201d\u5bf9\u8bdd\u6846\uff0c\u5728\u8be5\u5bf9\u8bdd\u6846\u4e2d\u53ef\u4ee5\u9009\u62e9\u4e00\u79cd\u56fe\u6848\uff0c\u5e76\u4e14\u53ef\u4ee5\u8bbe\u7f6e\u56fe\u6848\u7684\u7f29\u653e\u6bd4\u4f8b\u7b49\uff0c\u5355\u51fb\u201c\u786e\u5b9a\u201d\u6309\u94ae\u540e\u5373\u53ef\u521b\u5efa\u4e00\u4e2a\u56fe\u6848\u586b\u5145\u56fe\u5c42\u3002 \u56fe\u5c42\u7684\u57fa\u672c\u64cd\u4f5c \u9009\u62e9/\u53d6\u6d88\u9009\u62e9\u56fe\u5c42 \u9009\u62e9\u591a\u4e2a\u8fde\u7eed\u7684\u56fe\u5c42 \u5148\u9009\u62e9\u4f4d\u4e8e\u8fde\u7eed\u56fe\u5c42\u9876\u7aef\u7684\u56fe\u5c42\uff0c\u7136\u540e\u6309\u4f4f Shift \u952e\u5355\u51fb\u4f4d\u4e8e\u8fde\u7eed\u56fe\u5c42\u5e95\u7aef\u7684\u56fe\u5c42\uff0c\u5373\u53ef\u9009\u62e9\u8fd9\u4e9b\u8fde\u7eed\u7684\u56fe\u5c42 \u9009\u62e9\u591a\u4e2a\u975e\u8fde\u7eed\u7684\u56fe\u5c42 \u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\u56fe\u5c42\uff0c\u7136\u540e\u6309\u4f4f Ctrl \u952e\u5355\u51fb\u5176\u4ed6\u56fe\u5c42\u7684\u540d\u79f0\u3002 \u9009\u62e9\u6240\u6709\u56fe\u5c42 \u6267\u884c\u201c\u9009\u62e9 > \u6240\u6709\u56fe\u5c42\u201d\u547d\u4ee4\u6216\u6309 Alt+Ctrl+A \u7ec4\u5408\u952e\u3002\u4f7f\u7528\u8be5\u547d\u4ee4\u53ea\u80fd\u9009\u62e9\u201c\u80cc\u666f\u201d\u56fe\u5c42\u4ee5\u5916\u7684\u56fe\u5c42\uff0c\u5982\u679c\u8981\u9009\u62e9\u5305\u542b\u201c\u80cc\u666f\u201d\u56fe\u5c42\u5728\u5185\u7684\u6240\u6709\u56fe\u5c42\uff0c\u53ef\u4ee5\u6309\u4f4f Ctrl \u952e\u5355\u51fb\u201c\u80cc\u666f\u201d\u56fe\u5c42\u7684\u540d\u79f0\u3002 \u5728\u753b\u5e03\u4e2d\u5feb\u901f\u9009\u62e9\u67d0\u4e00\u56fe\u5c42 \u5f53\u753b\u5e03\u4e2d\u5305\u542b\u5f88\u591a\u76f8\u4e92\u91cd\u53e0\u7684\u56fe\u5c42\uff0c\u96be\u4ee5\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u8fdb\u884c\u8fa8\u522b\u65f6\uff0c\u53ef\u4ee5\u5728\u4f7f\u7528\u201c\u79fb\u52a8\u5de5\u5177\u201d\u72b6\u6001\u4e0b\u53f3\u51fb\u76ee\u6807\u56fe\u50cf\u7684\u4f4d\u7f6e\uff0c\u5728\u663e\u793a\u51fa\u7684\u5f53\u524d\u91cd\u53e0\u56fe\u5c42\u5217\u8868\u4e2d\u9009\u62e9\u9700\u8981\u7684\u56fe\u5c42\u3002 \u5feb\u901f\u9009\u62e9\u94fe\u63a5\u7684\u56fe\u5c42 \u5982\u679c\u8981\u9009\u62e9\u94fe\u63a5\u7684\u56fe\u5c42\uff0c\u53ef\u4ee5\u5148\u9009\u62e9\u4e00\u4e2a\u94fe\u63a5\u56fe\u5c42\uff0c\u7136\u540e\u6267\u884c\u201c\u56fe\u5c42 > \u9009\u62e9\u94fe\u63a5\u56fe\u5c42\u201d\u547d\u4ee4\u3002 \u53d6\u6d88\u9009\u62e9\u56fe\u5c42 \u5982\u679c\u4e0d\u60f3\u9009\u62e9\u4efb\u4f55\u56fe\u5c42\uff0c\u53ef\u4ee5\u6267\u884c\u201c\u9009\u62e9 > \u53d6\u6d88\u9009\u62e9\u56fe\u5c42\u201d\u547d\u4ee4\u3002\u53e6\u5916\uff0c\u4e5f\u53ef\u4ee5\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u6700\u4e0b\u9762\u7684\u7a7a\u767d\u5904\u5355\u51fb\uff0c\u5373\u53ef\u53d6\u6d88\u9009\u62e9\u6240\u6709\u56fe\u5c42\u3002 \u8c03\u6574\u56fe\u5c42\u7684\u6392\u5217\u987a\u5e8f \u5982\u679c\u8981\u6539\u53d8\u56fe\u5c42\u7684\u6392\u5217\u987a\u5e8f\uff0c\u53ef\u4ee5\u5c06\u8be5\u56fe\u5c42\u62d6\u62fd\u5230\u53e6\u5916\u4e00\u4e2a\u56fe\u5c42\u7684\u4e0a\u9762\u6216\u4e0b\u9762\u3002 \u4f7f\u7528\u56fe\u5c42\u7ec4\u7ba1\u7406\u56fe\u5c42 \u521b\u5efa\u56fe\u5c42\u7ec4 \u5355\u51fb\u201c\u56fe\u5c42\u201d\u9762\u677f\u5e95\u90e8\u7684\u201c\u521b\u5efa\u65b0\u7ec4\u201d\u6309\u94ae\uff0c\u5373\u53ef\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u521b\u5efa\u65b0\u7684\u56fe\u5c42\u7ec4\u3002\u4e5f\u53ef\u4ee5\u4ece\u56fe\u5c42\u5efa\u7acb\u56fe\u5c42\u7ec4\u3002\u9996\u5148\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u6309\u4f4fAlt \u952e\u9009\u62e9\u9700\u8981\u7684\u56fe\u5c42\uff0c\u7136\u540e\u5355\u51fb\u5e76\u62d6\u62fd\u81f3\u201c\u65b0\u5efa\u7ec4\u201d\u6309\u94ae\u4e0a\u3002 \u590d\u5236\u56fe\u5c42 \u9009\u62e9\u8981\u8fdb\u884c\u590d\u5236\u7684\u56fe\u5c42\uff0c\u7136\u540e\u5728\u5176\u540d\u79f0\u4e0a\u5355\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u63a5\u7740\u5728\u5f39\u51fa\u7684\u83dc\u5355\u4e2d\u9009\u62e9\u201c\u590d\u5236\u56fe\u5c42\u201d\u547d\u4ee4\uff0c\u6b64\u65f6\u5f39\u51fa\u201c\u590d\u5236\u56fe\u5c42\u201d\u5bf9\u8bdd\u6846\uff0c\u5355\u51fb\u201c\u786e\u5b9a\u201d\u6309\u94ae\u5373\u53ef\u3002 \u5220\u9664\u56fe\u5c42 \u5982\u679c\u8981\u5feb\u901f\u5220\u9664\u56fe\u5c42\uff0c\u53ef\u4ee5\u5c06\u5176\u62d6\u62fd\u5230\u201c\u5220\u9664\u56fe\u5c42\u201d\u6309\u94ae \u4e0a\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6309 Delete \u952e\u3002\uff09\u6267\u884c\u201c\u56fe\u5c42 > \u5220\u9664 > \u9690\u85cf\u56fe\u5c42\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5220\u9664\u6240\u6709\u9690\u85cf\u7684\u56fe\u5c42\u3002 \u663e\u793a\u4e0e\u9690\u85cf\u56fe\u5c42/\u56fe\u5c42\u7ec4 \u56fe\u5c42\u7f29\u89c8\u56fe\u5de6\u4fa7\u7684\u56fe\u6807\u53ef\u7528\u6765\u63a7\u5236\u56fe\u5c42\u7684\u53ef\u89c1\u6027 \u94fe\u63a5\u56fe\u5c42\u4e0e\u53d6\u6d88\u94fe\u63a5 \u9009\u62e9\u9700\u8981\u8fdb\u884c\u94fe\u63a5\u7684\u56fe\u5c42\uff08\u4e24\u4e2a\u6216\u591a\u4e2a\u56fe\u5c42\uff09\u3002\u7136\u540e\u6267\u884c\u201c\u56fe\u5c42 > \u94fe\u63a5\u56fe\u5c42\u201d\u547d\u4ee4\u6216\u5355\u51fb\u56fe \u5c42\u9762\u677f\u5e95\u90e8\u7684\u201c\u94fe\u63a5\u56fe\u5c42\u201d\u6309\u94ae \uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u56fe\u5c42\u94fe\u63a5\u8d77\u6765\u3002 \u4fee\u6539\u56fe\u5c42\u7684\u540d\u79f0\u4e0e\u989c\u8272 \u5728\u56fe\u5c42\u8f83\u591a\u7684\u6587\u6863\u4e2d\uff0c\u4fee\u6539\u56fe\u5c42\u540d\u79f0\u53ca\u5176\u989c\u8272\u6709\u52a9\u4e8e\u5feb\u901f\u627e\u5230\u76f8\u5e94\u7684\u56fe\u5c42\u3002\u6267\u884c\u201c\u56fe\u5c42 > \u91cd\u547d\u540d\u56fe\u5c42\u201d\u547d\u4ee4\uff0c\u6216\u5728\u56fe\u5c42\u540d\u79f0\u4e0a\u53cc\u51fb\uff0c\u6fc0\u6d3b\u540d\u79f0\u6587\u672c\u6846\uff0c\u7136\u540e\u8f93\u5165\u540d\u79f0\uff0c\u4e5f\u53ef\u4ee5\u4fee\u6539\u56fe\u5c42\u540d\u79f0\u3002 \u66f4\u6539\u56fe\u5c42\u989c\u8272\u4e5f\u662f\u4e00\u79cd\u4fbf\u4e8e\u5feb\u901f\u627e\u5230\u56fe\u5c42\u7684\u65b9\u6cd5\uff0c\u5728\u56fe\u5c42\u4e0a\u5355\u51fb\u53f3\u952e\uff0c\u5728\u5f39\u51fa\u83dc\u5355\u7684\u4e0b\u534a\u90e8\u5206\u53ef\u4ee5\u770b\u5230\u591a\u79cd\u989c\u8272\u540d\u79f0\uff0c\u5355\u51fb\u5176\u4e2d\u4e00\u79cd\u5373\u53ef\u66f4\u6539\u5f53\u524d\u56fe\u5c42\u524d\u65b9\u7684\u8272\u5757\u6548\u679c\uff0c\u9009\u62e9\u201c\u65e0\u989c\u8272\u201d\u5373\u53ef\u53bb\u9664\u989c\u8272\u6548\u679c\u3002 \u9501\u5b9a\u56fe\u5c42 \u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u7684\u4e0a\u534a\u90e8\u5206\u6709\u591a\u4e2a\u9501\u5b9a\u6309\u94ae\uff0c\u9501\u5b9a\u6309\u94ae\u4e3b\u8981\u7528\u6765\u4fdd\u62a4\u56fe\u5c42\u900f\u660e\u533a\u57df\u3001\u56fe\u50cf\u50cf\u7d20\u548c\u4f4d\u7f6e\u7684\u9501\u5b9a\u529f\u80fd\uff0c \u4f7f\u7528\u8fd9\u4e9b\u6309\u94ae\u53ef\u4ee5\u6839\u636e\u9700\u8981\u5b8c\u5168\u9501\u5b9a\u6216\u90e8\u5206\u9501\u5b9a\u56fe\u5c42\uff0c\u4ee5\u514d\u56e0\u64cd\u4f5c\u5931\u8bef\u800c\u5bf9\u56fe\u5c42\u7684\u5185\u5bb9\u9020\u6210\u7834\u574f\u3002 \u6805\u683c\u5316\u56fe\u5c42\u5185\u5bb9 \u6587\u5b57\u56fe\u5c42\u30013D \u56fe\u5c42\u3001\u5f62\u72b6\u56fe\u5c42\u3001\u77e2\u91cf\u8499\u7248\u56fe\u5c42\u6216\u667a\u80fd\u5bf9\u8c61\u7b49\u5305\u542b\u77e2\u91cf\u6570\u636e\u7684\u56fe\u5c42\u662f\u4e0d\u80fd\u591f\u76f4\u63a5\u8fdb\u884c\u7f16\u8f91\u7684\uff0c\u6240\u4ee5\u9700\u8981\u5148\u5c06\u5176\u6805\u683c\u5316\u4ee5\u540e\u624d\u80fd\u8fdb\u884c\u76f8\u5e94\u7684\u7f16\u8f91\u3002\u9009\u62e9\u9700\u8981\u6805\u683c\u5316\u7684\u56fe\u5c42\u3002\u7136\u540e\u6267\u884c\u201c\u56fe\u5c42 > \u6805\u683c\u5316\u201d\u83dc\u5355\u4e0b\u7684\u5b50\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u76f8\u5e94\u7684\u56fe\u5c42\u6805\u683c\u5316\u3002\u6216\u8005\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u9009\u4e2d\u8be5\u56fe\u5c42\u5e76\u5355\u51fb\u53f3\u952e\u6267\u884c\u6805\u683c\u5316\u547d\u4ee4\u3002 \u5bf9\u9f50\u4e0e\u5206\u5e03\u56fe\u5c42 \u5bf9\u9f50\u56fe\u5c42 \u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u9009\u62e9\u591a\u4e2a\u56fe\u5c42\uff0c\u7136\u540e\u6267\u884c\u201c\u56fe\u5c42 > \u5bf9\u9f50\u201d\u83dc\u5355\u4e0b\u7684\u5b50\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u591a\u4e2a\u56fe\u5c42\u8fdb\u884c\u5bf9\u9f50\u3002 \u5c06\u56fe\u5c42\u4e0e\u9009\u533a\u5bf9\u9f50 \u5f53\u753b\u9762\u4e2d\u5b58\u5728\u9009\u533a\u65f6\uff0c\u9009\u62e9\u4e00\u4e2a\u56fe\u5c42\uff0c\u6267\u884c\u201c\u56fe\u5c42 > \u5c06\u56fe\u5c42\u4e0e\u9009\u533a\u5bf9\u9f50\u201d\u547d\u4ee4\uff0c\u5728\u5b50\u83dc\u5355\u4e2d\u5373\u53ef\u9009\u62e9\u4e00\u79cd\u5bf9\u9f50\u65b9\u6cd5\uff0c\u6240\u9009\u56fe\u5c42\u5373\u53ef\u4ee5\u9009\u62e9\u7684\u65b9\u6cd5\u8fdb\u884c\u5bf9\u9f50\u3002 \u5206\u5e03\u56fe\u5c42 \u5f53\u4e00\u4e2a\u6587\u6863\u4e2d\u5305\u542b\u591a\u4e2a\u56fe\u5c42\uff08\u81f3\u5c11\u4e3a 3 \u4e2a\u56fe\u5c42\uff0c\u4e14\u201c\u80cc\u666f\u201d\u56fe\u5c42\u9664\u5916\uff09\u65f6\uff0c\u6267\u884c\u201c\u56fe\u5c42 > \u5206\u5e03\u201d\u83dc\u5355\u4e0b\u7684\u5b50\u547d\u4ee4\u53ef\u5c06\u8fd9\u4e9b\u56fe\u5c42\u6309\u7167\u4e00\u5b9a\u7684\u89c4\u5f8b\u5747\u5300\u5206\u5e03\u3002 \u4f7f\u7528\u56fe\u5c42\u7ec4\u7ba1\u7406\u56fe\u5c42 \u5c06\u56fe\u5c42\u79fb\u5165\u6216\u79fb\u51fa\u56fe\u5c42\u7ec4 1\u3001\u9009\u62e9\u4e00\u4e2a\u6216\u591a\u4e2a\u56fe\u5c42\uff0c\u7136\u540e\u5c06\u5176\u62d6\u62fd\u5230\u56fe\u5c42\u7ec4\u5185\uff0c\u5c31\u53ef\u4ee5\u5c06\u5176\u79fb\u5165\u5230\u8be5\u7ec4\u4e2d\u3002 2\u3001\u5c06\u56fe\u5c42\u7ec4\u4e2d\u7684\u56fe\u5c42\u62d6\u62fd\u5230\u7ec4\u5916\uff0c\u5c31\u53ef\u4ee5\u5c06\u5176\u4ece\u56fe\u5c42\u7ec4\u4e2d\u79fb\u51fa\u3002 \u81ea\u52a8\u5bf9\u9f50\u4e0e\u81ea\u52a8\u6df7\u5408 \u81ea\u52a8\u5bf9\u9f50\u56fe\u5c42 \u8bf4\u660e \u5229\u7528\u201c\u81ea\u52a8\u5bf9\u9f50\u56fe\u5c42\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u56fe\u5c42\u4e2d\u7684\u76f8\u4f3c\u5185\u5bb9\uff08\u5982\u89d2\u548c\u8fb9\uff09\u81ea\u52a8\u5bf9\u9f50\u56fe\u5c42\u3002 \u5f88\u591a\u65f6\u5019\u4e3a\u4e86\u8282\u7ea6\u6210\u672c\uff0c\u62cd\u6444\u5168\u666f\u56fe\u50cf\u65f6\u7ecf\u5e38\u9700\u8981\u62cd\u6444\u591a\u5f20\u56fe\u7247\uff0c\u7136\u540e\u5728\u540e\u671f\u8f6f\u4ef6\u4e2d\u8fdb\u884c\u63a5\u63a5\u3002 \u64cd\u4f5c\u65b9\u6cd5\uff1a\u6267\u884c\u201c\u7f16\u8f91>\u81ea\u52a8\u5bf9\u9f50\u56fe\u5c42\u201d\u547d\u4ee4 \u201c\u5168\u666f\u56fe\u201d\uff1a\u5c06\u91cd\u53e0\u7684\u56fe\u5c42\u6df7\u5408\u6210\u5168\u666f\u56fe\u3002 \u201c\u5806\u53e0\u56fe\u50cf\u201d\uff1a\u6df7\u5408\u6bcf\u4e2a\u76f8\u5e94\u533a\u57df\u4e2d\u7684\u6700\u4f73\u7ec6\u8282\u3002\u8be5\u9009\u9879\u6700\u9002\u5408\u4e8e\u5df2\u5bf9\u9f50\u7684\u56fe\u5c42\u3002 \u81ea\u52a8\u5bf9\u9f50\u56fe\u5c42\u7ec3\u4e60 \u81ea\u52a8\u5bf9\u9f50\u5236\u4f5c\u5168\u666f\u56fe \u81ea\u52a8\u6df7\u5408\u56fe\u5c42 \u8bf4\u660e \u81ea\u52a8\u6df7\u5408\u56fe\u5c42\u201d\u547d\u4ee4\uff0c\u4ec5\u9002\u7528 \u4e8eRGB\u6216\u7070\u5ea6\u56fe\u50cf\uff0c\u4e0d\u9002\u7528\u4e8e\u667a\u80fd\u5bf9\u8c61\u3001\u89c6\u9891\u56fe\u5c42\u30013D\u56fe\u5c42\u3001\u6216\u80cc\u666f\u56fe\u5c42\u3002 \u9009\u62e9\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u7684\u56fe\u5c42\uff0c\u7136\u540e\u6267\u884c\u201c\u7f16\u8f91>\u81ea\u52a8\u6df7\u5408\u56fe\u5c42\u201d\u547d\u4ee4\uff0c\u6253\u5f00\u201c\u81ea\u52a8\u6df7\u5408\u56fe\u5c42\u201d\u5bf9\u8bdd\u6846\uff0c\u8bbe\u7f6e\u5408\u9002\u7684\u6df7\u5408\u65b9\u5f0f\uff0c\u5373\u53ef\u5c06\u591a\u4e2a\u56fe\u5c42\u8fdb\u884c\u6df7\u5408\u3002 \u81ea\u52a8\u6df7\u5408\u56fe\u5c42\u7ec3\u4e60 \u4f7f\u7528\u81ea\u52a8\u6df7\u5408\u547d\u4ee4\u5408\u6210\u56fe\u50cf \u5236\u4f5c\u65e0\u666f\u6df1\u7684\u98ce\u666f\u7167\u7247 \u5408\u5e76\u4e0e\u76d6\u5370\u56fe\u5c42 \u5408\u5e76\u56fe\u5c42 \u5982\u679c\u8981\u5c06\u591a\u4e2a\u56fe\u5c42\u5408\u5e76\u4e3a\u4e00\u4e2a\u56fe\u5c42\uff0c\u53ef\u4ee5\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u9009\u62e9\u8981\u5408\u5e76\u7684\u56fe\u5c42\uff0c\u7136\u540e\u6267\u884c\u201c\u56fe\u5c42 > \u5408\u5e76\u56fe\u5c42\u201d\u547d\u4ee4\u6216\u6309 Ctrl+E \u7ec4\u5408\u952e\uff0c\u5408\u5e76\u4ee5\u540e\u7684\u56fe\u5c42\u4f7f\u7528\u4e0a\u9762\u56fe\u5c42\u7684\u540d\u79f0\u3002 \u5411\u4e0b\u5408\u5e76\u56fe\u5c42 \u6267\u884c\u201c\u56fe\u5c42 > \u5411\u4e0b\u5408\u5e76\u201d\u547d\u4ee4\u6216\u6309 Ctrl+E \u7ec4\u5408\u952e\uff0c\u53ef\u5c06\u4e00\u4e2a\u56fe\u5c42\u4e0e\u5b83\u4e0b\u9762\u7684\u56fe\u5c42\u5408\u5e76\u3002\u5408\u5e76\u4ee5\u540e\u7684\u56fe\u5c42\u4f7f\u7528\u4e0b\u9762\u56fe\u5c42\u7684\u540d\u79f0\u3002 \u5408\u5e76\u53ef\u89c1\u56fe\u5c42 \u6267\u884c\u201c\u56fe\u5c42 > \u5408\u5e76\u53ef\u89c1\u56fe\u5c42\u201d\u547d\u4ee4\u6216\u6309 Ctrl+Shift+E \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u5408\u5e76\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u7684\u6240\u6709\u53ef\u89c1\u56fe\u5c42\u3002 \u62fc\u5408\u56fe\u50cf \u6267\u884c\u201c\u56fe\u5c42 > \u62fc\u5408\u56fe\u50cf\u201d\u547d\u4ee4\u53ef\u4ee5\u5c06\u6240\u6709\u56fe\u5c42\u90fd\u62fc\u5408\u5230\u201c\u80cc\u666f\u201d\u56fe\u5c42\u4e2d\u3002\u5982\u679c\u6709\u9690\u85cf\u7684\u56fe\u5c42\uff0c\u5219\u4f1a\u5f39\u51fa\u4e00\u4e2a\u63d0\u793a\u5bf9\u8bdd\u6846\uff0c\u63d0\u9192\u7528\u6237\u662f\u5426\u8981\u6254\u6389\u9690\u85cf\u7684\u56fe\u5c42\u3002 \u76d6\u5370\u56fe\u5c42 \u76d6\u5370\u662f\u4e00\u79cd\u5408\u5e76\u56fe\u5c42\u7684\u7279\u6b8a\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u591a\u4e2a\u56fe\u5c42\u7684\u5185\u5bb9\u5408\u5e76\u5230\u4e00\u4e2a\u65b0\u7684\u56fe\u5c42\u4e2d\uff0c\u540c\u65f6\u4fdd\u6301\u5176\u4ed6\u56fe\u5c42\u4e0d\u53d8\u3002\u76d6\u5370\u56fe\u5c42\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u7ecf\u5e38\u7528\u5230\uff0c\u662f\u4e00\u79cd\u5f88\u5b9e\u7528\u7684\u56fe\u5c42\u5408\u5e76\u65b9\u6cd5\u3002 \u5411\u4e0b\u76d6\u5370\u56fe\u5c42\uff1a\u9009\u62e9\u4e00\u4e2a\u56fe\u5c42\uff0c\u7136\u540e\u6309 Ctrl+Alt+E \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u5c06\u8be5\u56fe\u5c42\u4e2d\u7684\u56fe\u50cf\u76d6\u5370\u5230\u4e0b\u9762\u7684\u56fe\u5c42\u4e2d\uff0c\u539f\u59cb\u56fe\u5c42\u7684\u5185\u5bb9\u4fdd\u6301\u4e0d\u53d8\u3002 \u76d6\u5370\u591a\u4e2a\u56fe\u5c42\uff1a\u9009\u62e9\u591a\u4e2a\u56fe\u5c42\u5e76\u4f7f\u7528\u76d6\u5370\u56fe\u5c42\u5feb\u6377\u952e Ctrl+Alt+E \uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u56fe\u5c42\u4e2d\u7684\u56fe\u50cf\u76d6\u5370\u5230\u4e00\u4e2a\u65b0\u7684\u56fe\u5c42\u4e2d\uff0c\u539f\u59cb\u56fe\u5c42\u7684\u5185\u5bb9\u4fdd\u6301\u4e0d\u53d8\u3002 \u76d6\u5370\u53ef\u89c1\u56fe\u5c42\uff1a\u6309 Ctrl+Shift+Alt+E \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u5c06\u6240\u6709\u53ef\u89c1\u56fe\u5c42\u76d6\u5370\u5230\u4e00\u4e2a\u65b0\u7684\u56fe\u5c42\u4e2d\u3002 \u76d6\u5370\u56fe\u5c42\u7ec4\uff1a\u9009\u62e9\u56fe\u5c42\u7ec4\uff0c\u7136\u540e\u4f7f\u7528\u5feb\u6377\u952e Ctrl+Alt+E \uff0c\u53ef\u4ee5\u5c06\u7ec4\u4e2d\u6240\u6709\u56fe\u5c42\u5185\u5bb9\u76d6\u5370\u5230\u4e00\u4e2a\u65b0\u7684\u56fe\u5c42\u4e2d\uff0c\u539f\u59cb\u56fe\u5c42\u7ec4\u4e2d\u7684\u5185\u5bb9\u4fdd\u6301\u4e0d\u53d8\u3002 \u667a\u80fd\u5bf9\u8c61\u56fe\u5c42 \u8bf4\u660e \u5728Photoshop\u4e2d\uff0c\u667a\u80fd\u5bf9\u8c61\u53ef\u4ee5\u770b\u4f5c\u5d4c\u5165\u5f53\u524d\u6587\u4ef6\u7684\u4e00\u4e2a\u72ec\u7acb\u6587\u4ef6\uff0c\u5b83\u53ef\u4ee5\u5305\u542b\u4f4d\u56fe\uff0c\u4e5f\u53ef\u4ee5\u5305\u542bIllustrator\u4e2d\u521b\u5efa\u7684\u77e2\u91cf\u56fe\u5f62\u3002\u800c\u4e14\u5728\u9886\u56de\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u7834\u574f\u667a\u80fd\u5bf9\u8c61\u7684\u539f\u59cb\u6570\u636e\uff0c\u56e0\u6b64\u5bf9\u667a\u80fd\u5bf9\u8c61\u56fe\u5c42\u6240\u6267\u884c\u7684\u64cd\u4f5c\u90fd\u662f\u975e\u7834\u574f\u6027\u64cd\u4f5c\u3002 \u667a\u80fd\u5bf9\u8c61\u56fe\u5c42\u7ec3\u4e60 \u7f16\u8f91\u667a\u80fd\u5bf9\u8c61 \u66ff\u6362\u667a\u80fd\u5bf9\u8c61\u5185\u5bb9","title":"\u56fe\u5c42\u7684\u57fa\u672c\u64cd\u4f5c"},{"location":"PS/PS7/#_1","text":"","title":"\u56fe\u5c42\u7684\u57fa\u7840\u77e5\u8bc6"},{"location":"PS/PS7/#_2","text":"\u201c\u56fe\u5c42\u201d\u9762\u677f\u662f\u7528\u4e8e\u521b\u5efa\u3001\u7f16\u8f91\u548c\u7ba1\u7406\u56fe\u5c42\u4ee5\u53ca\u56fe\u5c42\u6837\u5f0f\u7684\u4e00\u79cd\u76f4\u89c2\u7684\u201c\u63a7\u5236\u5668\u201d\u3002\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\uff0c\u56fe\u5c42\u540d\u79f0\u7684\u5de6\u4fa7\u662f\u56fe\u5c42\u7684\u7f29\u89c8\u56fe\uff0c\u5b83\u663e\u793a\u4e86\u56fe\u5c42\u4e2d\u5305\u542b\u7684\u56fe\u50cf\u5185\u5bb9\uff0c\u800c\u7f29\u89c8\u56fe\u4e2d\u7684\u68cb\u76d8\u683c\u4ee3\u8868\u56fe\u50cf\u7684\u900f\u660e\u533a\u57df\u3002","title":"\u8ba4\u8bc6\u201c\u56fe\u5c42\u201d\u9762\u677f"},{"location":"PS/PS7/#_3","text":"Photoshop \u4e2d\u6709\u5f88\u591a\u79cd\u7c7b\u578b\u7684\u56fe\u5c42\uff0c\u5982\u89c6\u9891\u56fe\u5c42\u3001\u667a\u80fd\u5bf9\u8c61\u56fe\u5c42\u30013D \u56fe\u5c42\u7b49\uff0c\u800c\u6bcf\u79cd\u56fe\u5c42\u90fd\u6709\u4e0d\u540c\u7684\u529f\u80fd\u548c\u7528\u9014\uff1b \u4e5f\u6709\u5904\u4e8e\u4e0d\u540c\u72b6\u6001\u7684\u56fe\u5c42\uff0c\u5982\u9009\u4e2d\u72b6\u6001\u3001\u9501\u5b9a\u72b6\u6001\u3001\u94fe\u63a5\u72b6\u6001\u7b49\uff0c\u5f53\u7136\u5b83\u4eec\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u7684\u663e\u793a\u72b6\u6001\u4e5f\u4e0d\u76f8\u540c\u3002","title":"\u4e86\u89e3\u56fe\u5c42\u7684\u7c7b\u578b"},{"location":"PS/PS7/#_4","text":"","title":"\u65b0\u5efa\u56fe\u5c42"},{"location":"PS/PS7/#_5","text":"\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u5e95\u90e8\u5355\u51fb\u201c\u521b\u5efa\u65b0\u56fe\u5c42\u201d\u6309\u94ae\uff0c\u5373\u53ef\u5728\u5f53\u524d\u56fe\u5c42\u7684\u4e0a\u4e00\u5c42\u65b0\u5efa\u4e00\u4e2a\u56fe\u5c42\u3002","title":"\u521b\u5efa\u666e\u901a\u56fe\u5c42"},{"location":"PS/PS7/#_6","text":"\u6309 Ctrl+J \u5feb\u6377\u952e\uff0c\u53ef\u4ee5\u5c06\u5f53\u524d\u56fe\u5c42\u590d\u5236\u4e00\u4efd\u3002","title":"\u901a\u8fc7\u62f7\u8d1d\u521b\u5efa\u56fe\u5c42"},{"location":"PS/PS7/#_7","text":"\u4f7f\u7528\u62f7\u8d1d\u526a\u5207\u6cd5\u521b\u5efa\u56fe\u5c42","title":"\u62f7\u8d1d\u526a\u5207\u7ec3\u4e60"},{"location":"PS/PS7/#_8","text":"\u7eaf\u8272\u586b\u5145\u56fe\u5c42\u53ef\u4ee5\u7528\u4e00\u79cd\u989c\u8272\u586b\u5145\u56fe\u5c42\uff0c\u5e76\u5e26\u6709\u4e00\u4e2a\u56fe\u5c42\u8499\u7248\u3002 \u6267\u884c\u201c\u56fe\u5c42 > \u65b0\u5efa\u586b\u5145\u56fe\u5c42 > \u7eaf\u8272\u201d\u547d\u4ee4\u3002\u5728\u201c\u65b0\u5efa\u56fe\u5c42\u201d\u5bf9\u8bdd\u6846\u4e2d\u8bbe\u7f6e\u597d\u76f8\u5173\u9009\u9879\u4ee5\u540e\uff0c\u5355\u51fb\u201c\u786e\u5b9a\u201d\u6309\u94ae\uff0c\u6253\u5f00\u201c\u62fe\u53d6\u5b9e\u8272\u201d\u5bf9\u8bdd\u6846\u3002\u7136\u540e\u62fe\u53d6\u4e00\u79cd\u989c\u8272\uff0c\u5355\u51fb\u201c\u786e\u5b9a\u201d\u6309\u94ae\u540e\u5373\u53ef\u521b\u5efa\u4e00\u4e2a\u7eaf\u8272\u586b\u5145\u56fe\u5c42\u3002","title":"\u521b\u5efa\u7eaf\u8272\u586b\u5145\u56fe\u5c42"},{"location":"PS/PS7/#_9","text":"\u6e10\u53d8\u586b\u5145\u56fe\u5c42\u53ef\u4ee5\u7528\u4e00\u79cd\u6e10\u53d8\u8272\u586b\u5145\u56fe\u5c42\uff0c\u5e76\u5e26\u6709\u4e00\u4e2a\u56fe\u5c42\u8499\u7248\u3002\u6267\u884c\u201c\u56fe\u5c42 > \u65b0\u5efa\u586b\u5145\u56fe\u5c42 > \u6e10\u53d8\u201d\u547d\u4ee4\uff0c\u5728\u201c\u65b0\u5efa\u56fe\u5c42\u201d\u5bf9\u8bdd\u6846\u4e2d\u8bbe\u7f6e\u597d\u76f8\u5173\u9009\u9879\u4ee5\u540e\uff0c\u5355\u51fb\u201c\u786e\u5b9a\u201d\u6309\u94ae\uff0c\u6253\u5f00\u201c\u6e10\u53d8\u586b\u5145\u201d\u5bf9\u8bdd\u6846\uff0c\u5728\u8be5\u5bf9\u8bdd\u6846\u4e2d\u53ef\u4ee5\u8bbe\u7f6e\u6e10\u53d8\u7684\u989c\u8272\u3001\u6837\u5f0f\u3001\u89d2\u5ea6\u548c\u7f29\u653e\u7b49\uff0c\u5355\u51fb\u201c\u786e\u5b9a\u201d\u6309\u94ae\u540e\u5373\u53ef\u521b\u5efa\u4e00\u4e2a\u6e10\u53d8\u586b\u5145\u56fe\u5c42\u3002","title":"\u521b\u5efa\u6e10\u53d8\u586b\u5145\u56fe\u5c42"},{"location":"PS/PS7/#_10","text":"\u56fe\u6848\u586b\u5145\u56fe\u5c42\u53ef\u4ee5\u7528\u4e00\u79cd\u56fe\u6848\u586b\u5145\u56fe\u5c42\uff0c\u5e76\u5e26\u6709\u4e00\u4e2a\u56fe\u5c42\u8499\u7248\u3002\u6267\u884c\u201c\u56fe\u5c42 > \u65b0\u5efa\u586b\u5145\u56fe\u5c42 > \u56fe\u6848\u201d\u547d\u4ee4\uff0c\u5728\u201c\u65b0\u5efa\u56fe\u5c42\u201d\u5bf9\u8bdd\u6846\u4e2d\u8bbe\u7f6e\u597d\u76f8\u5173\u9009\u9879\u4ee5\u540e\uff0c\u5355\u51fb\u201c\u786e\u5b9a\u201d\u6309\u94ae\uff0c\u6253\u5f00\u201c\u56fe\u6848\u586b\u5145\u201d\u5bf9\u8bdd\u6846\uff0c\u5728\u8be5\u5bf9\u8bdd\u6846\u4e2d\u53ef\u4ee5\u9009\u62e9\u4e00\u79cd\u56fe\u6848\uff0c\u5e76\u4e14\u53ef\u4ee5\u8bbe\u7f6e\u56fe\u6848\u7684\u7f29\u653e\u6bd4\u4f8b\u7b49\uff0c\u5355\u51fb\u201c\u786e\u5b9a\u201d\u6309\u94ae\u540e\u5373\u53ef\u521b\u5efa\u4e00\u4e2a\u56fe\u6848\u586b\u5145\u56fe\u5c42\u3002","title":"\u521b\u5efa\u56fe\u6848\u586b\u5145\u56fe\u5c42"},{"location":"PS/PS7/#_11","text":"","title":"\u56fe\u5c42\u7684\u57fa\u672c\u64cd\u4f5c"},{"location":"PS/PS7/#_12","text":"","title":"\u9009\u62e9/\u53d6\u6d88\u9009\u62e9\u56fe\u5c42"},{"location":"PS/PS7/#_13","text":"\u5148\u9009\u62e9\u4f4d\u4e8e\u8fde\u7eed\u56fe\u5c42\u9876\u7aef\u7684\u56fe\u5c42\uff0c\u7136\u540e\u6309\u4f4f Shift \u952e\u5355\u51fb\u4f4d\u4e8e\u8fde\u7eed\u56fe\u5c42\u5e95\u7aef\u7684\u56fe\u5c42\uff0c\u5373\u53ef\u9009\u62e9\u8fd9\u4e9b\u8fde\u7eed\u7684\u56fe\u5c42","title":"\u9009\u62e9\u591a\u4e2a\u8fde\u7eed\u7684\u56fe\u5c42"},{"location":"PS/PS7/#_14","text":"\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\u56fe\u5c42\uff0c\u7136\u540e\u6309\u4f4f Ctrl \u952e\u5355\u51fb\u5176\u4ed6\u56fe\u5c42\u7684\u540d\u79f0\u3002","title":"\u9009\u62e9\u591a\u4e2a\u975e\u8fde\u7eed\u7684\u56fe\u5c42"},{"location":"PS/PS7/#_15","text":"\u6267\u884c\u201c\u9009\u62e9 > \u6240\u6709\u56fe\u5c42\u201d\u547d\u4ee4\u6216\u6309 Alt+Ctrl+A \u7ec4\u5408\u952e\u3002\u4f7f\u7528\u8be5\u547d\u4ee4\u53ea\u80fd\u9009\u62e9\u201c\u80cc\u666f\u201d\u56fe\u5c42\u4ee5\u5916\u7684\u56fe\u5c42\uff0c\u5982\u679c\u8981\u9009\u62e9\u5305\u542b\u201c\u80cc\u666f\u201d\u56fe\u5c42\u5728\u5185\u7684\u6240\u6709\u56fe\u5c42\uff0c\u53ef\u4ee5\u6309\u4f4f Ctrl \u952e\u5355\u51fb\u201c\u80cc\u666f\u201d\u56fe\u5c42\u7684\u540d\u79f0\u3002","title":"\u9009\u62e9\u6240\u6709\u56fe\u5c42"},{"location":"PS/PS7/#_16","text":"\u5f53\u753b\u5e03\u4e2d\u5305\u542b\u5f88\u591a\u76f8\u4e92\u91cd\u53e0\u7684\u56fe\u5c42\uff0c\u96be\u4ee5\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u8fdb\u884c\u8fa8\u522b\u65f6\uff0c\u53ef\u4ee5\u5728\u4f7f\u7528\u201c\u79fb\u52a8\u5de5\u5177\u201d\u72b6\u6001\u4e0b\u53f3\u51fb\u76ee\u6807\u56fe\u50cf\u7684\u4f4d\u7f6e\uff0c\u5728\u663e\u793a\u51fa\u7684\u5f53\u524d\u91cd\u53e0\u56fe\u5c42\u5217\u8868\u4e2d\u9009\u62e9\u9700\u8981\u7684\u56fe\u5c42\u3002","title":"\u5728\u753b\u5e03\u4e2d\u5feb\u901f\u9009\u62e9\u67d0\u4e00\u56fe\u5c42"},{"location":"PS/PS7/#_17","text":"\u5982\u679c\u8981\u9009\u62e9\u94fe\u63a5\u7684\u56fe\u5c42\uff0c\u53ef\u4ee5\u5148\u9009\u62e9\u4e00\u4e2a\u94fe\u63a5\u56fe\u5c42\uff0c\u7136\u540e\u6267\u884c\u201c\u56fe\u5c42 > \u9009\u62e9\u94fe\u63a5\u56fe\u5c42\u201d\u547d\u4ee4\u3002","title":"\u5feb\u901f\u9009\u62e9\u94fe\u63a5\u7684\u56fe\u5c42"},{"location":"PS/PS7/#_18","text":"\u5982\u679c\u4e0d\u60f3\u9009\u62e9\u4efb\u4f55\u56fe\u5c42\uff0c\u53ef\u4ee5\u6267\u884c\u201c\u9009\u62e9 > \u53d6\u6d88\u9009\u62e9\u56fe\u5c42\u201d\u547d\u4ee4\u3002\u53e6\u5916\uff0c\u4e5f\u53ef\u4ee5\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u6700\u4e0b\u9762\u7684\u7a7a\u767d\u5904\u5355\u51fb\uff0c\u5373\u53ef\u53d6\u6d88\u9009\u62e9\u6240\u6709\u56fe\u5c42\u3002","title":"\u53d6\u6d88\u9009\u62e9\u56fe\u5c42"},{"location":"PS/PS7/#_19","text":"\u5982\u679c\u8981\u6539\u53d8\u56fe\u5c42\u7684\u6392\u5217\u987a\u5e8f\uff0c\u53ef\u4ee5\u5c06\u8be5\u56fe\u5c42\u62d6\u62fd\u5230\u53e6\u5916\u4e00\u4e2a\u56fe\u5c42\u7684\u4e0a\u9762\u6216\u4e0b\u9762\u3002","title":"\u8c03\u6574\u56fe\u5c42\u7684\u6392\u5217\u987a\u5e8f"},{"location":"PS/PS7/#_20","text":"","title":"\u4f7f\u7528\u56fe\u5c42\u7ec4\u7ba1\u7406\u56fe\u5c42"},{"location":"PS/PS7/#_21","text":"\u5355\u51fb\u201c\u56fe\u5c42\u201d\u9762\u677f\u5e95\u90e8\u7684\u201c\u521b\u5efa\u65b0\u7ec4\u201d\u6309\u94ae\uff0c\u5373\u53ef\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u521b\u5efa\u65b0\u7684\u56fe\u5c42\u7ec4\u3002\u4e5f\u53ef\u4ee5\u4ece\u56fe\u5c42\u5efa\u7acb\u56fe\u5c42\u7ec4\u3002\u9996\u5148\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u6309\u4f4fAlt \u952e\u9009\u62e9\u9700\u8981\u7684\u56fe\u5c42\uff0c\u7136\u540e\u5355\u51fb\u5e76\u62d6\u62fd\u81f3\u201c\u65b0\u5efa\u7ec4\u201d\u6309\u94ae\u4e0a\u3002","title":"\u521b\u5efa\u56fe\u5c42\u7ec4"},{"location":"PS/PS7/#_22","text":"\u9009\u62e9\u8981\u8fdb\u884c\u590d\u5236\u7684\u56fe\u5c42\uff0c\u7136\u540e\u5728\u5176\u540d\u79f0\u4e0a\u5355\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u63a5\u7740\u5728\u5f39\u51fa\u7684\u83dc\u5355\u4e2d\u9009\u62e9\u201c\u590d\u5236\u56fe\u5c42\u201d\u547d\u4ee4\uff0c\u6b64\u65f6\u5f39\u51fa\u201c\u590d\u5236\u56fe\u5c42\u201d\u5bf9\u8bdd\u6846\uff0c\u5355\u51fb\u201c\u786e\u5b9a\u201d\u6309\u94ae\u5373\u53ef\u3002","title":"\u590d\u5236\u56fe\u5c42"},{"location":"PS/PS7/#_23","text":"\u5982\u679c\u8981\u5feb\u901f\u5220\u9664\u56fe\u5c42\uff0c\u53ef\u4ee5\u5c06\u5176\u62d6\u62fd\u5230\u201c\u5220\u9664\u56fe\u5c42\u201d\u6309\u94ae \u4e0a\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6309 Delete \u952e\u3002\uff09\u6267\u884c\u201c\u56fe\u5c42 > \u5220\u9664 > \u9690\u85cf\u56fe\u5c42\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u5220\u9664\u6240\u6709\u9690\u85cf\u7684\u56fe\u5c42\u3002","title":"\u5220\u9664\u56fe\u5c42"},{"location":"PS/PS7/#_24","text":"\u56fe\u5c42\u7f29\u89c8\u56fe\u5de6\u4fa7\u7684\u56fe\u6807\u53ef\u7528\u6765\u63a7\u5236\u56fe\u5c42\u7684\u53ef\u89c1\u6027","title":"\u663e\u793a\u4e0e\u9690\u85cf\u56fe\u5c42/\u56fe\u5c42\u7ec4"},{"location":"PS/PS7/#_25","text":"\u9009\u62e9\u9700\u8981\u8fdb\u884c\u94fe\u63a5\u7684\u56fe\u5c42\uff08\u4e24\u4e2a\u6216\u591a\u4e2a\u56fe\u5c42\uff09\u3002\u7136\u540e\u6267\u884c\u201c\u56fe\u5c42 > \u94fe\u63a5\u56fe\u5c42\u201d\u547d\u4ee4\u6216\u5355\u51fb\u56fe \u5c42\u9762\u677f\u5e95\u90e8\u7684\u201c\u94fe\u63a5\u56fe\u5c42\u201d\u6309\u94ae \uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u56fe\u5c42\u94fe\u63a5\u8d77\u6765\u3002","title":"\u94fe\u63a5\u56fe\u5c42\u4e0e\u53d6\u6d88\u94fe\u63a5"},{"location":"PS/PS7/#_26","text":"\u5728\u56fe\u5c42\u8f83\u591a\u7684\u6587\u6863\u4e2d\uff0c\u4fee\u6539\u56fe\u5c42\u540d\u79f0\u53ca\u5176\u989c\u8272\u6709\u52a9\u4e8e\u5feb\u901f\u627e\u5230\u76f8\u5e94\u7684\u56fe\u5c42\u3002\u6267\u884c\u201c\u56fe\u5c42 > \u91cd\u547d\u540d\u56fe\u5c42\u201d\u547d\u4ee4\uff0c\u6216\u5728\u56fe\u5c42\u540d\u79f0\u4e0a\u53cc\u51fb\uff0c\u6fc0\u6d3b\u540d\u79f0\u6587\u672c\u6846\uff0c\u7136\u540e\u8f93\u5165\u540d\u79f0\uff0c\u4e5f\u53ef\u4ee5\u4fee\u6539\u56fe\u5c42\u540d\u79f0\u3002 \u66f4\u6539\u56fe\u5c42\u989c\u8272\u4e5f\u662f\u4e00\u79cd\u4fbf\u4e8e\u5feb\u901f\u627e\u5230\u56fe\u5c42\u7684\u65b9\u6cd5\uff0c\u5728\u56fe\u5c42\u4e0a\u5355\u51fb\u53f3\u952e\uff0c\u5728\u5f39\u51fa\u83dc\u5355\u7684\u4e0b\u534a\u90e8\u5206\u53ef\u4ee5\u770b\u5230\u591a\u79cd\u989c\u8272\u540d\u79f0\uff0c\u5355\u51fb\u5176\u4e2d\u4e00\u79cd\u5373\u53ef\u66f4\u6539\u5f53\u524d\u56fe\u5c42\u524d\u65b9\u7684\u8272\u5757\u6548\u679c\uff0c\u9009\u62e9\u201c\u65e0\u989c\u8272\u201d\u5373\u53ef\u53bb\u9664\u989c\u8272\u6548\u679c\u3002","title":"\u4fee\u6539\u56fe\u5c42\u7684\u540d\u79f0\u4e0e\u989c\u8272"},{"location":"PS/PS7/#_27","text":"\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u7684\u4e0a\u534a\u90e8\u5206\u6709\u591a\u4e2a\u9501\u5b9a\u6309\u94ae\uff0c\u9501\u5b9a\u6309\u94ae\u4e3b\u8981\u7528\u6765\u4fdd\u62a4\u56fe\u5c42\u900f\u660e\u533a\u57df\u3001\u56fe\u50cf\u50cf\u7d20\u548c\u4f4d\u7f6e\u7684\u9501\u5b9a\u529f\u80fd\uff0c \u4f7f\u7528\u8fd9\u4e9b\u6309\u94ae\u53ef\u4ee5\u6839\u636e\u9700\u8981\u5b8c\u5168\u9501\u5b9a\u6216\u90e8\u5206\u9501\u5b9a\u56fe\u5c42\uff0c\u4ee5\u514d\u56e0\u64cd\u4f5c\u5931\u8bef\u800c\u5bf9\u56fe\u5c42\u7684\u5185\u5bb9\u9020\u6210\u7834\u574f\u3002","title":"\u9501\u5b9a\u56fe\u5c42"},{"location":"PS/PS7/#_28","text":"\u6587\u5b57\u56fe\u5c42\u30013D \u56fe\u5c42\u3001\u5f62\u72b6\u56fe\u5c42\u3001\u77e2\u91cf\u8499\u7248\u56fe\u5c42\u6216\u667a\u80fd\u5bf9\u8c61\u7b49\u5305\u542b\u77e2\u91cf\u6570\u636e\u7684\u56fe\u5c42\u662f\u4e0d\u80fd\u591f\u76f4\u63a5\u8fdb\u884c\u7f16\u8f91\u7684\uff0c\u6240\u4ee5\u9700\u8981\u5148\u5c06\u5176\u6805\u683c\u5316\u4ee5\u540e\u624d\u80fd\u8fdb\u884c\u76f8\u5e94\u7684\u7f16\u8f91\u3002\u9009\u62e9\u9700\u8981\u6805\u683c\u5316\u7684\u56fe\u5c42\u3002\u7136\u540e\u6267\u884c\u201c\u56fe\u5c42 > \u6805\u683c\u5316\u201d\u83dc\u5355\u4e0b\u7684\u5b50\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u76f8\u5e94\u7684\u56fe\u5c42\u6805\u683c\u5316\u3002\u6216\u8005\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u9009\u4e2d\u8be5\u56fe\u5c42\u5e76\u5355\u51fb\u53f3\u952e\u6267\u884c\u6805\u683c\u5316\u547d\u4ee4\u3002","title":"\u6805\u683c\u5316\u56fe\u5c42\u5185\u5bb9"},{"location":"PS/PS7/#_29","text":"","title":"\u5bf9\u9f50\u4e0e\u5206\u5e03\u56fe\u5c42"},{"location":"PS/PS7/#_30","text":"\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u9009\u62e9\u591a\u4e2a\u56fe\u5c42\uff0c\u7136\u540e\u6267\u884c\u201c\u56fe\u5c42 > \u5bf9\u9f50\u201d\u83dc\u5355\u4e0b\u7684\u5b50\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u591a\u4e2a\u56fe\u5c42\u8fdb\u884c\u5bf9\u9f50\u3002","title":"\u5bf9\u9f50\u56fe\u5c42"},{"location":"PS/PS7/#_31","text":"\u5f53\u753b\u9762\u4e2d\u5b58\u5728\u9009\u533a\u65f6\uff0c\u9009\u62e9\u4e00\u4e2a\u56fe\u5c42\uff0c\u6267\u884c\u201c\u56fe\u5c42 > \u5c06\u56fe\u5c42\u4e0e\u9009\u533a\u5bf9\u9f50\u201d\u547d\u4ee4\uff0c\u5728\u5b50\u83dc\u5355\u4e2d\u5373\u53ef\u9009\u62e9\u4e00\u79cd\u5bf9\u9f50\u65b9\u6cd5\uff0c\u6240\u9009\u56fe\u5c42\u5373\u53ef\u4ee5\u9009\u62e9\u7684\u65b9\u6cd5\u8fdb\u884c\u5bf9\u9f50\u3002","title":"\u5c06\u56fe\u5c42\u4e0e\u9009\u533a\u5bf9\u9f50"},{"location":"PS/PS7/#_32","text":"\u5f53\u4e00\u4e2a\u6587\u6863\u4e2d\u5305\u542b\u591a\u4e2a\u56fe\u5c42\uff08\u81f3\u5c11\u4e3a 3 \u4e2a\u56fe\u5c42\uff0c\u4e14\u201c\u80cc\u666f\u201d\u56fe\u5c42\u9664\u5916\uff09\u65f6\uff0c\u6267\u884c\u201c\u56fe\u5c42 > \u5206\u5e03\u201d\u83dc\u5355\u4e0b\u7684\u5b50\u547d\u4ee4\u53ef\u5c06\u8fd9\u4e9b\u56fe\u5c42\u6309\u7167\u4e00\u5b9a\u7684\u89c4\u5f8b\u5747\u5300\u5206\u5e03\u3002","title":"\u5206\u5e03\u56fe\u5c42"},{"location":"PS/PS7/#_33","text":"","title":"\u4f7f\u7528\u56fe\u5c42\u7ec4\u7ba1\u7406\u56fe\u5c42"},{"location":"PS/PS7/#_34","text":"1\u3001\u9009\u62e9\u4e00\u4e2a\u6216\u591a\u4e2a\u56fe\u5c42\uff0c\u7136\u540e\u5c06\u5176\u62d6\u62fd\u5230\u56fe\u5c42\u7ec4\u5185\uff0c\u5c31\u53ef\u4ee5\u5c06\u5176\u79fb\u5165\u5230\u8be5\u7ec4\u4e2d\u3002 2\u3001\u5c06\u56fe\u5c42\u7ec4\u4e2d\u7684\u56fe\u5c42\u62d6\u62fd\u5230\u7ec4\u5916\uff0c\u5c31\u53ef\u4ee5\u5c06\u5176\u4ece\u56fe\u5c42\u7ec4\u4e2d\u79fb\u51fa\u3002","title":"\u5c06\u56fe\u5c42\u79fb\u5165\u6216\u79fb\u51fa\u56fe\u5c42\u7ec4"},{"location":"PS/PS7/#_35","text":"","title":"\u81ea\u52a8\u5bf9\u9f50\u4e0e\u81ea\u52a8\u6df7\u5408"},{"location":"PS/PS7/#_36","text":"","title":"\u81ea\u52a8\u5bf9\u9f50\u56fe\u5c42"},{"location":"PS/PS7/#_37","text":"\u5229\u7528\u201c\u81ea\u52a8\u5bf9\u9f50\u56fe\u5c42\u201d\u547d\u4ee4\uff0c\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u56fe\u5c42\u4e2d\u7684\u76f8\u4f3c\u5185\u5bb9\uff08\u5982\u89d2\u548c\u8fb9\uff09\u81ea\u52a8\u5bf9\u9f50\u56fe\u5c42\u3002 \u5f88\u591a\u65f6\u5019\u4e3a\u4e86\u8282\u7ea6\u6210\u672c\uff0c\u62cd\u6444\u5168\u666f\u56fe\u50cf\u65f6\u7ecf\u5e38\u9700\u8981\u62cd\u6444\u591a\u5f20\u56fe\u7247\uff0c\u7136\u540e\u5728\u540e\u671f\u8f6f\u4ef6\u4e2d\u8fdb\u884c\u63a5\u63a5\u3002 \u64cd\u4f5c\u65b9\u6cd5\uff1a\u6267\u884c\u201c\u7f16\u8f91>\u81ea\u52a8\u5bf9\u9f50\u56fe\u5c42\u201d\u547d\u4ee4 \u201c\u5168\u666f\u56fe\u201d\uff1a\u5c06\u91cd\u53e0\u7684\u56fe\u5c42\u6df7\u5408\u6210\u5168\u666f\u56fe\u3002 \u201c\u5806\u53e0\u56fe\u50cf\u201d\uff1a\u6df7\u5408\u6bcf\u4e2a\u76f8\u5e94\u533a\u57df\u4e2d\u7684\u6700\u4f73\u7ec6\u8282\u3002\u8be5\u9009\u9879\u6700\u9002\u5408\u4e8e\u5df2\u5bf9\u9f50\u7684\u56fe\u5c42\u3002","title":"\u8bf4\u660e"},{"location":"PS/PS7/#_38","text":"\u81ea\u52a8\u5bf9\u9f50\u5236\u4f5c\u5168\u666f\u56fe","title":"\u81ea\u52a8\u5bf9\u9f50\u56fe\u5c42\u7ec3\u4e60"},{"location":"PS/PS7/#_39","text":"","title":"\u81ea\u52a8\u6df7\u5408\u56fe\u5c42"},{"location":"PS/PS7/#_40","text":"\u81ea\u52a8\u6df7\u5408\u56fe\u5c42\u201d\u547d\u4ee4\uff0c\u4ec5\u9002\u7528 \u4e8eRGB\u6216\u7070\u5ea6\u56fe\u50cf\uff0c\u4e0d\u9002\u7528\u4e8e\u667a\u80fd\u5bf9\u8c61\u3001\u89c6\u9891\u56fe\u5c42\u30013D\u56fe\u5c42\u3001\u6216\u80cc\u666f\u56fe\u5c42\u3002 \u9009\u62e9\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u7684\u56fe\u5c42\uff0c\u7136\u540e\u6267\u884c\u201c\u7f16\u8f91>\u81ea\u52a8\u6df7\u5408\u56fe\u5c42\u201d\u547d\u4ee4\uff0c\u6253\u5f00\u201c\u81ea\u52a8\u6df7\u5408\u56fe\u5c42\u201d\u5bf9\u8bdd\u6846\uff0c\u8bbe\u7f6e\u5408\u9002\u7684\u6df7\u5408\u65b9\u5f0f\uff0c\u5373\u53ef\u5c06\u591a\u4e2a\u56fe\u5c42\u8fdb\u884c\u6df7\u5408\u3002","title":"\u8bf4\u660e"},{"location":"PS/PS7/#_41","text":"\u4f7f\u7528\u81ea\u52a8\u6df7\u5408\u547d\u4ee4\u5408\u6210\u56fe\u50cf \u5236\u4f5c\u65e0\u666f\u6df1\u7684\u98ce\u666f\u7167\u7247","title":"\u81ea\u52a8\u6df7\u5408\u56fe\u5c42\u7ec3\u4e60"},{"location":"PS/PS7/#_42","text":"","title":"\u5408\u5e76\u4e0e\u76d6\u5370\u56fe\u5c42"},{"location":"PS/PS7/#_43","text":"\u5982\u679c\u8981\u5c06\u591a\u4e2a\u56fe\u5c42\u5408\u5e76\u4e3a\u4e00\u4e2a\u56fe\u5c42\uff0c\u53ef\u4ee5\u5728\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u9009\u62e9\u8981\u5408\u5e76\u7684\u56fe\u5c42\uff0c\u7136\u540e\u6267\u884c\u201c\u56fe\u5c42 > \u5408\u5e76\u56fe\u5c42\u201d\u547d\u4ee4\u6216\u6309 Ctrl+E \u7ec4\u5408\u952e\uff0c\u5408\u5e76\u4ee5\u540e\u7684\u56fe\u5c42\u4f7f\u7528\u4e0a\u9762\u56fe\u5c42\u7684\u540d\u79f0\u3002","title":"\u5408\u5e76\u56fe\u5c42"},{"location":"PS/PS7/#_44","text":"\u6267\u884c\u201c\u56fe\u5c42 > \u5411\u4e0b\u5408\u5e76\u201d\u547d\u4ee4\u6216\u6309 Ctrl+E \u7ec4\u5408\u952e\uff0c\u53ef\u5c06\u4e00\u4e2a\u56fe\u5c42\u4e0e\u5b83\u4e0b\u9762\u7684\u56fe\u5c42\u5408\u5e76\u3002\u5408\u5e76\u4ee5\u540e\u7684\u56fe\u5c42\u4f7f\u7528\u4e0b\u9762\u56fe\u5c42\u7684\u540d\u79f0\u3002","title":"\u5411\u4e0b\u5408\u5e76\u56fe\u5c42"},{"location":"PS/PS7/#_45","text":"\u6267\u884c\u201c\u56fe\u5c42 > \u5408\u5e76\u53ef\u89c1\u56fe\u5c42\u201d\u547d\u4ee4\u6216\u6309 Ctrl+Shift+E \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u5408\u5e76\u201c\u56fe\u5c42\u201d\u9762\u677f\u4e2d\u7684\u6240\u6709\u53ef\u89c1\u56fe\u5c42\u3002","title":"\u5408\u5e76\u53ef\u89c1\u56fe\u5c42"},{"location":"PS/PS7/#_46","text":"\u6267\u884c\u201c\u56fe\u5c42 > \u62fc\u5408\u56fe\u50cf\u201d\u547d\u4ee4\u53ef\u4ee5\u5c06\u6240\u6709\u56fe\u5c42\u90fd\u62fc\u5408\u5230\u201c\u80cc\u666f\u201d\u56fe\u5c42\u4e2d\u3002\u5982\u679c\u6709\u9690\u85cf\u7684\u56fe\u5c42\uff0c\u5219\u4f1a\u5f39\u51fa\u4e00\u4e2a\u63d0\u793a\u5bf9\u8bdd\u6846\uff0c\u63d0\u9192\u7528\u6237\u662f\u5426\u8981\u6254\u6389\u9690\u85cf\u7684\u56fe\u5c42\u3002","title":"\u62fc\u5408\u56fe\u50cf"},{"location":"PS/PS7/#_47","text":"\u76d6\u5370\u662f\u4e00\u79cd\u5408\u5e76\u56fe\u5c42\u7684\u7279\u6b8a\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u591a\u4e2a\u56fe\u5c42\u7684\u5185\u5bb9\u5408\u5e76\u5230\u4e00\u4e2a\u65b0\u7684\u56fe\u5c42\u4e2d\uff0c\u540c\u65f6\u4fdd\u6301\u5176\u4ed6\u56fe\u5c42\u4e0d\u53d8\u3002\u76d6\u5370\u56fe\u5c42\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u7ecf\u5e38\u7528\u5230\uff0c\u662f\u4e00\u79cd\u5f88\u5b9e\u7528\u7684\u56fe\u5c42\u5408\u5e76\u65b9\u6cd5\u3002 \u5411\u4e0b\u76d6\u5370\u56fe\u5c42\uff1a\u9009\u62e9\u4e00\u4e2a\u56fe\u5c42\uff0c\u7136\u540e\u6309 Ctrl+Alt+E \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u5c06\u8be5\u56fe\u5c42\u4e2d\u7684\u56fe\u50cf\u76d6\u5370\u5230\u4e0b\u9762\u7684\u56fe\u5c42\u4e2d\uff0c\u539f\u59cb\u56fe\u5c42\u7684\u5185\u5bb9\u4fdd\u6301\u4e0d\u53d8\u3002 \u76d6\u5370\u591a\u4e2a\u56fe\u5c42\uff1a\u9009\u62e9\u591a\u4e2a\u56fe\u5c42\u5e76\u4f7f\u7528\u76d6\u5370\u56fe\u5c42\u5feb\u6377\u952e Ctrl+Alt+E \uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u56fe\u5c42\u4e2d\u7684\u56fe\u50cf\u76d6\u5370\u5230\u4e00\u4e2a\u65b0\u7684\u56fe\u5c42\u4e2d\uff0c\u539f\u59cb\u56fe\u5c42\u7684\u5185\u5bb9\u4fdd\u6301\u4e0d\u53d8\u3002 \u76d6\u5370\u53ef\u89c1\u56fe\u5c42\uff1a\u6309 Ctrl+Shift+Alt+E \u7ec4\u5408\u952e\uff0c\u53ef\u4ee5\u5c06\u6240\u6709\u53ef\u89c1\u56fe\u5c42\u76d6\u5370\u5230\u4e00\u4e2a\u65b0\u7684\u56fe\u5c42\u4e2d\u3002 \u76d6\u5370\u56fe\u5c42\u7ec4\uff1a\u9009\u62e9\u56fe\u5c42\u7ec4\uff0c\u7136\u540e\u4f7f\u7528\u5feb\u6377\u952e Ctrl+Alt+E \uff0c\u53ef\u4ee5\u5c06\u7ec4\u4e2d\u6240\u6709\u56fe\u5c42\u5185\u5bb9\u76d6\u5370\u5230\u4e00\u4e2a\u65b0\u7684\u56fe\u5c42\u4e2d\uff0c\u539f\u59cb\u56fe\u5c42\u7ec4\u4e2d\u7684\u5185\u5bb9\u4fdd\u6301\u4e0d\u53d8\u3002","title":"\u76d6\u5370\u56fe\u5c42"},{"location":"PS/PS7/#_48","text":"","title":"\u667a\u80fd\u5bf9\u8c61\u56fe\u5c42"},{"location":"PS/PS7/#_49","text":"\u5728Photoshop\u4e2d\uff0c\u667a\u80fd\u5bf9\u8c61\u53ef\u4ee5\u770b\u4f5c\u5d4c\u5165\u5f53\u524d\u6587\u4ef6\u7684\u4e00\u4e2a\u72ec\u7acb\u6587\u4ef6\uff0c\u5b83\u53ef\u4ee5\u5305\u542b\u4f4d\u56fe\uff0c\u4e5f\u53ef\u4ee5\u5305\u542bIllustrator\u4e2d\u521b\u5efa\u7684\u77e2\u91cf\u56fe\u5f62\u3002\u800c\u4e14\u5728\u9886\u56de\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u7834\u574f\u667a\u80fd\u5bf9\u8c61\u7684\u539f\u59cb\u6570\u636e\uff0c\u56e0\u6b64\u5bf9\u667a\u80fd\u5bf9\u8c61\u56fe\u5c42\u6240\u6267\u884c\u7684\u64cd\u4f5c\u90fd\u662f\u975e\u7834\u574f\u6027\u64cd\u4f5c\u3002","title":"\u8bf4\u660e"},{"location":"PS/PS7/#_50","text":"\u7f16\u8f91\u667a\u80fd\u5bf9\u8c61 \u66ff\u6362\u667a\u80fd\u5bf9\u8c61\u5185\u5bb9","title":"\u667a\u80fd\u5bf9\u8c61\u56fe\u5c42\u7ec3\u4e60"},{"location":"PS/PS8/","text":"","title":"PS8"},{"location":"PS/PS9/","text":"","title":"PS9"},{"location":"PS/base/","text":"\u5e94\u7528\u9886\u57df\u4e0e\u6280\u672f\u63ed\u79d8 \u6444\u5f71\u540e\u671f\u5e94\u7528 Photoshop\u4ea7\u751f\u7684\u6839\u672c\u539f\u56e0\u5c31\u662f\u8981\u89e3\u51b3\u56fe\u50cf\u660e\u6697\u7684\u8c03\u6574\u95ee\u9898\u3002\u7ecf\u8fc7\u8fd9\u4e48\u591a\u5e74\u7684\u53d1\u5c55\uff0c\u5b83\u5728\u6444\u5f71\u540e\u671f\u65b9\u9762\u7684\u5e94\u7528\uff0c\u5df2\u7ecf\u8fbe\u5230\u4e86\u51fa\u795e\u5165\u5316\u7684\u5883\u754c\u3002 \u5e73\u9762\u8bbe\u8ba1\u5e94\u7528 \u5728\u5e73\u9762\u8bbe\u8ba1\u5de5\u4f5c\u4e2d\uff0c\u5bf9\u4e8e\u9875\u9762\u5185\u5bb9\u76f8\u5bf9\u8f83\u5c11\uff0c\u56fe\u50cf\u7f16\u8f91\u548c\u8c03\u6574\u5e94\u7528\u76f8\u5bf9\u8f83\u591a\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528Photoshop\u8f6f\u4ef6\u8fdb\u884c\u5e73\u9762\u8bbe\u8ba1\u548c\u6392\u7248\u64cd\u4f5c\uff0c\u64cd\u4f5c\u7b80\u5355\uff0c\u6548\u679c\u76f4\u89c2\u3002 \u7279\u6548\u5408\u6210\u5e94\u7528 \u968f\u7740\u5e73\u9762\u8bbe\u8ba1\u7684\u4e0d\u65ad\u53d1\u5c55\u548c\u5e94\u7528\u65b9\u9762\u7684\u5ef6\u4f38\uff0c\u7ed3\u5408\u56fe\u5c42\u8499\u7248\u3001\u56fe\u5c42\u6837\u5f0f\u548c\u56fe\u5c42\u6df7\u5408\u6a21\u5f0f\u7b49\u65b9\u9762\uff0c\u53ef\u4ee5\u8fdb\u884c\u4e0d\u540c\u7684\u7279\u6548\u5408\u6210\uff0c\u5e94\u7528\u4e8e\u6e38\u620f\u3001\u7535\u5f71\u7b49\u7684\u6d77\u62a5\u8bbe\u8ba1\u3002 \u6548\u679c\u56fe\u540e\u671f\u5904\u7406\u5e94\u7528 \u72ec\u7279\u7684\u8272\u5f69\u548c\u660e\u6697\u8c03\u8282\u65b9\u5f0f\uff0c\u65b9\u4fbf\u7684\u56fe\u5c42\u6df7\u5408\u64cd\u4f5c\uff0c\u8ba9Photoshop\u8f6f\u4ef6\u5728\u5ba4\u5185\u3001\u5916\u6548\u679c\u56fe\u548c\u4ea7\u54c1\u8bbe\u8ba1\u6548\u679c\u56fe\u7684\u540e\u671f\u5904\u7406\u65b9\u9762\u53d1\u6325\u4e86\u6781\u5927\u7684\u4f5c\u7528\u3002 \u56fe\u50cf\u5904\u7406\u57fa\u7840\u77e5\u8bc6 \u4f4d\u56fe\u56fe\u50cf \u4f4d\u56fe\u4e5f\u79f0\u6805\u683c\u56fe\u50cf\uff0c\u662f\u7531\u50cf\u7d20\u6784\u6210\u7684\u3002\u6bcf\u4e2a\u50cf\u7d20\u88ab\u5206\u914d\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u4f4d\u7f6e\u548c\u989c\u8272\u503c\u3002\u4f4d\u56fe\u53ef\u4ee5\u5f88\u597d\u5730\u53cd\u6620\u56fe\u50cf\u660e\u6697\u7684\u53d8\u5316\u3001\u590d\u6742\u7684\u573a\u666f\u548c\u989c\u8272\u3002\u5b83\u7684\u7279\u70b9\u662f\u80fd\u8868\u73b0\u903c\u771f\u7684\u56fe\u50cf\u6548\u679c\uff0c\u4f46\u6587\u4ef6\u6bd4\u8f83\u5927\uff0c\u5e76\u4e14\u56fe\u50cf\u5728\u7f29\u653e\u65f6\u6e05\u6670\u5ea6\u4f1a\u964d\u4f4e\u5e76\u51fa\u73b0\u952f\u9f7f\u3002 \u77e2\u91cf\u56fe\u50cf \u77e2\u91cf\u56fe\u4e5f\u79f0\u5411\u91cf\u56fe\uff0c\u4f7f\u7528\u76f4\u7ebf\u548c\u66f2\u7ebf\u6765\u63cf\u8ff0\u56fe\u5f62\uff0c\u8fd9\u4e9b\u56fe\u5f62\u7684\u5143\u7d20\u662f\u4e00\u4e9b\u70b9\u3001\u7ebf\u3001\u77e9\u5f62\u3001\u591a\u8fb9\u5f62\u3001\u5706\u548c\u5f27\u7ebf\u7b49\u3002\u5b83\u4eec\u90fd\u662f\u901a\u8fc7\u6570\u5b66\u516c\u5f0f\u8ba1\u7b97\u83b7\u5f97\u7684\uff0c\u6240\u4ee5\u77e2\u91cf\u56fe\u5f62\u6587\u4ef6\u4e00\u822c\u8f83\u5c0f\u3002\u77e2\u91cf\u56fe\u5f62\u7684\u4f18\u70b9\u662f\u65e0\u8bba\u653e\u5927\u3001\u7f29\u5c0f\u6216\u65cb\u8f6c\u7b49\u90fd\u4e0d\u4f1a\u5931\u771f\uff1b\u7f3a\u70b9\u662f\u96be\u4ee5\u8868\u73b0\u8272\u5f69\u5c42\u6b21\u4e30\u5bcc\u3001\u903c\u771f\u7684\u56fe\u50cf\u6548\u679c\uff0c\u800c\u4e14\u663e\u793a\u77e2\u91cf\u56fe\u4e5f\u9700\u8981\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4\u3002\u77e2\u91cf\u56fe\u5f62\u4e3b\u8981\u7528\u4e8e\u63d2\u56fe\u3001\u6587\u5b57\u548c\u53ef\u4ee5\u81ea\u7531\u7f29\u653e\u7684\u5fbd\u6807\u7b49\u56fe\u5f62\u3002\u4ee3\u8868\u6027\u7684\u77e2\u91cf\u8f6f\u4ef6\u6709 Adobe Illustrator\u3001CorelDraw\u3001CAD \u7b49\u3002 \u50cf\u7d20 \u50cf\u7d20\u662f\u6784\u6210\u4f4d\u56fe\u56fe\u50cf\u7684\u6700\u57fa\u672c\u5355\u4f4d\u3002\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e00\u5f20\u666e\u901a\u7684\u6570\u7801\u76f8\u7247\u5fc5\u7136\u6709\u8fde\u7eed\u7684\u8272\u76f8\u548c\u660e\u6697\u8fc7\u6e21\u3002\u5982\u679c\u628a\u6570\u5b57\u56fe\u50cf\u653e\u5927\u6570\u500d\uff0c\u5219\u4f1a\u53d1\u73b0\u8fd9\u4e9b\u8fde\u7eed\u8272\u8c03\u662f\u7531\u8bb8\u591a\u8272\u5f69\u76f8\u8fd1\u7684\u5c0f\u65b9\u70b9\u7ec4\u6210\uff0c\u8fd9\u4e9b\u5c0f\u65b9\u70b9\u5c31\u662f\u50cf\u7d20\u3002\u4e00\u4e2a\u50cf\u7d20\u53ea\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u989c\u8272\u3002\u5982\u679c\u8981\u5236\u4f5c\u6e10\u53d8\u7684\u8272\u5e26\u6548\u679c\uff0c\u50cf\u7d20\u4e0d\u591f\u662f\u80af\u5b9a\u5b9e\u73b0\u4e0d\u4e86\u7684\u3002 \u56fe\u50cf\u5206\u8fa8\u7387 \u56fe\u50cf\u5206\u8fa8\u7387\u7528\u4e8e\u63a7\u5236\u4f4d\u56fe\u56fe\u50cf\u4e2d\u7684\u7ec6\u8282\u7cbe\u7ec6\u5ea6\uff0c\u6d4b\u91cf\u5355\u4f4d\u662f\u50cf\u7d20 /\u82f1\u5bf8\uff08ppi\uff09\uff0c\u6bcf\u82f1\u5bf8\u7684\u50cf\u7d20\u8d8a\u591a\uff0c\u5206\u8fa8\u7387\u5c31\u8d8a\u9ad8\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u56fe\u50cf\u7684\u5206\u8fa8\u7387\u8d8a\u9ad8\uff0c\u5370\u5237\u51fa\u6765\u7684\u8d28\u91cf\u5c31\u8d8a\u597d\u3002 \u67e5\u770b\u56fe\u50cf\u7684\u5927\u5c0f\u548c\u5206\u8fa8\u7387 \u53ef\u4ee5\u901a\u8fc7\u6267\u884c\u201c\u56fe\u50cf > \u56fe\u50cf\u5927\u5c0f\u201d\u547d\u4ee4\u6253\u5f00\u201c\u56fe\u50cf\u5927\u5c0f\u201d\u5bf9\u8bdd\u6846\uff0c\u5728\u8be5\u5bf9\u8bdd\u6846\u4e2d\u5c31\u53ef\u4ee5\u67e5\u770b\u56fe\u50cf\u7684\u5927\u5c0f\u53ca\u5206\u8fa8\u7387\u3002 \u56fe\u50cf\u7684\u989c\u8272\u6a21\u5f0f \u56fe\u50cf\u7684\u989c\u8272\u6a21\u5f0f\u662f\u6307\u5c06\u67d0\u79cd\u989c\u8272\u8868\u73b0\u4e3a\u6570\u5b57\u5f62\u5f0f\u7684\u6a21\u578b\uff0c\u6216\u8005\u8bf4\u662f\u4e00\u79cd\u8bb0\u5f55\u56fe\u50cf\u989c\u8272\u7684\u65b9\u5f0f\u3002\u5728 Photoshop\u4e2d\uff0c\u989c\u8272\u6a21\u5f0f\u5206\u4e3a\u4f4d\u56fe\u3001\u7070\u5ea6\u3001\u53cc\u8272\u8c03\u3001\u7d22\u5f15\u989c\u8272\u3001RGB \u989c\u8272\u3001CMYK \u989c\u8272\u3001Lab \u989c\u8272\u548c\u591a\u901a\u9053 8 \u79cd\u6a21\u5f0f. \u56fe\u50cf\u7684\u4f4d\u6df1\u5ea6 \u4f4d\u6df1\u5ea6\u4e3b\u8981\u7528\u4e8e\u6307\u5b9a\u56fe\u50cf\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u53ef\u4ee5\u4f7f\u7528\u7684\u989c\u8272\u4fe1\u606f\u6570\u91cf\uff0c\u6bcf\u4e2a\u50cf\u7d20\u4f7f\u7528\u7684\u4fe1\u606f\u4f4d\u6570\u8d8a\u591a\uff0c\u53ef\u7528\u7684\u989c\u8272\u5c31\u8d8a\u591a\uff0c\u8272\u5f69\u7684\u8868\u73b0\u5c31\u8d8a\u903c\u771f\u3002\u6267\u884c\u201c\u56fe\u50cf > \u6a21\u5f0f\u201d\u547d\u4ee4\uff0c\u5b50\u83dc\u5355\u4e2d\u7684\u201c8 \u4f4d / \u901a\u9053\u201d\u3001\u201c16 \u4f4d / \u901a\u9053\u201d\u548c\u201c32 \u4f4d / \u901a\u9053\u201d3 \u4e2a\u5b50\u547d\u4ee4\u5c31\u662f\u901a\u5e38\u6240\u8bf4\u7684\u201c\u4f4d\u6df1\u5ea6\u201d\u3002 \u8272\u57df \u8272\u57df\u662f\u53e6\u4e00\u79cd\u5f62\u5f0f\u7684\u8272\u5f69\u6a21\u578b\uff0c\u5b83\u5177\u6709\u7279\u5b9a\u7684\u8272\u5f69\u8303\u56f4\u3002\u4f8b\u5982\uff0cRGB \u8272\u5f69\u6a21\u578b\u5c31\u6709\u597d\u51e0\u4e2a\u8272\u57df\uff0c\u5373 Adobe RGB\u3001sRGB \u548c ProPhoto RGB \u7b49\u3002\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u81ea\u7136\u754c\u4e2d\u53ef\u89c1\u5149\u8c31\u7684\u989c\u8272\u7ec4\u6210\u4e86\u6700\u5927\u7684\u8272\u57df\u7a7a\u95f4\uff0c\u8be5\u8272\u57df\u7a7a\u95f4\u4e2d\u5305\u542b\u4e86\u4eba\u773c\u6240\u80fd\u89c1\u5230\u7684\u6240\u6709\u989c\u8272\u3002 \u6ea2\u8272 \u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u5982\u679c\u663e\u793a\u7684\u989c\u8272\u8d85\u51fa\u4e86 CMYK \u989c\u8272\u6a21\u5f0f\u7684\u8272\u57df\u8303\u56f4\uff0c\u5c31\u4f1a\u51fa\u73b0\u201c\u6ea2\u8272\u201d\u3002\u5728 RGB \u989c\u8272\u6a21\u5f0f\u4e0b\uff0c\u5728\u56fe\u50cf\u7a97\u53e3\u4e2d\u5c06\u5149\u6807\u653e\u7f6e\u5728\u6ea2\u8272\u4e0a\uff0c\u201c\u4fe1\u606f\u201d\u9762\u677f\u4e2d\u7684 CMYK \u503c\u65c1\u4f1a\u51fa\u73b0\u4e00\u4e2a\u611f\u53f9\u53f7\u3002\u5f53\u7528\u6237\u9009\u62e9\u4e86\u4e00\u79cd\u6ea2\u8272\u65f6\uff0c\u201c\u62fe\u8272\u5668\u201d\u5bf9\u8bdd\u6846\u548c\u201c\u989c\u8272\u201d\u9762\u677f\u4e2d\u90fd\u4f1a\u51fa\u73b0\u4e00\u4e2a\u201c\u6ea2\u8272\u8b66\u544a\u201d\u56fe\u6807\uff08\u9ec4\u8272\u4e09\u89d2\u5f62\u611f\u53f9\u53f7\uff09 \uff0c\u540c\u65f6\u8272\u5757\u4e2d\u4f1a\u663e\u793a\u4e0e\u5f53\u524d\u6240\u9009\u989c\u8272\u6700\u63a5\u8fd1\u7684 CMYK \u989c\u8272\uff0c\u5355\u51fb\u5373\u53ef\u9009\u5b9a\u8272\u5757\u4e2d\u7684\u989c\u8272\u3002","title":"\u57fa\u7840\u77e5\u8bc6\u5165\u95e8"},{"location":"PS/base/#_1","text":"","title":"\u5e94\u7528\u9886\u57df\u4e0e\u6280\u672f\u63ed\u79d8"},{"location":"PS/base/#_2","text":"Photoshop\u4ea7\u751f\u7684\u6839\u672c\u539f\u56e0\u5c31\u662f\u8981\u89e3\u51b3\u56fe\u50cf\u660e\u6697\u7684\u8c03\u6574\u95ee\u9898\u3002\u7ecf\u8fc7\u8fd9\u4e48\u591a\u5e74\u7684\u53d1\u5c55\uff0c\u5b83\u5728\u6444\u5f71\u540e\u671f\u65b9\u9762\u7684\u5e94\u7528\uff0c\u5df2\u7ecf\u8fbe\u5230\u4e86\u51fa\u795e\u5165\u5316\u7684\u5883\u754c\u3002","title":"\u6444\u5f71\u540e\u671f\u5e94\u7528"},{"location":"PS/base/#_3","text":"\u5728\u5e73\u9762\u8bbe\u8ba1\u5de5\u4f5c\u4e2d\uff0c\u5bf9\u4e8e\u9875\u9762\u5185\u5bb9\u76f8\u5bf9\u8f83\u5c11\uff0c\u56fe\u50cf\u7f16\u8f91\u548c\u8c03\u6574\u5e94\u7528\u76f8\u5bf9\u8f83\u591a\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528Photoshop\u8f6f\u4ef6\u8fdb\u884c\u5e73\u9762\u8bbe\u8ba1\u548c\u6392\u7248\u64cd\u4f5c\uff0c\u64cd\u4f5c\u7b80\u5355\uff0c\u6548\u679c\u76f4\u89c2\u3002","title":"\u5e73\u9762\u8bbe\u8ba1\u5e94\u7528"},{"location":"PS/base/#_4","text":"\u968f\u7740\u5e73\u9762\u8bbe\u8ba1\u7684\u4e0d\u65ad\u53d1\u5c55\u548c\u5e94\u7528\u65b9\u9762\u7684\u5ef6\u4f38\uff0c\u7ed3\u5408\u56fe\u5c42\u8499\u7248\u3001\u56fe\u5c42\u6837\u5f0f\u548c\u56fe\u5c42\u6df7\u5408\u6a21\u5f0f\u7b49\u65b9\u9762\uff0c\u53ef\u4ee5\u8fdb\u884c\u4e0d\u540c\u7684\u7279\u6548\u5408\u6210\uff0c\u5e94\u7528\u4e8e\u6e38\u620f\u3001\u7535\u5f71\u7b49\u7684\u6d77\u62a5\u8bbe\u8ba1\u3002","title":"\u7279\u6548\u5408\u6210\u5e94\u7528"},{"location":"PS/base/#_5","text":"\u72ec\u7279\u7684\u8272\u5f69\u548c\u660e\u6697\u8c03\u8282\u65b9\u5f0f\uff0c\u65b9\u4fbf\u7684\u56fe\u5c42\u6df7\u5408\u64cd\u4f5c\uff0c\u8ba9Photoshop\u8f6f\u4ef6\u5728\u5ba4\u5185\u3001\u5916\u6548\u679c\u56fe\u548c\u4ea7\u54c1\u8bbe\u8ba1\u6548\u679c\u56fe\u7684\u540e\u671f\u5904\u7406\u65b9\u9762\u53d1\u6325\u4e86\u6781\u5927\u7684\u4f5c\u7528\u3002","title":"\u6548\u679c\u56fe\u540e\u671f\u5904\u7406\u5e94\u7528"},{"location":"PS/base/#_6","text":"","title":"\u56fe\u50cf\u5904\u7406\u57fa\u7840\u77e5\u8bc6"},{"location":"PS/base/#_7","text":"\u4f4d\u56fe\u4e5f\u79f0\u6805\u683c\u56fe\u50cf\uff0c\u662f\u7531\u50cf\u7d20\u6784\u6210\u7684\u3002\u6bcf\u4e2a\u50cf\u7d20\u88ab\u5206\u914d\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u4f4d\u7f6e\u548c\u989c\u8272\u503c\u3002\u4f4d\u56fe\u53ef\u4ee5\u5f88\u597d\u5730\u53cd\u6620\u56fe\u50cf\u660e\u6697\u7684\u53d8\u5316\u3001\u590d\u6742\u7684\u573a\u666f\u548c\u989c\u8272\u3002\u5b83\u7684\u7279\u70b9\u662f\u80fd\u8868\u73b0\u903c\u771f\u7684\u56fe\u50cf\u6548\u679c\uff0c\u4f46\u6587\u4ef6\u6bd4\u8f83\u5927\uff0c\u5e76\u4e14\u56fe\u50cf\u5728\u7f29\u653e\u65f6\u6e05\u6670\u5ea6\u4f1a\u964d\u4f4e\u5e76\u51fa\u73b0\u952f\u9f7f\u3002","title":"\u4f4d\u56fe\u56fe\u50cf"},{"location":"PS/base/#_8","text":"\u77e2\u91cf\u56fe\u4e5f\u79f0\u5411\u91cf\u56fe\uff0c\u4f7f\u7528\u76f4\u7ebf\u548c\u66f2\u7ebf\u6765\u63cf\u8ff0\u56fe\u5f62\uff0c\u8fd9\u4e9b\u56fe\u5f62\u7684\u5143\u7d20\u662f\u4e00\u4e9b\u70b9\u3001\u7ebf\u3001\u77e9\u5f62\u3001\u591a\u8fb9\u5f62\u3001\u5706\u548c\u5f27\u7ebf\u7b49\u3002\u5b83\u4eec\u90fd\u662f\u901a\u8fc7\u6570\u5b66\u516c\u5f0f\u8ba1\u7b97\u83b7\u5f97\u7684\uff0c\u6240\u4ee5\u77e2\u91cf\u56fe\u5f62\u6587\u4ef6\u4e00\u822c\u8f83\u5c0f\u3002\u77e2\u91cf\u56fe\u5f62\u7684\u4f18\u70b9\u662f\u65e0\u8bba\u653e\u5927\u3001\u7f29\u5c0f\u6216\u65cb\u8f6c\u7b49\u90fd\u4e0d\u4f1a\u5931\u771f\uff1b\u7f3a\u70b9\u662f\u96be\u4ee5\u8868\u73b0\u8272\u5f69\u5c42\u6b21\u4e30\u5bcc\u3001\u903c\u771f\u7684\u56fe\u50cf\u6548\u679c\uff0c\u800c\u4e14\u663e\u793a\u77e2\u91cf\u56fe\u4e5f\u9700\u8981\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4\u3002\u77e2\u91cf\u56fe\u5f62\u4e3b\u8981\u7528\u4e8e\u63d2\u56fe\u3001\u6587\u5b57\u548c\u53ef\u4ee5\u81ea\u7531\u7f29\u653e\u7684\u5fbd\u6807\u7b49\u56fe\u5f62\u3002\u4ee3\u8868\u6027\u7684\u77e2\u91cf\u8f6f\u4ef6\u6709 Adobe Illustrator\u3001CorelDraw\u3001CAD \u7b49\u3002","title":"\u77e2\u91cf\u56fe\u50cf"},{"location":"PS/base/#_9","text":"\u50cf\u7d20\u662f\u6784\u6210\u4f4d\u56fe\u56fe\u50cf\u7684\u6700\u57fa\u672c\u5355\u4f4d\u3002\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e00\u5f20\u666e\u901a\u7684\u6570\u7801\u76f8\u7247\u5fc5\u7136\u6709\u8fde\u7eed\u7684\u8272\u76f8\u548c\u660e\u6697\u8fc7\u6e21\u3002\u5982\u679c\u628a\u6570\u5b57\u56fe\u50cf\u653e\u5927\u6570\u500d\uff0c\u5219\u4f1a\u53d1\u73b0\u8fd9\u4e9b\u8fde\u7eed\u8272\u8c03\u662f\u7531\u8bb8\u591a\u8272\u5f69\u76f8\u8fd1\u7684\u5c0f\u65b9\u70b9\u7ec4\u6210\uff0c\u8fd9\u4e9b\u5c0f\u65b9\u70b9\u5c31\u662f\u50cf\u7d20\u3002\u4e00\u4e2a\u50cf\u7d20\u53ea\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u989c\u8272\u3002\u5982\u679c\u8981\u5236\u4f5c\u6e10\u53d8\u7684\u8272\u5e26\u6548\u679c\uff0c\u50cf\u7d20\u4e0d\u591f\u662f\u80af\u5b9a\u5b9e\u73b0\u4e0d\u4e86\u7684\u3002","title":"\u50cf\u7d20"},{"location":"PS/base/#_10","text":"\u56fe\u50cf\u5206\u8fa8\u7387\u7528\u4e8e\u63a7\u5236\u4f4d\u56fe\u56fe\u50cf\u4e2d\u7684\u7ec6\u8282\u7cbe\u7ec6\u5ea6\uff0c\u6d4b\u91cf\u5355\u4f4d\u662f\u50cf\u7d20 /\u82f1\u5bf8\uff08ppi\uff09\uff0c\u6bcf\u82f1\u5bf8\u7684\u50cf\u7d20\u8d8a\u591a\uff0c\u5206\u8fa8\u7387\u5c31\u8d8a\u9ad8\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u56fe\u50cf\u7684\u5206\u8fa8\u7387\u8d8a\u9ad8\uff0c\u5370\u5237\u51fa\u6765\u7684\u8d28\u91cf\u5c31\u8d8a\u597d\u3002","title":"\u56fe\u50cf\u5206\u8fa8\u7387"},{"location":"PS/base/#_11","text":"\u53ef\u4ee5\u901a\u8fc7\u6267\u884c\u201c\u56fe\u50cf > \u56fe\u50cf\u5927\u5c0f\u201d\u547d\u4ee4\u6253\u5f00\u201c\u56fe\u50cf\u5927\u5c0f\u201d\u5bf9\u8bdd\u6846\uff0c\u5728\u8be5\u5bf9\u8bdd\u6846\u4e2d\u5c31\u53ef\u4ee5\u67e5\u770b\u56fe\u50cf\u7684\u5927\u5c0f\u53ca\u5206\u8fa8\u7387\u3002","title":"\u67e5\u770b\u56fe\u50cf\u7684\u5927\u5c0f\u548c\u5206\u8fa8\u7387"},{"location":"PS/base/#_12","text":"\u56fe\u50cf\u7684\u989c\u8272\u6a21\u5f0f\u662f\u6307\u5c06\u67d0\u79cd\u989c\u8272\u8868\u73b0\u4e3a\u6570\u5b57\u5f62\u5f0f\u7684\u6a21\u578b\uff0c\u6216\u8005\u8bf4\u662f\u4e00\u79cd\u8bb0\u5f55\u56fe\u50cf\u989c\u8272\u7684\u65b9\u5f0f\u3002\u5728 Photoshop\u4e2d\uff0c\u989c\u8272\u6a21\u5f0f\u5206\u4e3a\u4f4d\u56fe\u3001\u7070\u5ea6\u3001\u53cc\u8272\u8c03\u3001\u7d22\u5f15\u989c\u8272\u3001RGB \u989c\u8272\u3001CMYK \u989c\u8272\u3001Lab \u989c\u8272\u548c\u591a\u901a\u9053 8 \u79cd\u6a21\u5f0f.","title":"\u56fe\u50cf\u7684\u989c\u8272\u6a21\u5f0f"},{"location":"PS/base/#_13","text":"\u4f4d\u6df1\u5ea6\u4e3b\u8981\u7528\u4e8e\u6307\u5b9a\u56fe\u50cf\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u53ef\u4ee5\u4f7f\u7528\u7684\u989c\u8272\u4fe1\u606f\u6570\u91cf\uff0c\u6bcf\u4e2a\u50cf\u7d20\u4f7f\u7528\u7684\u4fe1\u606f\u4f4d\u6570\u8d8a\u591a\uff0c\u53ef\u7528\u7684\u989c\u8272\u5c31\u8d8a\u591a\uff0c\u8272\u5f69\u7684\u8868\u73b0\u5c31\u8d8a\u903c\u771f\u3002\u6267\u884c\u201c\u56fe\u50cf > \u6a21\u5f0f\u201d\u547d\u4ee4\uff0c\u5b50\u83dc\u5355\u4e2d\u7684\u201c8 \u4f4d / \u901a\u9053\u201d\u3001\u201c16 \u4f4d / \u901a\u9053\u201d\u548c\u201c32 \u4f4d / \u901a\u9053\u201d3 \u4e2a\u5b50\u547d\u4ee4\u5c31\u662f\u901a\u5e38\u6240\u8bf4\u7684\u201c\u4f4d\u6df1\u5ea6\u201d\u3002","title":"\u56fe\u50cf\u7684\u4f4d\u6df1\u5ea6"},{"location":"PS/base/#_14","text":"\u8272\u57df\u662f\u53e6\u4e00\u79cd\u5f62\u5f0f\u7684\u8272\u5f69\u6a21\u578b\uff0c\u5b83\u5177\u6709\u7279\u5b9a\u7684\u8272\u5f69\u8303\u56f4\u3002\u4f8b\u5982\uff0cRGB \u8272\u5f69\u6a21\u578b\u5c31\u6709\u597d\u51e0\u4e2a\u8272\u57df\uff0c\u5373 Adobe RGB\u3001sRGB \u548c ProPhoto RGB \u7b49\u3002\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u81ea\u7136\u754c\u4e2d\u53ef\u89c1\u5149\u8c31\u7684\u989c\u8272\u7ec4\u6210\u4e86\u6700\u5927\u7684\u8272\u57df\u7a7a\u95f4\uff0c\u8be5\u8272\u57df\u7a7a\u95f4\u4e2d\u5305\u542b\u4e86\u4eba\u773c\u6240\u80fd\u89c1\u5230\u7684\u6240\u6709\u989c\u8272\u3002","title":"\u8272\u57df"},{"location":"PS/base/#_15","text":"\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u5982\u679c\u663e\u793a\u7684\u989c\u8272\u8d85\u51fa\u4e86 CMYK \u989c\u8272\u6a21\u5f0f\u7684\u8272\u57df\u8303\u56f4\uff0c\u5c31\u4f1a\u51fa\u73b0\u201c\u6ea2\u8272\u201d\u3002\u5728 RGB \u989c\u8272\u6a21\u5f0f\u4e0b\uff0c\u5728\u56fe\u50cf\u7a97\u53e3\u4e2d\u5c06\u5149\u6807\u653e\u7f6e\u5728\u6ea2\u8272\u4e0a\uff0c\u201c\u4fe1\u606f\u201d\u9762\u677f\u4e2d\u7684 CMYK \u503c\u65c1\u4f1a\u51fa\u73b0\u4e00\u4e2a\u611f\u53f9\u53f7\u3002\u5f53\u7528\u6237\u9009\u62e9\u4e86\u4e00\u79cd\u6ea2\u8272\u65f6\uff0c\u201c\u62fe\u8272\u5668\u201d\u5bf9\u8bdd\u6846\u548c\u201c\u989c\u8272\u201d\u9762\u677f\u4e2d\u90fd\u4f1a\u51fa\u73b0\u4e00\u4e2a\u201c\u6ea2\u8272\u8b66\u544a\u201d\u56fe\u6807\uff08\u9ec4\u8272\u4e09\u89d2\u5f62\u611f\u53f9\u53f7\uff09 \uff0c\u540c\u65f6\u8272\u5757\u4e2d\u4f1a\u663e\u793a\u4e0e\u5f53\u524d\u6240\u9009\u989c\u8272\u6700\u63a5\u8fd1\u7684 CMYK \u989c\u8272\uff0c\u5355\u51fb\u5373\u53ef\u9009\u5b9a\u8272\u5757\u4e2d\u7684\u989c\u8272\u3002","title":"\u6ea2\u8272"}]}